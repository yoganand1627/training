-- Sequence Alter SQL

CREATE SEQUENCE CAPS.SEQ_SAFETY_RESOURCE_CHILD
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
GRANT SELECT ON CAPS.SEQ_SAFETY_RESOURCE_CHILD TO CAPSBAT
;
GRANT SELECT ON CAPS.SEQ_SAFETY_RESOURCE_CHILD TO CAPSON
;
CREATE SEQUENCE CAPS.SEQ_SR_HOUSEHOLD_MEMBERS
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
GRANT SELECT ON CAPS.SEQ_SR_HOUSEHOLD_MEMBERS TO CAPSBAT
;
GRANT SELECT ON CAPS.SEQ_SR_HOUSEHOLD_MEMBERS TO CAPSON
;

-- Drop Constraint, Rename and Create Table SQL

CREATE TABLE CAPS.SAFETY_RESOURCE
(
    ID_EVENT       NUMBER(16) NOT NULL,
    DT_LAST_UPDATE DATE       NOT NULL,
    ID_PRIMARY     NUMBER(16) NOT NULL,
    ID_SECONDARY   NUMBER(16)     NULL,
    CONSTRAINT PK_SAFETY_RESOURCE
    PRIMARY KEY (ID_EVENT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
TABLESPACE DATA01
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.SAFETY_RESOURCE IS
'Table tracks safety resources before DFCS takes custody'
;
COMMENT ON COLUMN CAPS.SAFETY_RESOURCE.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.SAFETY_RESOURCE TO CAPSBAT
;
GRANT INSERT ON CAPS.SAFETY_RESOURCE TO CAPSBAT
;
GRANT SELECT ON CAPS.SAFETY_RESOURCE TO CAPSBAT
;
GRANT UPDATE ON CAPS.SAFETY_RESOURCE TO CAPSBAT
;
GRANT DELETE ON CAPS.SAFETY_RESOURCE TO CAPSON
;
GRANT INSERT ON CAPS.SAFETY_RESOURCE TO CAPSON
;
GRANT SELECT ON CAPS.SAFETY_RESOURCE TO CAPSON
;
GRANT UPDATE ON CAPS.SAFETY_RESOURCE TO CAPSON
;
GRANT SELECT ON CAPS.SAFETY_RESOURCE TO OPERATOR
;
CREATE TABLE CAPS.SAFETY_RESOURCE_CHILD
(
    ID_SR_CHILD      NUMBER(16)  NOT NULL,
    ID_SR_EVENT      NUMBER(16)  NOT NULL,
    DT_LAST_UPDATE   DATE        NOT NULL,
    ID_CHILD         NUMBER(16)  NOT NULL,
    DT_START         DATE            NULL,
    DT_END           DATE            NULL,
    CD_REL_PRIMARY   VARCHAR2(3) NOT NULL,
    CD_REL_SECONDARY VARCHAR2(3)     NULL,
    CONSTRAINT PK_SAFETY_RESOURCE_CHILD
    PRIMARY KEY (ID_SR_CHILD)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
TABLESPACE DATA01
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.SAFETY_RESOURCE_CHILD IS
'Table tracks children under in safety resource care before DFCS takes custody'
;
COMMENT ON COLUMN CAPS.SAFETY_RESOURCE_CHILD.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.SAFETY_RESOURCE_CHILD TO CAPSBAT
;
GRANT INSERT ON CAPS.SAFETY_RESOURCE_CHILD TO CAPSBAT
;
GRANT SELECT ON CAPS.SAFETY_RESOURCE_CHILD TO CAPSBAT
;
GRANT UPDATE ON CAPS.SAFETY_RESOURCE_CHILD TO CAPSBAT
;
GRANT DELETE ON CAPS.SAFETY_RESOURCE_CHILD TO CAPSON
;
GRANT INSERT ON CAPS.SAFETY_RESOURCE_CHILD TO CAPSON
;
GRANT SELECT ON CAPS.SAFETY_RESOURCE_CHILD TO CAPSON
;
GRANT UPDATE ON CAPS.SAFETY_RESOURCE_CHILD TO CAPSON
;
GRANT SELECT ON CAPS.SAFETY_RESOURCE_CHILD TO OPERATOR
;
CREATE TABLE CAPS.SAFETY_RESOURCE_NARR
(
    ID_EVENT             NUMBER(16) NOT NULL,
    DT_LAST_UPDATE       DATE       NOT NULL,
    NARRATIVE            LONG RAW       NULL,
    ID_DOCUMENT_TEMPLATE NUMBER(16) NOT NULL,
    CONSTRAINT PK_SAFETY_RESOURCE_NARR
    PRIMARY KEY (ID_EVENT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
TABLESPACE DATA01
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON COLUMN CAPS.SAFETY_RESOURCE_NARR.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.SAFETY_RESOURCE_NARR TO CAPSBAT
;
GRANT INSERT ON CAPS.SAFETY_RESOURCE_NARR TO CAPSBAT
;
GRANT SELECT ON CAPS.SAFETY_RESOURCE_NARR TO CAPSBAT
;
GRANT UPDATE ON CAPS.SAFETY_RESOURCE_NARR TO CAPSBAT
;
GRANT DELETE ON CAPS.SAFETY_RESOURCE_NARR TO CAPSON
;
GRANT INSERT ON CAPS.SAFETY_RESOURCE_NARR TO CAPSON
;
GRANT SELECT ON CAPS.SAFETY_RESOURCE_NARR TO CAPSON
;
GRANT UPDATE ON CAPS.SAFETY_RESOURCE_NARR TO CAPSON
;
GRANT SELECT ON CAPS.SAFETY_RESOURCE_NARR TO OPERATOR
;
CREATE TABLE CAPS.SR_HOUSEHOLD_MEMBERS
(
    ID_SR_HS_MEMBER NUMBER(16) NOT NULL,
    ID_SR_EVENT     NUMBER(16) NOT NULL,
    DT_LAST_UPDATE  DATE       NOT NULL,
    ID_PERSON       NUMBER(16) NOT NULL,
    CONSTRAINT PK_PR_HOUSEHOLD_MEMBERS
    PRIMARY KEY (ID_SR_HS_MEMBER)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
TABLESPACE DATA01
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.SR_HOUSEHOLD_MEMBERS IS
'Table tracks household members before DFCS takes custody of child'
;
COMMENT ON COLUMN CAPS.SR_HOUSEHOLD_MEMBERS.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.SR_HOUSEHOLD_MEMBERS TO CAPSBAT
;
GRANT INSERT ON CAPS.SR_HOUSEHOLD_MEMBERS TO CAPSBAT
;
GRANT SELECT ON CAPS.SR_HOUSEHOLD_MEMBERS TO CAPSBAT
;
GRANT UPDATE ON CAPS.SR_HOUSEHOLD_MEMBERS TO CAPSBAT
;
GRANT DELETE ON CAPS.SR_HOUSEHOLD_MEMBERS TO CAPSON
;
GRANT INSERT ON CAPS.SR_HOUSEHOLD_MEMBERS TO CAPSON
;
GRANT SELECT ON CAPS.SR_HOUSEHOLD_MEMBERS TO CAPSON
;
GRANT UPDATE ON CAPS.SR_HOUSEHOLD_MEMBERS TO CAPSON
;
GRANT SELECT ON CAPS.SR_HOUSEHOLD_MEMBERS TO OPERATOR
;

-- Add Referencing Foreign Keys SQL

ALTER TABLE CAPS.SAFETY_RESOURCE 
    ADD CONSTRAINT FK_SAFETY_RSRC_PRIM_PER
FOREIGN KEY (ID_PRIMARY)
REFERENCES CAPS.PERSON_ENC (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.SAFETY_RESOURCE 
    ADD CONSTRAINT FK_SAFETY_RSRC_SEC
FOREIGN KEY (ID_SECONDARY)
REFERENCES CAPS.PERSON_ENC (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.SAFETY_RESOURCE 
    ADD CONSTRAINT FK_SAFETY_RSRC_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.SAFETY_RESOURCE_CHILD 
    ADD CONSTRAINT FK_SAFETY_RSRC_CHILD_PERS
FOREIGN KEY (ID_CHILD)
REFERENCES CAPS.PERSON_ENC (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.SAFETY_RESOURCE_CHILD 
    ADD CONSTRAINT FK_SR_CHILD_SR
FOREIGN KEY (ID_SR_EVENT)
REFERENCES CAPS.SAFETY_RESOURCE (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.SAFETY_RESOURCE_NARR 
    ADD CONSTRAINT FK_SR_NARR_SR
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.SAFETY_RESOURCE (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.SR_HOUSEHOLD_MEMBERS 
    ADD CONSTRAINT FK_SR_HOUSE_MEM_PERS
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON_ENC (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.SR_HOUSEHOLD_MEMBERS 
    ADD CONSTRAINT FK_SR_HOUSE_MEM_SR
FOREIGN KEY (ID_SR_EVENT)
REFERENCES CAPS.SAFETY_RESOURCE (ID_EVENT)
ENABLE
;

-- Alter Trigger SQL
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_SAFETY_RESOURCE
BEFORE UPDATE
ON CAPS.SAFETY_RESOURCE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_SAFETY_RESOURCE
BEFORE INSERT
ON CAPS.SAFETY_RESOURCE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_SAFETY_RESOURCE_CHILD
BEFORE UPDATE
ON CAPS.SAFETY_RESOURCE_CHILD
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_SAFETY_RESOURCE_CHILD
BEFORE INSERT
ON CAPS.SAFETY_RESOURCE_CHILD
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:NEW.ID_SR_CHILD IS NULL OR :new.ID_SR_CHILD = 0) THEN
		SELECT	SEQ_SAFETY_RESOURCE_CHILD.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_SR_CHILD := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_SAFETY_RESOURCE_NARR
BEFORE UPDATE
ON CAPS.SAFETY_RESOURCE_NARR
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_SAFETY_RESOURCE_NARR
BEFORE INSERT
ON CAPS.SAFETY_RESOURCE_NARR
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_SR_HOUSEHOLD_MEMBERS
BEFORE UPDATE
ON CAPS.SR_HOUSEHOLD_MEMBERS
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_SR_HOUSEHOLD_MEMBERS
BEFORE INSERT
ON CAPS.SR_HOUSEHOLD_MEMBERS
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:NEW.ID_SR_EVENT IS NULL OR :new.ID_SR_EVENT = 0) THEN
		SELECT	SEQ_SR_HOUSEHOLD_MEMBERS.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_SR_EVENT := dummy;
	END IF;
END;
/

{ call dbms_utility.compile_schema('CAPS') };
{ call dbms_utility.compile_schema('CAPSBAT') };
{ call dbms_utility.compile_schema('CAPSON') };
{ call dbms_utility.compile_schema('OPERATOR') };
{ call dbms_utility.compile_schema('SACWISIFC') };

insert into caps.schema_version (id_schema_version, application_version, comments)
                        values (314, 'SacwisRev2', '4 new safety resource tables');                        
commit;
