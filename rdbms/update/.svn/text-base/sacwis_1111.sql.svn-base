--STGAP00017126 - Release(5.0) ECEM 5.0:Prog Code Mtnt triggers

/
CREATE OR REPLACE TRIGGER CAPS.TUBR_UAS_PROGRAM_CODE_MTNT
BEFORE UPDATE
ON CAPS.UAS_PROGRAM_CODE_MTNT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
  :new.DT_LAST_UPDATE := SYSDATE;

  IF (:old.TXT_PROGRAM_DESC <> :new.TXT_PROGRAM_DESC) THEN
  BEGIN
    UPDATE CODES_TABLES
    SET DECODE = :NEW.TXT_PROGRAM_DESC
    WHERE CODE_TYPE = 'CPRGCODE' AND CODE = :NEW.CD_UAS;
    UPDATE CODES_TABLES
    SET DECODE = :NEW.TXT_PROGRAM_DESC
    WHERE CODE_TYPE = 'CPROGCDE' AND CODE = :NEW.CD_UAS;
    UPDATE CODES_TABLES
    SET DECODE = :NEW.TXT_PROGRAM_DESC
    WHERE CODE_TYPE = 'CPRGAREA' AND CODE = :NEW.CD_UAS;
  END;
  END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_UAS_PROGRAM_CODE_MTNT
BEFORE INSERT
ON CAPS.UAS_PROGRAM_CODE_MTNT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
   dummy number;
   zCdUas VARCHAR2(20);
   zTxtPrgDesc  VARCHAR2(370);
BEGIN
:NEW.DT_LAST_UPDATE := sysdate;
  -- TIMESTAMP
  if :NEW.ID_UAS_PROGRAM_CODE_MTNT=0 then
    SELECT CAPS.SEQ_UAS_PROGRAM_CODE_MTNT.NEXTVAL INTO dummy  FROM DUAL;
    :NEW.ID_UAS_PROGRAM_CODE_MTNT := dummy;
  end if;
  -- INSERT/UPDATE TO CPRGCODE
  BEGIN
  SELECT code, decode into zCdUas, zTxtPrgDesc from CAPS.CODES_TABLES 
  where code = :new.cd_uas
  and code_type = 'CPRGCODE';
  IF (zTxtPrgDesc <> :new.TXT_PROGRAM_DESC) THEN
    UPDATE CAPS.CODES_TABLES
    SET DECODE = :NEW.TXT_PROGRAM_DESC
    WHERE CODE_TYPE = 'CPRGCODE' AND CODE = :NEW.CD_UAS;
  END IF;
  EXCEPTION
  WHEN OTHERS THEN
  IF SQL%NOTFOUND THEN
    INSERT INTO CAPS.CODES_TABLES(code_type, code, decode, dt_end, dt_last_update) 
    VALUES ('CPRGCODE', :NEW.CD_UAS, :NEW.TXT_PROGRAM_DESC, NULL, SYSDATE);   
  end if; 
  END;
  -- INSERT/UPDATE TO CPROGCDE
  BEGIN   
  SELECT code, decode into zCdUas, zTxtPrgDesc from CAPS.CODES_TABLES 
  where code = :new.cd_uas
  and code_type = 'CPROGCDE';
  IF (zTxtPrgDesc <> :new.TXT_PROGRAM_DESC) THEN
    UPDATE CAPS.CODES_TABLES
    SET DECODE = :NEW.TXT_PROGRAM_DESC
    WHERE CODE_TYPE = 'CPROGCDE' AND CODE = :NEW.CD_UAS;
  END IF;
  EXCEPTION
  WHEN OTHERS THEN
  IF SQL%NOTFOUND THEN
    INSERT INTO CAPS.CODES_TABLES(code_type, code, decode, dt_end, dt_last_update) 
    VALUES ('CPROGCDE', :NEW.CD_UAS, :NEW.TXT_PROGRAM_DESC, NULL, SYSDATE);   
  end if;  
  END;
  -- INSERT/UPDATE TO CPRGAREA
  BEGIN
  SELECT code, decode into zCdUas, zTxtPrgDesc from CAPS.CODES_TABLES 
  where code = :new.cd_uas
  and code_type = 'CPRGAREA';
  IF (zTxtPrgDesc <> :new.TXT_PROGRAM_DESC) THEN
    UPDATE CAPS.CODES_TABLES
    SET DECODE = :NEW.TXT_PROGRAM_DESC
    WHERE CODE_TYPE = 'CPRGAREA' AND CODE = :NEW.CD_UAS;
  END IF;
  EXCEPTION
  WHEN OTHERS THEN
  IF SQL%NOTFOUND THEN
    INSERT INTO CAPS.CODES_TABLES(code_type, code, decode, dt_end, dt_last_update) 
    VALUES ('CPRGAREA', :NEW.CD_UAS, :NEW.TXT_PROGRAM_DESC, NULL, SYSDATE);
   END IF;
  END;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_UAS_ENT_CODE_MTNT
BEFORE INSERT
ON CAPS.UAS_ENT_CODE_MTNT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
   dummy number;
   zCdEntCode VARCHAR2(3);
   zTxtEntDesc VARCHAR2(370);
BEGIN
:NEW.DT_LAST_UPDATE := sysdate;
  if :NEW.ID_UAS_ENT_CODE_MTNT=0 then
      SELECT CAPS.SEQ_UAS_ENT_CODE_MTNT.NEXTVAL INTO dummy  FROM DUAL;
      :NEW.ID_UAS_ENT_CODE_MTNT := dummy;
  end if;
  
  select code, decode into zCdEntCode, zTxtEntDesc from CAPS.CODES_TABLES 
  where code = :new.cd_ent_code
  and code_type = 'CENTCODE';
  
  if (zTxtEntDesc <> :NEW.TXT_ENT_DESC) then
    UPDATE CAPS.CODES_TABLES
    SET DECODE = :NEW.TXT_ENT_DESC
    WHERE CODE_TYPE = 'CENTCODE' AND CODE = :NEW.CD_ENT_CODE;
  end if;
    
  EXCEPTION
    WHEN OTHERS THEN
    IF SQL%NOTFOUND THEN
      INSERT INTO CAPS.CODES_TABLES(code_type, code, decode, dt_end, dt_last_update) 
      VALUES ('CENTCODE', :NEW.CD_ENT_CODE, :NEW.TXT_ENT_DESC, NULL, SYSDATE);
    END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_UAS_ENT_CODE_MTNT
BEFORE UPDATE
ON CAPS.UAS_ENT_CODE_MTNT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
  :new.DT_LAST_UPDATE := SYSDATE;
  IF (:old.TXT_ENT_DESC <> :new.TXT_ENT_DESC) THEN
  BEGIN
    UPDATE CAPS.CODES_TABLES
    SET DECODE = :NEW.TXT_ENT_DESC
    WHERE CODE_TYPE = 'CENTCODE' AND CODE = :NEW.CD_ENT_CODE;
  END;
  END IF;
END;
/


insert into caps.schema_version(id_schema_version,application_version,comments)
            values (1112, 'SacwisRev5', 'Release 5.0 - DBCR 17126');

commit;
