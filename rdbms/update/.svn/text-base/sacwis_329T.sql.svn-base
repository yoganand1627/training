-- Release 2.5 

-- Sequence Alter SQL

CREATE SEQUENCE CAPS.SEQ_NON_COMPLIANCE
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
GRANT SELECT ON CAPS.SEQ_NON_COMPLIANCE TO CAPSBAT
;
GRANT SELECT ON CAPS.SEQ_NON_COMPLIANCE TO CAPSON
;
CREATE SEQUENCE CAPS.SEQ_NON_COMPLIANCE_CBX
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
GRANT SELECT ON CAPS.SEQ_NON_COMPLIANCE_CBX TO CAPSBAT
;
GRANT SELECT ON CAPS.SEQ_NON_COMPLIANCE_CBX TO CAPSON
;

-- Drop Constraint, Rename and Create Table SQL

CREATE TABLE CAPS.NON_COMPLIANCE
(
    ID_NON_COMPLIANCE NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE    DATE          NOT NULL,
    ID_EVENT          NUMBER(16)    NOT NULL,
    ID_CASE           NUMBER(16)    NOT NULL,
    CD_NON_COMPLIANCE VARCHAR2(3)       NULL,
    IND_DOC_COMPLETED VARCHAR2(1)       NULL,
    DT_TRACKING       DATE              NULL,
    TXT_COMMENTS      VARCHAR2(300)     NULL,
    CD_COUNTY         VARCHAR2(3)       NULL,
    DT_OF_VIOLATION   DATE              NULL,
    DT_EFFECT_FROM    DATE              NULL,
    DT_EFFECT_TO      DATE              NULL,
    CONSTRAINT PK_NON_COMPLIANCE
    PRIMARY KEY (ID_NON_COMPLIANCE)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
TABLESPACE DATA01
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.NON_COMPLIANCE IS
'This table holds both corrective action plans and policy violations by employees'
;
COMMENT ON COLUMN CAPS.NON_COMPLIANCE.DT_LAST_UPDATE IS
'Date of insert or last update'
;
COMMENT ON COLUMN CAPS.NON_COMPLIANCE.CD_COUNTY IS
'County Code'
;
GRANT DELETE ON CAPS.NON_COMPLIANCE TO CAPSBAT
;
GRANT INSERT ON CAPS.NON_COMPLIANCE TO CAPSBAT
;
GRANT SELECT ON CAPS.NON_COMPLIANCE TO CAPSBAT
;
GRANT UPDATE ON CAPS.NON_COMPLIANCE TO CAPSBAT
;
GRANT DELETE ON CAPS.NON_COMPLIANCE TO CAPSON
;
GRANT INSERT ON CAPS.NON_COMPLIANCE TO CAPSON
;
GRANT SELECT ON CAPS.NON_COMPLIANCE TO CAPSON
;
GRANT UPDATE ON CAPS.NON_COMPLIANCE TO CAPSON
;
GRANT SELECT ON CAPS.NON_COMPLIANCE TO OPERATOR
;
CREATE TABLE CAPS.NON_COMPLIANCE_CBX
(
    ID_NON_COMPLIANCE_CBX      NUMBER(16)   NOT NULL,
    DT_LAST_UPDATE             DATE         NOT NULL,
    ID_NON_COMPLIANCE          NUMBER(16)   NOT NULL,
    CD_NON_COMPLIANCE_CBX      VARCHAR2(3)      NULL,
    CD_NON_COMPLIANCE_CBX_TYPE VARCHAR2(20)     NULL,
    CONSTRAINT PK_NON_COMPLIANCE_CBX
    PRIMARY KEY (ID_NON_COMPLIANCE_CBX)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
TABLESPACE DATA01
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.NON_COMPLIANCE_CBX IS
'Holds selected checkboxes for the Non Compliance pages (Policy Violation and Corrective Action Plan)'
;
COMMENT ON COLUMN CAPS.NON_COMPLIANCE_CBX.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.NON_COMPLIANCE_CBX TO CAPSBAT
;
GRANT INSERT ON CAPS.NON_COMPLIANCE_CBX TO CAPSBAT
;
GRANT SELECT ON CAPS.NON_COMPLIANCE_CBX TO CAPSBAT
;
GRANT UPDATE ON CAPS.NON_COMPLIANCE_CBX TO CAPSBAT
;
GRANT DELETE ON CAPS.NON_COMPLIANCE_CBX TO CAPSON
;
GRANT INSERT ON CAPS.NON_COMPLIANCE_CBX TO CAPSON
;
GRANT SELECT ON CAPS.NON_COMPLIANCE_CBX TO CAPSON
;
GRANT UPDATE ON CAPS.NON_COMPLIANCE_CBX TO CAPSON
;
GRANT SELECT ON CAPS.NON_COMPLIANCE_CBX TO OPERATOR
;
CREATE TABLE CAPS.NON_COMPLIANCE_CHILD
(
    ID_NON_COMPLIANCE    NUMBER(16)  NOT NULL,
    ID_PERSON            NUMBER(16)  NOT NULL,
    DT_LAST_UPDATE       DATE        NOT NULL,
    IND_HOME_VIOLATION   VARCHAR2(1)     NULL,
    IND_ADOPTIVE_PROCESS VARCHAR2(1)     NULL,
    CONSTRAINT PK_NON_COMPLIANCE_CHILD
    PRIMARY KEY (ID_NON_COMPLIANCE,ID_PERSON)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
TABLESPACE DATA01
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.NON_COMPLIANCE_CHILD IS
'Hold children involved in policy violation or correction action plan and their attributes'
;
COMMENT ON COLUMN CAPS.NON_COMPLIANCE_CHILD.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.NON_COMPLIANCE_CHILD TO CAPSBAT
;
GRANT INSERT ON CAPS.NON_COMPLIANCE_CHILD TO CAPSBAT
;
GRANT SELECT ON CAPS.NON_COMPLIANCE_CHILD TO CAPSBAT
;
GRANT UPDATE ON CAPS.NON_COMPLIANCE_CHILD TO CAPSBAT
;
GRANT DELETE ON CAPS.NON_COMPLIANCE_CHILD TO CAPSON
;
GRANT INSERT ON CAPS.NON_COMPLIANCE_CHILD TO CAPSON
;
GRANT SELECT ON CAPS.NON_COMPLIANCE_CHILD TO CAPSON
;
GRANT UPDATE ON CAPS.NON_COMPLIANCE_CHILD TO CAPSON
;
GRANT SELECT ON CAPS.NON_COMPLIANCE_CHILD TO OPERATOR
;

-- Alter Index SQL

CREATE INDEX CAPS.IND_NON_COMPLIANCE_2
    ON CAPS.NON_COMPLIANCE(ID_CASE)
TABLESPACE INDEX01
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCOMPRESS
;
CREATE INDEX CAPS.IND_NON_COMPLIANCE_1
    ON CAPS.NON_COMPLIANCE(ID_EVENT)
TABLESPACE INDEX01
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCOMPRESS
;
CREATE INDEX CAPS.IND_NON_COMPLIANCE_CBX_1
    ON CAPS.NON_COMPLIANCE_CBX(ID_NON_COMPLIANCE)
TABLESPACE INDEX01
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCOMPRESS
;
CREATE INDEX CAPS.IND_NON_COMPLIANCE_CHILD_1
    ON CAPS.NON_COMPLIANCE_CHILD(ID_PERSON)
TABLESPACE INDEX01
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCOMPRESS
;

-- Add Referencing Foreign Keys SQL

ALTER TABLE CAPS.NON_COMPLIANCE 
    ADD CONSTRAINT FK_NON_COMPLIANCE_2
FOREIGN KEY (ID_CASE)
REFERENCES CAPS.CAPS_CASE (ID_CASE)
ENABLE
;
ALTER TABLE CAPS.NON_COMPLIANCE 
    ADD CONSTRAINT FK_NON_COMPLIANCE_1
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.NON_COMPLIANCE_CBX 
    ADD CONSTRAINT FK_NON_COMP_CBX_NON_COMP
FOREIGN KEY (ID_NON_COMPLIANCE)
REFERENCES CAPS.NON_COMPLIANCE (ID_NON_COMPLIANCE)
ENABLE
;
ALTER TABLE CAPS.NON_COMPLIANCE_CHILD 
    ADD CONSTRAINT FK_NON_COMPLIANCE_CHILD_2
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.NON_COMPLIANCE_CHILD 
    ADD CONSTRAINT FK_NON_COMPLIANCE_CHILD_1
FOREIGN KEY (ID_NON_COMPLIANCE)
REFERENCES CAPS.NON_COMPLIANCE (ID_NON_COMPLIANCE)
ENABLE
;

-- Alter Trigger SQL
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_NON_COMPLIANCE
BEFORE UPDATE
ON CAPS.NON_COMPLIANCE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_NON_COMPLIANCE
BEFORE INSERT
ON CAPS.NON_COMPLIANCE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
dummy number;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;

	IF (:new.ID_NON_COMPLIANCE is null or :new.ID_NON_COMPLIANCE=0) then
	    SELECT seq_NON_COMPLIANCE.nextval INTO dummy FROM dual;
	    :new.ID_NON_COMPLIANCE := dummy;
	END IF;

END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_NON_COMPLIANCE_CBX
BEFORE UPDATE
ON CAPS.NON_COMPLIANCE_CBX
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_NON_COMPLIANCE_CBX
BEFORE INSERT
ON CAPS.NON_COMPLIANCE_CBX
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
dummy number;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;

	IF (:new.ID_NON_COMPLIANCE_CBX is null or :new.ID_NON_COMPLIANCE_CBX=0) then
	    SELECT seq_NON_COMPLIANCE_CBX.nextval INTO dummy FROM dual;
	    :new.ID_NON_COMPLIANCE_CBX := dummy;
	END IF;

END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_NON_COMPLIANCE_CHILD
BEFORE UPDATE
ON CAPS.NON_COMPLIANCE_CHILD
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_NON_COMPLIANCE_CHILD
BEFORE INSERT
ON CAPS.NON_COMPLIANCE_CHILD
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/

grant select on CAPS.AFCARS_VIEW to capson, capsbat, operator;

{ call dbms_utility.compile_schema('CAPS') };
{ call dbms_utility.compile_schema('CAPSBAT') };
{ call dbms_utility.compile_schema('CAPSON') };
{ call dbms_utility.compile_schema('OPERATOR') };
{ call dbms_utility.compile_schema('SACWISIFC') };

-- change STGAP00009084
Update caps.Metaphor
set txt_tab_url = '/workload/EventSearch/displayEventList',
    txt_tab_constant = 'NON_COMPLIANCE_DOCUMENTATION',
    txt_tab = 'Non-Compliance<br>Documentation'
where id_tab = 680;

Update caps.Metaphor
set txt_tab_url = '/workload/EventSearch/displayEventList',
    txt_tab_constant = 'POLICY_VIOLATION_EVENTLIST',
    txt_tab = 'Policy Violation'
where id_tab = 1380;

-- Updating CODES_TABLES for Policy Violiation and Corrective Action Plan
Update caps.CODES_TABLES
set DECODE = 'Policy Violation',
    DT_END = null
Where CODE_TYPE = 'CEVNTTYP'
And CODE = 'VLT';

Update caps.CODES_TABLES
set DT_END = null
Where CODE_TYPE = 'CEVNTTYP'
And CODE = 'CRA';

-- INSERTING into TASK for Policy Violiation and Corrective Action Plan
Insert into caps.TASK (CD_TASK,DT_LAST_UPDATE,CD_TASK_EVENT_STATUS,CD_TASK_EVENT_TYPE,CD_TASK_LIST_WINDOW,CD_TASK_PRIOR,CD_TASK_STAGE,CD_TASK_STAGE_PROGRAM,CD_TASK_TOP_WINDOW,IND_TASK_DETAIL_ENABLE,IND_TASK_EVENT_CREATE,IND_TASK_EVENT_NAVIG,IND_TASK_LIST_ENABLE,IND_TASK_MULTIPLE_INSTANCE,IND_TASK_NEW_ENABLE,IND_TASK_NEW_USING,IND_TASK_NU_ACROSS_CASE,IND_TASK_RTRV_PRIOR_STAGE,IND_TASK_SHOW_IN_LIST,IND_TASK_TODO_ENABLE,TXT_TASK_DECODE,TXT_1ST_TAB,TXT_2ND_TAB,TXT_3RD_TAB,TXT_EVENT_DETAIL_URL,IND_TASK_CODE_PREFER,IND_TASK_NEW_CASE_TODO_ENABLE,IND_TASK_FORCE_EVENT_LINK,IND_STAGE_CLOSURE) 
values ('8091',to_date('04-JUN-08','DD-MON-RR'),' ','VLT','CCMN51W',null,'FAD','CPS','CCMN65W',null,'0','1',null,'1',null,'1','0','0','1',null,'Policy Violation','CASE_CASESEARCH','NON_COMPLIANCE_DOCUMENTATION','POLICY_VIOLATION_EVENTLIST','/fad/PolicyViolation/displayPolicyViolation',2,'1','0','0');

Insert into caps.TASK (CD_TASK,DT_LAST_UPDATE,CD_TASK_EVENT_STATUS,CD_TASK_EVENT_TYPE,CD_TASK_LIST_WINDOW,CD_TASK_PRIOR,CD_TASK_STAGE,CD_TASK_STAGE_PROGRAM,CD_TASK_TOP_WINDOW,IND_TASK_DETAIL_ENABLE,IND_TASK_EVENT_CREATE,IND_TASK_EVENT_NAVIG,IND_TASK_LIST_ENABLE,IND_TASK_MULTIPLE_INSTANCE,IND_TASK_NEW_ENABLE,IND_TASK_NEW_USING,IND_TASK_NU_ACROSS_CASE,IND_TASK_RTRV_PRIOR_STAGE,IND_TASK_SHOW_IN_LIST,IND_TASK_TODO_ENABLE,TXT_TASK_DECODE,TXT_1ST_TAB,TXT_2ND_TAB,TXT_3RD_TAB,TXT_EVENT_DETAIL_URL,IND_TASK_CODE_PREFER,IND_TASK_NEW_CASE_TODO_ENABLE,IND_TASK_FORCE_EVENT_LINK,IND_STAGE_CLOSURE) 
values ('8092',to_date('04-JUN-08','DD-MON-RR'),' ','CRA','CCMN51W',null,'FAD','CPS','CCMN65W',null,'0','1',null,'1',null,'1','0','0','1',null,'Corrective Action Plan','CASE_CASESEARCH','NON_COMPLIANCE_DOCUMENTATION','CORRECTIVE_ACTION_PLAN_EVENTLIST','/fad/CorrectiveActionPlan/displayCorrectiveActionPlan',3,'1','0','0');

Insert into caps.TASK (CD_TASK,DT_LAST_UPDATE,CD_TASK_EVENT_STATUS,CD_TASK_EVENT_TYPE,CD_TASK_LIST_WINDOW,CD_TASK_PRIOR,CD_TASK_STAGE,CD_TASK_STAGE_PROGRAM,CD_TASK_TOP_WINDOW,IND_TASK_DETAIL_ENABLE,IND_TASK_EVENT_CREATE,IND_TASK_EVENT_NAVIG,IND_TASK_LIST_ENABLE,IND_TASK_MULTIPLE_INSTANCE,IND_TASK_NEW_ENABLE,IND_TASK_NEW_USING,IND_TASK_NU_ACROSS_CASE,IND_TASK_RTRV_PRIOR_STAGE,IND_TASK_SHOW_IN_LIST,IND_TASK_TODO_ENABLE,TXT_TASK_DECODE,TXT_1ST_TAB,TXT_2ND_TAB,TXT_3RD_TAB,TXT_EVENT_DETAIL_URL,IND_TASK_CODE_PREFER,IND_TASK_NEW_CASE_TODO_ENABLE,IND_TASK_FORCE_EVENT_LINK,IND_STAGE_CLOSURE) 
values ('8093',to_date('03-JUN-08','DD-MON-RR'),null,'APP',null,null,'FAD','CPS','CCMN65W',null,'0','1',null,'1',null,'0','0','0','0',null,'Approve Policy Violation','CASE_CASESEARCH','NON_COMPLIANCE_DOCUMENTATION','POLICY_VIOLATION_EVENTLIST','/fad/PolicyViolation/displayPolicyViolation',0,'0','0','0');

Insert into caps.TASK (CD_TASK,DT_LAST_UPDATE,CD_TASK_EVENT_STATUS,CD_TASK_EVENT_TYPE,CD_TASK_LIST_WINDOW,CD_TASK_PRIOR,CD_TASK_STAGE,CD_TASK_STAGE_PROGRAM,CD_TASK_TOP_WINDOW,IND_TASK_DETAIL_ENABLE,IND_TASK_EVENT_CREATE,IND_TASK_EVENT_NAVIG,IND_TASK_LIST_ENABLE,IND_TASK_MULTIPLE_INSTANCE,IND_TASK_NEW_ENABLE,IND_TASK_NEW_USING,IND_TASK_NU_ACROSS_CASE,IND_TASK_RTRV_PRIOR_STAGE,IND_TASK_SHOW_IN_LIST,IND_TASK_TODO_ENABLE,TXT_TASK_DECODE,TXT_1ST_TAB,TXT_2ND_TAB,TXT_3RD_TAB,TXT_EVENT_DETAIL_URL,IND_TASK_CODE_PREFER,IND_TASK_NEW_CASE_TODO_ENABLE,IND_TASK_FORCE_EVENT_LINK,IND_STAGE_CLOSURE) 
values ('8094',to_date('03-JUN-08','DD-MON-RR'),null,'APP',null,null,'FAD','CPS','CCMN65W',null,'0','1',null,'1',null,'0','0','0','0',null,'Approve Corrective Action Plan','CASE_CASESEARCH','NON_COMPLIANCE_DOCUMENTATION','CORRECTIVE_ACTION_PLAN_EVENTLIST','/fad/CorrectiveActionPlan/displayCorrectiveActionPlan',0,'0','0','0');


-- change STGAP00009089

--Message inserts... The NBR_MESSAGE may need to change, but this worked on my local db
insert into caps.message (nbr_message, txt_message_name, txt_message, cd_source, cd_presentation, ind_batch) values 
(99315, 'MSG_INV_ALL_DSPSTN_UNSUB', 'An unsubstantiated disposition is required for each allegation when the Investigation is opened in error.', '700', '500', 'N');

insert into caps.message (nbr_message, txt_message_name, txt_message, cd_source, cd_presentation, ind_batch) values 
(99316, 'MSG_INV_OPEN_STAGES', 'Investigation cannot be closed with a reason of ''Opened In Error'' when other stages are open on the case.', '700', '500', 'N');

-- Error List insert... The NBR_MESSAGE must tie back to the number for the MSG_INV_ALL_DSPSTN_UNSUB message.
insert into caps.error_list (nbr_message, txt_prgm_cd, txt_stage_cd, id_tab, cd_task) values
(99315, 'CPS', 'INV', 50, 2170);

-- Codes Table updates
insert into caps.codes_tables (CODE_TYPE, CODE, DECODE, DT_END) values ('CCPSCLED','06', 'NNNNNNNNNNNYY', null);
update caps.codes_tables set decode = concat(decode,'NN') where code in ('01','02','03','04','05') and code_type='CCPSCLED';
insert into caps.codes_tables (CODE_TYPE, CODE, DECODE, DT_END) values ('CCRSKFND','06', 'Opened in Error', null);
insert into caps.codes_tables (code_type, code, decode) values ('CDIVDSPN', 'OIE', 'Close - Opened in Error');
insert into caps.codes_tables (code_type, code, decode) values ('CCLOSPFC', 'OIE', 'Opened in Error');

-- STAGE_PROG updates for new closure codes
insert into caps.stage_prog (cd_stage_prog_stage, cd_stage_prog_rsn_close, cd_stage_prog_program, ind_stage_prog_close, cd_stage_prog_event_type, cd_stage_prog_status, txt_stage_prog_evnt_desc) values
('DIV', 'OIE', 'CPS', '0', 'STG', 'COMP', 'Diversion Stage Closed');

insert into caps.stage_prog (cd_stage_prog_stage, cd_stage_prog_rsn_close, cd_stage_prog_program, ind_stage_prog_close, cd_stage_prog_event_type, cd_stage_prog_status, txt_stage_prog_evnt_desc) values
('INV', '06', 'CPS', '0', 'STG', 'COMP', 'Investigation Stage Closed');

insert into caps.stage_prog (cd_stage_prog_stage, cd_stage_prog_rsn_close, cd_stage_prog_program, ind_stage_prog_close, cd_stage_prog_event_type, cd_stage_prog_status, txt_stage_prog_evnt_desc) values
('PFC', 'OIE', 'CPS', '0', 'STG', 'COMP', 'Post Foster Stage Closed');

-- change STGAP00009097
update caps.REPORTS set NM_RPT_AREA_TYPE = 'Eligibility' where NM_RPT_SQR_NAME = 'IV-ETimeliness';

insert into caps.schema_version (id_schema_version, application_version, comments)
                        values (330, 'SacwisRev2', 'static table updates, 3 new non_compliance tables');                        
commit;

