
-- Standard Alter Table SQL

DROP TABLE CAPS.WTLP_PLAN
;
ALTER TABLE CAPS.LEGAL_STATUS ADD DT_LEGAL_STAT_P_M_DUE_DT DATE     NULL
;

-- Re-Add WTLP Table
CREATE TABLE CAPS.WTLP_PLAN
(
    ID_EVENT       NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE DATE          NOT NULL,
    CD_PLAN_TYPE   VARCHAR2(1)       NULL,
    ID_PERSON      NUMBER(16)        NULL,
    DT_WTLP        DATE              NULL,
    DT_FROM        DATE              NULL,
    DT_TO          DATE              NULL,
    CD_PLCMT_AUTH  VARCHAR2(3)       NULL,
    TXT_VOLUNTARY  VARCHAR2(300)     NULL,
    CD_EDU         VARCHAR2(3)       NULL,
    CD_VOC         VARCHAR2(3)       NULL,
    CD_BASIC       VARCHAR2(3)       NULL,
    CD_HEALTH      VARCHAR2(3)       NULL,
    CD_PERS        VARCHAR2(3)       NULL,
    TXT_STRENGTHS  VARCHAR2(300)     NULL,
    TXT_NEEDS      VARCHAR2(300)     NULL,
    CONSTRAINT PK_WTLP_PLAN
    PRIMARY KEY (ID_EVENT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.WTLP_PLAN IS
'Holds WTLP page information'
;
COMMENT ON COLUMN CAPS.WTLP_PLAN.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.WTLP_PLAN TO CAPSBAT
;
GRANT INSERT ON CAPS.WTLP_PLAN TO CAPSBAT
;
GRANT SELECT ON CAPS.WTLP_PLAN TO CAPSBAT
;
GRANT UPDATE ON CAPS.WTLP_PLAN TO CAPSBAT
;
GRANT DELETE ON CAPS.WTLP_PLAN TO CAPSON
;
GRANT INSERT ON CAPS.WTLP_PLAN TO CAPSON
;
GRANT SELECT ON CAPS.WTLP_PLAN TO CAPSON
;
GRANT UPDATE ON CAPS.WTLP_PLAN TO CAPSON
;
GRANT SELECT ON CAPS.WTLP_PLAN TO OPERATOR
;
-- Add Referencing Foreign Keys SQL

ALTER TABLE CAPS.WTLP_PLAN ADD CONSTRAINT FK_PERSON_WTLP_PLAN
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.WTLP_PLAN 
    ADD CONSTRAINT FK_WTLP_PLAN_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;

-- Drop and re-add sequence with higer number
DROP SEQUENCE CAPS.SEQ_STAGE_PROG;

CREATE SEQUENCE CAPS.SEQ_STAGE_PROG
    START WITH 21000000
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- Alter Trigger SQL
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_WTLP_PLAN
BEFORE UPDATE
ON CAPS.WTLP_PLAN
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_WTLP_PLAN
BEFORE INSERT
ON CAPS.WTLP_PLAN
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_PERSON_ID
BEFORE INSERT
ON CAPS.PERSON_ID
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
	v_ind_input_type person_merge_pending.ind_input_type%TYPE;
	v_id_person person_merge_pending.id_person%TYPE;
	v_id_group person_merge_pending.id_group%TYPE;
BEGIN
	:new.DT_LAST_UPDATE := sysdate;

	IF (:new.ID_PERSON_ID = 0) THEN
		SELECT	SEQ_PERSON_ID.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_PERSON_ID := dummy;
	END IF;

	IF :new.DT_PERSON_ID_END is NULL THEN
		:new.DT_PERSON_ID_END	:= TO_DATE('12/31/4712','MM/DD/YYYY');
	END IF;

	IF :new.DT_PERSON_ID_START is NULL THEN
		:new.DT_PERSON_ID_START:= SYSDATE;
	END IF;
	IF :new.IND_PERSON_ID_INVALID is NULL THEN
		:new.IND_PERSON_ID_INVALID:= 'N';
	END IF;

	---
	--- BSG: Added trigger to populate denormalized PERSON row
	---
	BEGIN
		IF (:new.IND_PERSON_ID_INVALID = 'N') AND
		   (:new.CD_PERSON_ID_TYPE = 'SSN' )  AND
		   ((:new.DT_PERSON_ID_END = TO_DATE('12/31/4712', 'MM/DD/YYYY')) OR
		    (:new.DT_PERSON_ID_END = TO_DATE('12/31/3500', 'MM/DD/YYYY')))
		THEN
		   UPDATE PERSON
		          SET NBR_PERSON_ID_NUMBER  = :new.NBR_PERSON_ID_NUMBER
				  WHERE ID_PERSON = :new.ID_PERSON;
		END IF;
	END;


	--
	-- ME Added for Automated Person Merge  01/22/2003
	--
	BEGIN
		SELECT 	id_person, ind_input_type, id_group
		INTO 	v_id_person, v_ind_input_type, v_id_group
		FROM 	person_merge_pending
		WHERE 	id_person=:new.id_person;

        EXCEPTION
        WHEN NO_DATA_FOUND THEN
                NULL;
        END;


	IF v_id_person is NOT NULL THEN

	BEGIN

                IF (:NEW.CD_PERSON_ID_TYPE = 'SSN' OR
                        :NEW.CD_PERSON_ID_TYPE ='TDHS Client #') THEN

		IF v_ind_input_type IS NULL THEN

			DELETE FROM person_merge_pending
			WHERE id_person = :new.id_person;

		ELSIF v_ind_input_type =1 THEN


			 DELETE FROM PERSON_MERGE_PENDING
                        WHERE id_group = v_id_group;

		END IF;

                END IF;
	EXCEPTION
        WHEN NO_DATA_FOUND THEN
                NULL;
        END;

	END IF;


END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_PERSON_ID
BEFORE UPDATE
ON CAPS.PERSON_ID
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
v_ind_input_type person_merge_pending.ind_input_type%TYPE;
v_id_person person_merge_pending.id_person%TYPE;
v_id_group person_merge_pending.id_group%TYPE;


BEGIN
	:new.DT_LAST_UPDATE := sysdate;
	IF :new.DT_PERSON_ID_END is NULL THEN
		:new.DT_PERSON_ID_END	:= TO_DATE('12/31/4712','MM/DD/YYYY');
	END IF;
	IF :new.IND_PERSON_ID_INVALID is NULL THEN
		:new.IND_PERSON_ID_INVALID:= 'N';
	END IF;

	---
	--- BSG: Added trigger to populate denormalized PERSON row
	---
	BEGIN
		IF (:new.IND_PERSON_ID_INVALID = 'N') AND
		   (:new.CD_PERSON_ID_TYPE = 'SSN' )  AND
		   ((:new.DT_PERSON_ID_END = TO_DATE('12/31/4712', 'MM/DD/YYYY')) OR
		    (:new.DT_PERSON_ID_END = TO_DATE('12/31/3500', 'MM/DD/YYYY')))
		THEN
		   UPDATE PERSON
		          SET NBR_PERSON_ID_NUMBER  = :new.NBR_PERSON_ID_NUMBER
				  WHERE ID_PERSON = :new.ID_PERSON;
		ELSIF 	(:new.CD_PERSON_ID_TYPE = 'SSN' ) AND
               		((:new.IND_PERSON_ID_INVALID = 'Y') OR
		   	((:new.DT_PERSON_ID_END != TO_DATE('12/31/4712', 'MM/DD/YYYY')) AND
		   	(:new.DT_PERSON_ID_END != TO_DATE('12/31/3500', 'MM/DD/YYYY')))) THEN
		   UPDATE PERSON
		   SET NBR_PERSON_ID_NUMBER  = NULL
		   WHERE ID_PERSON = :new.ID_PERSON;
		END IF;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
                NULL;
	END;


	 BEGIN
                SELECT  id_person, ind_input_type, id_group
                INTO    v_id_person, v_ind_input_type, v_id_group
                FROM    person_merge_pending
                WHERE   id_person=:new.id_person;

        EXCEPTION
        WHEN NO_DATA_FOUND THEN
                NULL;
        END;


	IF v_id_person is NOT NULL THEN

BEGIN

                IF (:new.CD_PERSON_ID_TYPE = 'SSN' OR
                        :new.CD_PERSON_ID_TYPE ='TDHS Client #') THEN
                IF ((:new.NBR_PERSON_ID_NUMBER <> :old.NBR_PERSON_ID_NUMBER)
			OR ( :new.IND_PERSON_ID_INVALID='Y')) THEN

		IF v_ind_input_type IS NULL THEN

                        DELETE FROM person_merge_pending
                        WHERE id_person = :new.id_person;

                ELSIF v_ind_input_type =1 THEN


			 DELETE FROM PERSON_MERGE_PENDING
                        WHERE id_group = v_id_group;

                END IF;
                END IF;
                END IF;

          EXCEPTION
	          WHEN NO_DATA_FOUND THEN
	                  NULL;
          END;


	END IF;


END;
/

-- Synonym Alter SQL

{ call dbms_utility.compile_schema('CAPS') };
{ call dbms_utility.compile_schema('CAPSBAT') };
{ call dbms_utility.compile_schema('CAPSON') };
{ call dbms_utility.compile_schema('OPERATOR') };

-- change 123 - R1 and R2
UPDATE CAPS.METAPHOR 
SET TXT_TAB = 'Allegations' 
WHERE ID_TAB = 50;

-- change  124 - R2
UPDATE CAPS.STAGE_PROG 
SET ind_stage_prog_close=1, 
cd_stage_prog_open='FC' 
WHERE cd_stage_prog_stage='INV' 
AND cd_stage_prog_program='CPS' 
AND cd_stage_prog_rsn_close='01'; 

UPDATE CAPS.STAGE_PROG 
SET ind_stage_prog_close=1, 
cd_stage_prog_open='ONG' 
WHERE cd_stage_prog_stage='INV' 
AND cd_stage_prog_program='CPS' 
AND cd_stage_prog_rsn_close='05'; 

INSERT INTO CAPS.STAGE_PROG 
(cd_stage_prog_stage, cd_stage_prog_rsn_close, 
cd_stage_prog_program, cd_stage_prog_event_type, 
cd_stage_prog_status, txt_stage_prog_evnt_desc) 
VALUES 
('FC', '01', 
'CPS', 'STG', 
'COMP', 'Foster Care Stage Opened'); 

INSERT INTO CAPS.STAGE_PROG 
(cd_stage_prog_stage, cd_stage_prog_rsn_close, 
cd_stage_prog_program, cd_stage_prog_event_type, 
cd_stage_prog_status, txt_stage_prog_evnt_desc) 
VALUES 
('ONG', '05', 
'CPS', 'STG', 
'COMP', 'Ongoing Stage Opened');

-- change 125 R1 and R2
UPDATE CAPS.CODES_TABLES SET DECODE='Caretaker not willing to meet child''s basic needs' 
WHERE CODE_TYPE ='CNEGLECT' AND CODE='NCBN'; 
    
UPDATE CAPS.CODES_TABLES SET DECODE='Caretaker not capable of meeting child''s basic needs' 
WHERE CODE_TYPE ='CNEGLECT' AND CODE='NCMN'; 

UPDATE CAPS.CODES_TABLES SET DECODE='Immediate 24 Hrs.' 
WHERE CODE_TYPE ='CPRIORTY' AND CODE='M24'; 

-- change 126 R1 and R2
UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CADDRTYP' 
AND CODE='CP'; 

UPDATE CAPS.CODES_TABLES
SET DT_END='01/01/2006' 
WHERE code_type='CADDRTYP' 
AND CODE='SH'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='' 
WHERE code_type='CADDRTYP' 
AND CODE='BB'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='' 
WHERE code_type='CADDRTYP' 
AND CODE='BM';

-- change 127  R1 and R2
INSERT INTO CAPS.CODES_TABLES 
(code_type, code, DECODE) 
VALUES 
('CSRCRPTR', 'HC', 'Hospital / Clinic') ; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='AB'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='AF'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='DS'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='DR'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='FC'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='JG'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='LC'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='LF'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='XX'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='PF'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='SG'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='SV'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='VL'; 

UPDATE CAPS.CODES_TABLES 
SET DT_END='01/01/2006' 
WHERE code_type='CSRCRPTR' 
AND CODE='UH';             

INSERT INTO CAPS.CODES_TABLES 
(code_type, code, DECODE) 
VALUES 
('CSRCRPTR', 'ONM', 'Other Non-Mandated') ; 

INSERT INTO CAPS.CODES_TABLES 
(code_type, code, DECODE) 
VALUES 
('CSRCRPTR', 'TAN', 'TANF(Sanction Related)') ; 

INSERT INTO CAPS.CODES_TABLES 
(code_type, code, DECODE) 
VALUES 
('CSRCRPTR', 'RLS', 'Religious Leader/Staff') ; 

-- change 128 - R2 Only
UPDATE caps.metaphor 
SET txt_l1_img_inactive = 'Tb_Financial_0.gif' 
WHERE id_tab = 600; 

UPDATE caps.metaphor 
SET txt_l1_img_inactive = 'Tb_Reports_0.gif' 
WHERE id_tab = 1100; 

UPDATE caps.metaphor 
SET txt_l1_img_inactive = 'Tb_Resources_0.gif' 
WHERE id_tab = 1130;

-- change 130 R2 only
INSERT INTO CAPS.CODES_TABLES 
(code_type, code, DECODE) 
VALUES 
('CLEGSTAT', 'NCD', 'Not In DFCS Custody - Child Death') ;

-- change 133 R2 only
DELETE FROM CAPS.CODES_TABLES WHERE CODE_TYPE='CSECATTR'; 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AA', 'Maintain Designee' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AB', 'Assign User Profile' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AC', 'Delete Intake'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CE', 'Manage CPS/POS Contracts'        ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CF', 'Manage CPS/FAC Contracts' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CG', 'Modify SUB History' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AD', 'Mark Intake for Deletion' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AE', 'Record Call'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AF', 'Maintain DHS Client Nbr' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZA', 'Maintain Office' ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AG', 'Maintain Staff'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CH', 'Eligibility'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AH', 'Maintain On-Call' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CI', 'Maintain Resource' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AI', 'Maintain Unit'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AJ', 'Assign Intake Directly' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CJ', 'Maintain Region 00 (SWI)' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CK', 'Maintain Region 01' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CL', 'Maintain Region 02' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CM', 'Maintain Region 03' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DA', 'Maintain Region 04' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DB', 'Maintain Region 05' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DC', 'Maintain Region 06' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DD', 'Maintain Region 07' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DE', 'Maintain Region 08' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DF', 'Maintain Region 09' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DG', 'Maintain Region 10' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DH', 'Maintain Region 11' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DI', 'Maintain Region 12' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DJ', 'Maintain Region 13' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DK', 'Maintain Region 14' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DL', 'Maintain Rgn 99 (St Off)' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AK', 'Sensitive Case Access' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AL', 'Unit Summary Access' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZB', 'PAL' ,SYSDATE                      ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'DM', 'PPT'                 ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EA', 'Sign Contract'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EB', 'Browse Invoice'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EC', 'Modify Invoice'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZC', 'Modify APS Payment Apprv' ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'ED', 'Modify CPS Payment Apprv'        ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EE', 'Browse Payment History' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZD', 'Browse CPS Financial Accounts' ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZE', 'Modify CPS Financial Accounts' ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'AM', 'Maintain Inactive Person' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EF', 'Maintain Home Access' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EG', 'Maintain Closed Subsidies' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZF', 'Placement' ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EH', 'Emergency Placement' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EI', 'Maintain FA Home History' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BA', 'Case File Location' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BB', 'Case Destruction Date' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BC', 'Admin Review'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BD', 'DPS Records Check' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BE', 'Merge Person'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BF', 'Merge Case'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BG', 'Maintain Login'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZG', 'Mgmt Reports'        ,SYSDATE         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BH', 'Case File Print' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EJ', 'Manage CPS/FAD Contracts' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZI', 'Manage APS/POS Contracts' ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BI', 'Maintain Security Profile' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EK', 'Maintain Service Auth' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BJ', 'Maintain Legal Status' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BK', 'Restrict Case Search' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BL', 'Restrict Case Event' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'BM', 'Restrict Person Search' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CA', 'Browse Security'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CB', 'IT Security'         ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZJ', 'Browse APS Financial Account' ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZK', 'Modify APS Financial Account' ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'EL', 'Adoption Assistance Specialist' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZL', 'E-Report'                ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZM', 'E-Report Monitoring'        ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CC', 'Service Level Review' ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZN', 'View LOC Error' ,SYSDATE                ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZO', 'Maintain Policy Link'        ,SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_END,DT_LAST_UPDATE) VALUES('CSECATTR', 'ZP', 'Assign and Stage Progression buttons Access',SYSDATE ,SYSDATE ); 
INSERT INTO CAPS.CODES_TABLES(CODE_TYPE,CODE,DECODE,DT_LAST_UPDATE) VALUES('CSECATTR', 'CD', 'Assign Workload',SYSDATE );

insert into caps.schema_version (id_schema_version, application_version, comments)
                         values (102, 'SacwisRev2', 'New field for legal status, updated triggers for PERSON_ID, static updates');

commit;



