
-- Standard Alter Table SQL for CAPS Schema

ALTER TABLE CAPS.DELVRD_SVC_DTL ADD AMT_SMILE_PAID NUMBER(10,2)     NULL
;
ALTER TABLE CAPS.DELVRD_SVC_DTL ADD NBR_CHECK NUMBER(10)     NULL
;
ALTER TABLE CAPS.DELVRD_SVC_DTL ADD DT_PAID DATE     NULL
;
ALTER TABLE CAPS.ADMIN_DTL ADD AMT_SMILE_PAID NUMBER(10,2)     NULL
;
ALTER TABLE CAPS.ADMIN_DTL ADD NBR_CHECK NUMBER(10)     NULL
;
ALTER TABLE CAPS.ADMIN_DTL ADD DT_PAID DATE     NULL
;

-- Hey Charles, here comes the SACWISIFC Stuff
-- Drop Constraint, Rename and Create Table SQL

ALTER TABLE SACWISIFC.CPRS_OUTBOUND DROP PRIMARY KEY DROP INDEX
;
DROP INDEX SACWISIFC.IND_CPRS_OUTBOUND1
;
DROP INDEX SACWISIFC.IND_CPRS_OUTBOUND_2
;
ALTER TABLE SACWISIFC.CPRS_OUTBOUND RENAME TO CPRS_OUTBO_06012007203845000
;
CREATE TABLE SACWISIFC.CPRS_OUTBOUND
(
    ID_CPRS_OUTBOUND NUMBER(16)   NOT NULL,
    DT_LAST_UPDATE   DATE         NOT NULL,
    DT_PROCESS       DATE             NULL,
    CD_ERROR         VARCHAR2(10)     NULL,
    DT_CREATED       DATE             NULL,
    CD_COUNTY        VARCHAR2(3)  NOT NULL,
    ID_CASE          NUMBER(16)   NOT NULL,
    DT_CASE_UPDATED  DATE             NULL
)
TABLESPACE DATA01
NOLOGGING
PCTFREE 10
INITRANS 1
MAXTRANS 255
STORAGE(INITIAL 1M
        NEXT 1M
        MINEXTENTS 1
        MAXEXTENTS UNLIMITED
        PCTINCREASE 0
        BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE SACWISIFC.CPRS_OUTBOUND IS
'This table is used to track cases that have been updated so that when CPRS requests updated cases for that county, this table can be queried and updated to reflect having been sent to CPRS.'
;
COMMENT ON COLUMN SACWISIFC.CPRS_OUTBOUND.DT_LAST_UPDATE IS
'Date of insert or last update'
;
COMMENT ON COLUMN SACWISIFC.CPRS_OUTBOUND.CD_COUNTY IS
'County Code'
;
GRANT DELETE ON SACWISIFC.CPRS_OUTBOUND TO CAPS
;
GRANT INSERT ON SACWISIFC.CPRS_OUTBOUND TO CAPS
;
GRANT SELECT ON SACWISIFC.CPRS_OUTBOUND TO CAPS
;
GRANT UPDATE ON SACWISIFC.CPRS_OUTBOUND TO CAPS
;
GRANT DELETE ON SACWISIFC.CPRS_OUTBOUND TO CAPSBAT
;
GRANT INSERT ON SACWISIFC.CPRS_OUTBOUND TO CAPSBAT
;
GRANT SELECT ON SACWISIFC.CPRS_OUTBOUND TO CAPSBAT
;
GRANT UPDATE ON SACWISIFC.CPRS_OUTBOUND TO CAPSBAT
;
GRANT DELETE ON SACWISIFC.CPRS_OUTBOUND TO CAPSON
;
GRANT INSERT ON SACWISIFC.CPRS_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.CPRS_OUTBOUND TO CAPSON
;
GRANT UPDATE ON SACWISIFC.CPRS_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.CPRS_OUTBOUND TO OPERATOR
;
GRANT DELETE ON SACWISIFC.CPRS_OUTBOUND TO SACWISIFC
;
GRANT INSERT ON SACWISIFC.CPRS_OUTBOUND TO SACWISIFC
;
GRANT SELECT ON SACWISIFC.CPRS_OUTBOUND TO SACWISIFC
;
GRANT UPDATE ON SACWISIFC.CPRS_OUTBOUND TO SACWISIFC
;

-- Insert Data SQL

ALTER SESSION ENABLE PARALLEL DML
;
INSERT INTO SACWISIFC.CPRS_OUTBOUND(
                                    ID_CPRS_OUTBOUND,
                                    DT_LAST_UPDATE,
                                    DT_PROCESS,
                                    CD_ERROR,
                                    DT_CREATED,
                                    CD_COUNTY,
                                    ID_CASE,
                                    DT_CASE_UPDATED
                                   )
                             SELECT 
                                    ID_CPRS_OUTBOUND,
                                    DT_LAST_UPDATE,
                                    DT_PROCESS,
                                    CD_ERROR,
                                    DT_CREATED,
                                    CD_COUNTY,
                                    ID_CASE,
                                    NULL
                               FROM SACWISIFC.CPRS_OUTBO_06012007203845000 
;
COMMIT
;
ALTER TABLE SACWISIFC.CPRS_OUTBOUND LOGGING
;

-- Add Constraint SQL

ALTER TABLE SACWISIFC.CPRS_OUTBOUND ADD CONSTRAINT PK_CPRS_OUTBOUND
PRIMARY KEY (ID_CPRS_OUTBOUND)
USING INDEX TABLESPACE INDEX01
            PCTFREE 10
            INITRANS 2
            MAXTRANS 255
            STORAGE(INITIAL 1M
                    NEXT 1M
                    MINEXTENTS 1
                    MAXEXTENTS UNLIMITED
                    PCTINCREASE 0
                    BUFFER_POOL DEFAULT)
    LOGGING
    ENABLE
    VALIDATE
;


-- Add Dependencies SQL
DROP TRIGGER SACWISIFC.TIBR_CPRS_OUTBOUND;
DROP TRIGGER SACWISIFC.TUBR_CPRS_OUTBOUND;

CREATE INDEX SACWISIFC.IND_CPRS_OUTBOUND1
    ON SACWISIFC.CPRS_OUTBOUND(CD_COUNTY,DT_CASE_UPDATED)
TABLESPACE INDEX01
LOGGING
PCTFREE 10
INITRANS 2
MAXTRANS 255
STORAGE(INITIAL 1M
        NEXT 1M
        MINEXTENTS 1
        MAXEXTENTS UNLIMITED
        PCTINCREASE 0
        BUFFER_POOL DEFAULT)
NOPARALLEL
NOCOMPRESS
;
CREATE UNIQUE INDEX SACWISIFC.IND_CPRS_OUTBOUND2
    ON SACWISIFC.CPRS_OUTBOUND(ID_CASE)
TABLESPACE INDEX01
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCOMPRESS
;

/
CREATE OR REPLACE PROCEDURE SACWISIFC.UPDATE_CASEPLAN (xCD_COUNTY IN SACWISIFC.CPRS_OUTBOUND.CD_COUNTY%TYPE, 
xID_CASE IN SACWISIFC.CPRS_OUTBOUND.ID_CASE%TYPE)
AS
v_cntr_case	NUMBER := 0;

BEGIN

SELECT COUNT(*)
	  INTO v_cntr_case
	  FROM CPRS_OUTBOUND
	  WHERE id_case = xID_CASE;
	  
IF v_cntr_case = 0
THEN
  INSERT INTO CPRS_OUTBOUND (DT_CASE_UPDATED, DT_CREATED, CD_COUNTY, ID_CASE)
     VALUES (SYSDATE, SYSDATE, xCD_COUNTY, xID_CASE);
ELSE
  UPDATE CPRS_OUTBOUND set DT_CASE_UPDATED=SYSDATE, CD_COUNTY=xCD_COUNTY
     where ID_CASE = xID_CASE;
END IF;

EXCEPTION
   WHEN OTHERS THEN RAISE;
      
END UPDATE_CASEPLAN;
/

GRANT EXECUTE ON SACWISIFC.UPDATE_CASEPLAN TO CAPS;
GRANT EXECUTE ON SACWISIFC.UPDATE_CASEPLAN TO CAPSBAT;
GRANT EXECUTE ON SACWISIFC.UPDATE_CASEPLAN TO CAPSON;

/
CREATE OR REPLACE TRIGGER SACWISIFC.TUBR_CPRS_OUTBOUND
BEFORE UPDATE
ON SACWISIFC.CPRS_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
  :new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER SACWISIFC.TIBR_CPRS_OUTBOUND
BEFORE INSERT
ON SACWISIFC.CPRS_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
  dummy    NUMBER;
BEGIN
  :new.DT_LAST_UPDATE := SYSDATE;
  IF (:NEW.ID_CPRS_OUTBOUND IS NULL OR :new.ID_CPRS_OUTBOUND = 0) THEN
    SELECT  SEQ_CPRS_OUTBOUND.NEXTVAL
    INTO  dummy
    FROM  DUAL;
    :new.ID_CPRS_OUTBOUND := dummy;
  END IF;
END;
/

-- Synonym Alter SQL
DROP TABLE SACWISIFC.CPRS_OUTBO_06012007203845000;

{ call dbms_utility.compile_schema('CAPS') };
{ call dbms_utility.compile_schema('CAPSBAT') };
{ call dbms_utility.compile_schema('CAPSON') };
{ call dbms_utility.compile_schema('OPERATOR') };
{ call dbms_utility.compile_schema('SACWISIFC') };

-- change STGAP00002909
INSERT INTO CAPS.METAPHOR (ID_TAB, TXT_TAB_URL, TXT_TAB_CONSTANT, TXT_TAB) VALUES (335, '/workload/StageClosure/displayStageClosure', 'CLOSE_POST_FC_STAGE_STAGECLOSURE', 'Close Post Foster Care Stage');
UPDATE CAPS.METAPHOR SET TXT_TAB='Close CPS Ongoing Stage' WHERE ID_TAB=280;

-- change STGAP00002913
INSERT INTO CAPS.MESSAGE (ID_MESSAGE, NBR_MESSAGE, TXT_MESSAGE_NAME, TXT_MESSAGE, CD_SOURCE, CD_PRESENTATION, IND_BATCH) VALUES (0, 60337, 'MSG_LEG_STAT_REQ', 'Child''s Legal Status is required on the Save and Submit.', '500', '700', 'N');

-- change STGAP00002922
INSERT INTO caps.metaphor (id_tab, txt_tab_url, txt_tab_constant, txt_tab, dt_last_update)
VALUES (1555, '/fad/PlacementReferralLog/displayPlacementReferralLog', 'PLACEMENT_REFERRAL_LOG_FAD', 'Placement Referral Log',SYSDATE); 

-- change STGAP00002938
INSERT INTO CAPS.STAGE_PROG(CD_STAGE_PROG_STAGE, CD_STAGE_PROG_RSN_CLOSE, CD_STAGE_PROG_PROGRAM, 
IND_STAGE_PROG_CLOSE, CD_STAGE_PROG_OPEN, CD_STAGE_PROG_STATUS, CD_STAGE_PROG_EVENT_TYPE, TXT_STAGE_PROG_EVNT_DESC) 
VALUES ('INV', '05', 'CPS', '1', 'FPR', 'COMP', 'STG', 'Investigation Stage Closed'); 

INSERT INTO CAPS.STAGE_PROG(CD_STAGE_PROG_STAGE, CD_STAGE_PROG_RSN_CLOSE, CD_STAGE_PROG_PROGRAM, 
IND_STAGE_PROG_CLOSE, CD_STAGE_PROG_OPEN, CD_STAGE_PROG_STATUS, CD_STAGE_PROG_EVENT_TYPE, TXT_STAGE_PROG_EVNT_DESC) 
VALUES ('FPR', '05', 'CPS', '0', 'FPR', 'COMP', 'STG', 'CPS Ongoing Stage Opened'); 

insert into caps.schema_version (id_schema_version, application_version, comments)
                         values (180, 'SacwisRev2', 'static updates, SACWISIFC CPRS changes');                        
commit;
