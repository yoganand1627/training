--STGAP00015478 - Schema change for Portal

CREATE TABLE CAPS.PORTAL_USER_AUDIT 
   (	ID_PORTAL_USER_AUDIT NUMBER(16,0) NOT NULL ENABLE,
        ID_USER NUMBER(16,0) NOT NULL ENABLE, 
	DT_LAST_UPDATE DATE NOT NULL ENABLE, 
	NM_USER_FIRST VARCHAR2(12 BYTE), 
	NM_USER_MIDDLE VARCHAR2(12 BYTE), 
	NM_USER_LAST VARCHAR2(22 BYTE),
	NM_USER_FULL VARCHAR2(25 BYTE),
	TXT_TITLE VARCHAR2(20 BYTE),
	TXT_USER_EMAIL VARCHAR2(320 BYTE),
	NBR_USER_PHONE VARCHAR2(10 BYTE),
	NBR_USER_PHONE_EXTENSION VARCHAR2(8 BYTE),
        ADDR_USER_ADDR_ZIP VARCHAR2(10 BYTE),
        CD_USER_ADDR_STATE VARCHAR2(2 BYTE),
        ADDR_USER_ADDR_CITY VARCHAR2(20 BYTE),
        ADDR_USER_ADDR_ST_LN_1 VARCHAR2(30 BYTE),
        ADDR_USER_ADDR_ST_LN_2 VARCHAR2(30 BYTE),
        CD_USER_ADDR_COUNTY VARCHAR2(3 BYTE),
        CD_REQUEST_TYPE VARCHAR2(3 BYTE),
        TXT_OTHER VARCHAR2(30 BYTE),
        TXT_PASSWORD RAW(200),
        IND_USER_AGREEMENT VARCHAR2(1 BYTE),
        IND_ADMIN_AGREEMENT VARCHAR2(1 BYTE),
        CD_STATUS VARCHAR2(4 BYTE),
        CD_QUESTION_1 VARCHAR2(3 BYTE),
        CD_QUESTION_2 VARCHAR2(3 BYTE),
        CD_QUESTION_3 VARCHAR2(3 BYTE),
        TXT_ANSWER_1 RAW(200),
	TXT_ANSWER_2 RAW(200),
        TXT_ANSWER_3 RAW(200),
        DT_LAST_PASSWD_RESET DATE,
        IND_PASSWD_TEMP  VARCHAR2(1 BYTE),
        NBR_FAILED_LOGIN_ATTEMPTS NUMBER(2,0),
        ID_SHINES_PERSON_MODIFIED_BY NUMBER(16,0),
        ID_PORTAL_PERSON_MODIFIED_BY NUMBER(16,0),
        TABLE_ACTION varchar2(10),
	CONSTRAINT PK_PORTAL_USER_AUDIT PRIMARY KEY (ID_PORTAL_USER_AUDIT)
	  USING INDEX 
	  TABLESPACE INDEX01  ENABLE, 
	CONSTRAINT UK1_PORTAL_USER_AUDIT UNIQUE (TXT_USER_EMAIL)
	  USING INDEX 
	  TABLESPACE INDEX01  ENABLE
	   ) 
	TABLESPACE DATA01 ;	
 

   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.ID_PORTAL_USER_AUDIT IS 'A unique identifier for a row on the Portal User Audit table.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.ID_USER IS 'A unique identifier for a row on the Portal User table.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';

   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.NM_USER_FIRST IS 'Current, valid first name of each individual user known to Portal system.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.NM_USER_MIDDLE IS 'Current, valid middle name of each individual user known to Portal system.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.NM_USER_LAST IS 'Current, valid last name of each individual user known to Portal system.';
   
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.NM_USER_FULL IS 'Current, valid full name (Format: LastName, FirstName MiddleInitial) of each individual user known to Portal system.'; 
   
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.TXT_TITLE IS 'User''s Title code (i.e. Mr, Ms, Mrs)';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.TXT_USER_EMAIL IS 'User''s email ID';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.NBR_USER_PHONE IS 'User''s Phone Number';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.NBR_USER_PHONE_EXTENSION IS 'User''s Phone Extension';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.ADDR_USER_ADDR_ZIP IS 'User''s Address Zip';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.CD_USER_ADDR_STATE IS 'User''s Address State Code';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.ADDR_USER_ADDR_CITY IS 'User''s Address City';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.ADDR_USER_ADDR_ST_LN_1 IS 'User''s Address Street Line 1';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.ADDR_USER_ADDR_ST_LN_2 IS 'User''s Address Street Line 2';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.CD_USER_ADDR_COUNTY IS 'User''s Address County Code';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.CD_REQUEST_TYPE IS 'User''s Access Request type (ex. Admin, User)';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.TXT_OTHER IS 'Additional comments';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.TXT_PASSWORD IS 'Password Field Encrypted';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.IND_USER_AGREEMENT IS 'Indicator User accepting User''s agreement';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.IND_ADMIN_AGREEMENT IS 'Indicator User accepting Admin''s agreement';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.CD_STATUS IS 'Identifies the status (i.e. Active/Inactive/Pending)';
   
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.CD_QUESTION_1 IS 'Password Retrieval Question 1';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.CD_QUESTION_2 IS 'Password Retrieval Question 2';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.CD_QUESTION_3 IS 'Password Retrieval Question 3';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.TXT_ANSWER_1 IS 'Password Retrieval encrypted Answer 1';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.TXT_ANSWER_2 IS 'Password Retrieval encrypted Answer 2';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.TXT_ANSWER_3 IS 'Password Retrieval encrypted Answer 3';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.DT_LAST_PASSWD_RESET IS 'Last Password reset date';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.IND_PASSWD_TEMP IS 'Indicator whether the password is tempraory';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.NBR_FAILED_LOGIN_ATTEMPTS IS 'Number of failed login attempts';

   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.ID_SHINES_PERSON_MODIFIED_BY IS 'Shines Person ID modified the record';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.ID_PORTAL_PERSON_MODIFIED_BY IS 'Portal User ID modified the record';
     
   COMMENT ON TABLE CAPS.PORTAL_USER_AUDIT  IS 'Audit table for Portal Users table.';

   COMMENT ON COLUMN CAPS.PORTAL_USER_AUDIT.TABLE_ACTION is 'INSERT,UPDATE or DELETE. This field shows the kind of SQL statement that changed the row.';
 
   grant select,update,insert,delete on CAPS.PORTAL_USER_AUDIT to capson,capsbat,ops$datafix;
   grant select on caps.PORTAL_USER_AUDIT to operator;
   
   CREATE SEQUENCE  CAPS.SEQ_PORTAL_USER_AUDIT  NOMINVALUE NOMAXVALUE INCREMENT
   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

   grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;

  CREATE INDEX CAPS.IND_PORTAL_USER_AUDIT_1 ON CAPS.PORTAL_USER_AUDIT (CD_REQUEST_TYPE) 
    TABLESPACE INDEX01 ;

  CREATE INDEX CAPS.IND_PORTAL_USER_AUDIT_2 ON CAPS.PORTAL_USER_AUDIT (NM_USER_FIRST, NM_USER_LAST, ID_USER) 
    TABLESPACE INDEX01 ;
 
  CREATE INDEX CAPS.IND_PORTAL_USER_AUDIT_3 ON CAPS.PORTAL_USER_AUDIT (NM_USER_LAST, NM_USER_FIRST, ID_USER) 
    TABLESPACE INDEX01 ; 
  
  CREATE INDEX CAPS.IND_PORTAL_USER_AUDIT_4 ON CAPS.PORTAL_USER_AUDIT (NBR_USER_PHONE) 
    TABLESPACE INDEX01 ;
  
  CREATE INDEX CAPS.IND_PORTAL_USER_AUDIT_5 ON CAPS.PORTAL_USER_AUDIT (NM_USER_FULL) 
    TABLESPACE INDEX01 ;
  
grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_PORTAL_USER_AUDIT 
BEFORE INSERT
ON CAPS.PORTAL_USER_AUDIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
  dummy    NUMBER;
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;
  IF (:NEW.ID_PORTAL_USER_AUDIT IS NULL OR :NEW.ID_PORTAL_USER_AUDIT = 0) THEN
    SELECT  SEQ_PORTAL_USER_AUDIT.NEXTVAL
    INTO  dummy
    FROM  DUAL;
    :NEW.ID_PORTAL_USER_AUDIT := dummy;
  END IF;
END;
/


--Portal User table

CREATE TABLE CAPS.PORTAL_USER 
   (	ID_USER NUMBER(16,0) NOT NULL ENABLE, 
	DT_LAST_UPDATE DATE NOT NULL ENABLE, 
	NM_USER_FIRST VARCHAR2(12 BYTE), 
	NM_USER_MIDDLE VARCHAR2(12 BYTE), 
	NM_USER_LAST VARCHAR2(22 BYTE),
	NM_USER_FULL VARCHAR2(25 BYTE),
	TXT_TITLE VARCHAR2(20 BYTE),
	TXT_USER_EMAIL VARCHAR2(320 BYTE),
	NBR_USER_PHONE VARCHAR2(10 BYTE),
	NBR_USER_PHONE_EXTENSION VARCHAR2(8 BYTE),
        ADDR_USER_ADDR_ZIP VARCHAR2(10 BYTE),
        CD_USER_ADDR_STATE VARCHAR2(2 BYTE),
        ADDR_USER_ADDR_CITY VARCHAR2(20 BYTE),
        ADDR_USER_ADDR_ST_LN_1 VARCHAR2(30 BYTE),
        ADDR_USER_ADDR_ST_LN_2 VARCHAR2(30 BYTE),
        CD_USER_ADDR_COUNTY VARCHAR2(3 BYTE),
        CD_REQUEST_TYPE VARCHAR2(3 BYTE),
        TXT_OTHER VARCHAR2(30 BYTE),
        TXT_PASSWORD RAW(200),
        IND_USER_AGREEMENT VARCHAR2(1 BYTE),
        IND_ADMIN_AGREEMENT VARCHAR2(1 BYTE),
        CD_STATUS VARCHAR2(4 BYTE),        
        CD_QUESTION_1 VARCHAR2(3 BYTE),
        CD_QUESTION_2 VARCHAR2(3 BYTE),
        CD_QUESTION_3 VARCHAR2(3 BYTE),
        TXT_ANSWER_1 RAW(200),
	TXT_ANSWER_2 RAW(200),
        TXT_ANSWER_3 RAW(200),
        DT_LAST_PASSWD_RESET DATE,
        IND_PASSWD_TEMP  VARCHAR2(1 BYTE),
        NBR_FAILED_LOGIN_ATTEMPTS NUMBER(2,0),
        ID_SHINES_PERSON_MODIFIED_BY NUMBER(16,0),
        ID_PORTAL_PERSON_MODIFIED_BY NUMBER(16,0),
	CONSTRAINT PK_PORTAL_USER PRIMARY KEY (ID_USER)
	  USING INDEX 
	  TABLESPACE INDEX01  ENABLE, 
	CONSTRAINT UK1_PORTAL_USER UNIQUE (TXT_USER_EMAIL)
	  USING INDEX 
	  TABLESPACE INDEX01  ENABLE,
	 CONSTRAINT FK_SHINES_PORTAL_USER FOREIGN KEY (ID_SHINES_PERSON_MODIFIED_BY)
	  REFERENCES CAPS.EMPLOYEE (ID_PERSON) ENABLE,
	 CONSTRAINT FK_PORTAL_PORTAL_USER FOREIGN KEY (ID_PORTAL_PERSON_MODIFIED_BY)
	  REFERENCES CAPS.PORTAL_USER (ID_USER) ENABLE	  
	   ) 
	TABLESPACE DATA01 ;
 

   COMMENT ON COLUMN CAPS.PORTAL_USER.ID_USER IS 'A unique identifier for a row on the Portal User Audit table.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';

   COMMENT ON COLUMN CAPS.PORTAL_USER.NM_USER_FIRST IS 'Current, valid first name of each individual user known to Portal system.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.NM_USER_MIDDLE IS 'Current, valid middle name of each individual user known to Portal system.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.NM_USER_LAST IS 'Current, valid last name of each individual user known to Portal system.';
   
   COMMENT ON COLUMN CAPS.PORTAL_USER.NM_USER_FULL IS 'Current, valid full name (Format: LastName, FirstName MiddleInitial) of each individual user known to Portal system.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.TXT_TITLE IS 'User''s Title code (i.e. Mr, Ms, Mrs)';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.TXT_USER_EMAIL IS 'User''s email ID';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.NBR_USER_PHONE IS 'User''s Phone Number';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.NBR_USER_PHONE_EXTENSION IS 'User''s Phone Extension';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.ADDR_USER_ADDR_ZIP IS 'User''s Address Zip';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.CD_USER_ADDR_STATE IS 'User''s Address State Code';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.ADDR_USER_ADDR_CITY IS 'User''s Address City';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.ADDR_USER_ADDR_ST_LN_1 IS 'User''s Address Street Line 1';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.ADDR_USER_ADDR_ST_LN_2 IS 'User''s Address Street Line 2';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.CD_USER_ADDR_COUNTY IS 'User''s Address County Code';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.CD_REQUEST_TYPE IS 'User''s Access Request type (ex. Admin, User)';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.TXT_OTHER IS 'Additional comments';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.TXT_PASSWORD IS 'Password Field Encrypted';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.IND_USER_AGREEMENT IS 'Indicator User accepting User''s agreement';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.IND_ADMIN_AGREEMENT IS 'Indicator User accepting Admin''s agreement';
   
   COMMENT ON COLUMN CAPS.PORTAL_USER.CD_STATUS IS 'Identifies the status (i.e. Active/Inactive/Pending)';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.CD_QUESTION_1 IS 'Password Retrieval Question 1';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.CD_QUESTION_2 IS 'Password Retrieval Question 2';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.CD_QUESTION_3 IS 'Password Retrieval Question 3';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.TXT_ANSWER_1 IS 'Password Retrieval encrypted Answer 1';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.TXT_ANSWER_2 IS 'Password Retrieval encrypted Answer 2';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.TXT_ANSWER_3 IS 'Password Retrieval encrypted Answer 3';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.DT_LAST_PASSWD_RESET IS 'Last Password reset date';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.IND_PASSWD_TEMP IS 'Indicator whether the password is tempraory';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.NBR_FAILED_LOGIN_ATTEMPTS IS 'Number of failed login attempts';

   COMMENT ON COLUMN CAPS.PORTAL_USER.ID_SHINES_PERSON_MODIFIED_BY IS 'Shines Person ID modified the record';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER.ID_PORTAL_PERSON_MODIFIED_BY IS 'Portal User ID modified the record';
   
   COMMENT ON TABLE CAPS.PORTAL_USER  IS 'Details about a Portal Users.';
 
   grant select,update,insert,delete on CAPS.PORTAL_USER to capson,capsbat,ops$datafix;
   grant select on caps.PORTAL_USER to operator;

   CREATE SEQUENCE  CAPS.SEQ_PORTAL_USER  NOMINVALUE NOMAXVALUE INCREMENT
   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

   grant select on CAPS.SEQ_PORTAL_USER  to capsbat,capson,ops$datafix;

  CREATE INDEX CAPS.IND_PORTAL_USER_1 ON CAPS.PORTAL_USER (CD_REQUEST_TYPE) 
    TABLESPACE INDEX01 ;

  CREATE INDEX CAPS.IND_PORTAL_USER_2 ON CAPS.PORTAL_USER (NM_USER_FIRST, NM_USER_LAST, ID_USER) 
    TABLESPACE INDEX01 ;
 
  CREATE INDEX CAPS.IND_PORTAL_USER_3 ON CAPS.PORTAL_USER (NM_USER_LAST, NM_USER_FIRST, ID_USER) 
    TABLESPACE INDEX01 ; 
  
  CREATE INDEX CAPS.IND_PORTAL_USER_4 ON CAPS.PORTAL_USER (NBR_USER_PHONE) 
    TABLESPACE INDEX01 ;

  CREATE INDEX CAPS.IND_PORTAL_USER_5 ON CAPS.PORTAL_USER (NM_USER_FULL) 
    TABLESPACE INDEX01 ;   

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_PORTAL_USER
BEFORE INSERT
ON CAPS.PORTAL_USER
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
declare
   dummy  number(16);
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;

  IF (:NEW.id_user is null or :NEW.id_user=0) then
      SELECT seq_portal_user.nextval INTO dummy FROM dual;
      :NEW.id_user := dummy;
  END IF;

  insert into PORTAL_USER_AUDIT(
        ID_USER,
	DT_LAST_UPDATE,
	NM_USER_FIRST,
	NM_USER_MIDDLE,
	NM_USER_LAST,
	NM_USER_FULL,
	TXT_TITLE,
	TXT_USER_EMAIL,
	NBR_USER_PHONE,
	NBR_USER_PHONE_EXTENSION,
        ADDR_USER_ADDR_ZIP,
        CD_USER_ADDR_STATE,
        ADDR_USER_ADDR_CITY,
        ADDR_USER_ADDR_ST_LN_1,
        ADDR_USER_ADDR_ST_LN_2,
        CD_USER_ADDR_COUNTY,
        CD_REQUEST_TYPE,
        TXT_OTHER,
        TXT_PASSWORD,
        IND_USER_AGREEMENT,
        IND_ADMIN_AGREEMENT,
        CD_STATUS,
        CD_QUESTION_1,
        CD_QUESTION_2,
        CD_QUESTION_3,
        TXT_ANSWER_1,
	TXT_ANSWER_2,
        TXT_ANSWER_3,
        DT_LAST_PASSWD_RESET,
        IND_PASSWD_TEMP,
        NBR_FAILED_LOGIN_ATTEMPTS,
        ID_SHINES_PERSON_MODIFIED_BY,
        ID_PORTAL_PERSON_MODIFIED_BY,
	TABLE_ACTION
    ) values (
        :NEW.ID_USER,
	:NEW.DT_LAST_UPDATE,
	:NEW.NM_USER_FIRST,
	:NEW.NM_USER_MIDDLE,
	:NEW.NM_USER_LAST,
	:NEW.NM_USER_FULL,
	:NEW.TXT_TITLE,
	:NEW.TXT_USER_EMAIL,
	:NEW.NBR_USER_PHONE,
	:NEW.NBR_USER_PHONE_EXTENSION,
        :NEW.ADDR_USER_ADDR_ZIP,
        :NEW.CD_USER_ADDR_STATE,
        :NEW.ADDR_USER_ADDR_CITY,
        :NEW.ADDR_USER_ADDR_ST_LN_1,
        :NEW.ADDR_USER_ADDR_ST_LN_2,
        :NEW.CD_USER_ADDR_COUNTY,
        :NEW.CD_REQUEST_TYPE,
        :NEW.TXT_OTHER,
        :NEW.TXT_PASSWORD,
        :NEW.IND_USER_AGREEMENT,
        :NEW.IND_ADMIN_AGREEMENT,
        :NEW.CD_STATUS,
        :NEW.CD_QUESTION_1,
        :NEW.CD_QUESTION_2,
        :NEW.CD_QUESTION_3,
        :NEW.TXT_ANSWER_1,
	:NEW.TXT_ANSWER_2,
        :NEW.TXT_ANSWER_3,
        :NEW.DT_LAST_PASSWD_RESET,
        :NEW.IND_PASSWD_TEMP,
        :NEW.NBR_FAILED_LOGIN_ATTEMPTS,
        :NEW.ID_SHINES_PERSON_MODIFIED_BY,
        :NEW.ID_PORTAL_PERSON_MODIFIED_BY,
        'INSERT'
    );
END;
/

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_PORTAL_USER
BEFORE UPDATE
ON CAPS.PORTAL_USER
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW

BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;

  insert into PORTAL_USER_AUDIT(
        ID_USER,
	DT_LAST_UPDATE,
	NM_USER_FIRST,
	NM_USER_MIDDLE,
	NM_USER_LAST,
	NM_USER_FULL,
	TXT_TITLE,
	TXT_USER_EMAIL,
	NBR_USER_PHONE,
	NBR_USER_PHONE_EXTENSION,
        ADDR_USER_ADDR_ZIP,
        CD_USER_ADDR_STATE,
        ADDR_USER_ADDR_CITY,
        ADDR_USER_ADDR_ST_LN_1,
        ADDR_USER_ADDR_ST_LN_2,
        CD_USER_ADDR_COUNTY,
        CD_REQUEST_TYPE,
        TXT_OTHER,
        TXT_PASSWORD,
        IND_USER_AGREEMENT,
        IND_ADMIN_AGREEMENT,
        CD_STATUS,
        CD_QUESTION_1,
        CD_QUESTION_2,
        CD_QUESTION_3,
        TXT_ANSWER_1,
	TXT_ANSWER_2,
        TXT_ANSWER_3,
        DT_LAST_PASSWD_RESET,
        IND_PASSWD_TEMP,
        NBR_FAILED_LOGIN_ATTEMPTS,
        ID_SHINES_PERSON_MODIFIED_BY,
        ID_PORTAL_PERSON_MODIFIED_BY,
	TABLE_ACTION
    ) values (
        :NEW.ID_USER,
	:NEW.DT_LAST_UPDATE,
	:NEW.NM_USER_FIRST,
	:NEW.NM_USER_MIDDLE,
	:NEW.NM_USER_LAST,
	:NEW.NM_USER_FULL,
	:NEW.TXT_TITLE,
	:NEW.TXT_USER_EMAIL,
	:NEW.NBR_USER_PHONE,
	:NEW.NBR_USER_PHONE_EXTENSION,
        :NEW.ADDR_USER_ADDR_ZIP,
        :NEW.CD_USER_ADDR_STATE,
        :NEW.ADDR_USER_ADDR_CITY,
        :NEW.ADDR_USER_ADDR_ST_LN_1,
        :NEW.ADDR_USER_ADDR_ST_LN_2,
        :NEW.CD_USER_ADDR_COUNTY,
        :NEW.CD_REQUEST_TYPE,
        :NEW.TXT_OTHER,
        :NEW.TXT_PASSWORD,
        :NEW.IND_USER_AGREEMENT,
        :NEW.IND_ADMIN_AGREEMENT,
        :NEW.CD_STATUS,
        :NEW.CD_QUESTION_1,
        :NEW.CD_QUESTION_2,
        :NEW.CD_QUESTION_3,
        :NEW.TXT_ANSWER_1,
	:NEW.TXT_ANSWER_2,
        :NEW.TXT_ANSWER_3,
        :NEW.DT_LAST_PASSWD_RESET,
        :NEW.IND_PASSWD_TEMP,
        :NEW.NBR_FAILED_LOGIN_ATTEMPTS,
        :NEW.ID_SHINES_PERSON_MODIFIED_BY,
        :NEW.ID_PORTAL_PERSON_MODIFIED_BY,
        'UPDATE'
    );
END;
/

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
CREATE OR REPLACE TRIGGER CAPS.TDBR_PORTAL_USER
BEFORE DELETE
ON CAPS.PORTAL_USER
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW

BEGIN

  insert into PORTAL_USER_AUDIT(
        ID_USER,
	DT_LAST_UPDATE,
	NM_USER_FIRST,
	NM_USER_MIDDLE,
	NM_USER_LAST,
	NM_USER_FULL,
	TXT_TITLE,
	TXT_USER_EMAIL,
	NBR_USER_PHONE,
	NBR_USER_PHONE_EXTENSION,
        ADDR_USER_ADDR_ZIP,
        CD_USER_ADDR_STATE,
        ADDR_USER_ADDR_CITY,
        ADDR_USER_ADDR_ST_LN_1,
        ADDR_USER_ADDR_ST_LN_2,
        CD_USER_ADDR_COUNTY,
        CD_REQUEST_TYPE,
        TXT_OTHER,
        TXT_PASSWORD,
        IND_USER_AGREEMENT,
        IND_ADMIN_AGREEMENT,
        CD_STATUS,
        CD_QUESTION_1,
        CD_QUESTION_2,
        CD_QUESTION_3,
        TXT_ANSWER_1,
	TXT_ANSWER_2,
        TXT_ANSWER_3,
        DT_LAST_PASSWD_RESET,
        IND_PASSWD_TEMP,
        NBR_FAILED_LOGIN_ATTEMPTS,
        ID_SHINES_PERSON_MODIFIED_BY,
        ID_PORTAL_PERSON_MODIFIED_BY,
	TABLE_ACTION
    ) values (
        :NEW.ID_USER,
	:NEW.DT_LAST_UPDATE,
	:NEW.NM_USER_FIRST,
	:NEW.NM_USER_MIDDLE,
	:NEW.NM_USER_LAST,
	:NEW.NM_USER_FULL,
	:NEW.TXT_TITLE,
	:NEW.TXT_USER_EMAIL,
	:NEW.NBR_USER_PHONE,
	:NEW.NBR_USER_PHONE_EXTENSION,
        :NEW.ADDR_USER_ADDR_ZIP,
        :NEW.CD_USER_ADDR_STATE,
        :NEW.ADDR_USER_ADDR_CITY,
        :NEW.ADDR_USER_ADDR_ST_LN_1,
        :NEW.ADDR_USER_ADDR_ST_LN_2,
        :NEW.CD_USER_ADDR_COUNTY,
        :NEW.CD_REQUEST_TYPE,
        :NEW.TXT_OTHER,
        :NEW.TXT_PASSWORD,
        :NEW.IND_USER_AGREEMENT,
        :NEW.IND_ADMIN_AGREEMENT,
        :NEW.CD_STATUS,
        :NEW.CD_QUESTION_1,
        :NEW.CD_QUESTION_2,
        :NEW.CD_QUESTION_3,
        :NEW.TXT_ANSWER_1,
	:NEW.TXT_ANSWER_2,
        :NEW.TXT_ANSWER_3,
        :NEW.DT_LAST_PASSWD_RESET,
        :NEW.IND_PASSWD_TEMP,
        :NEW.NBR_FAILED_LOGIN_ATTEMPTS,
        :NEW.ID_SHINES_PERSON_MODIFIED_BY,
        :NEW.ID_PORTAL_PERSON_MODIFIED_BY,
        'DELETE'
    );
END;
/

--Portal User Vendor Link Audit Table
   CREATE TABLE CAPS.PORTAL_USR_VENDOR_LNK_AUDIT 
     (	ID_PORTAL_USR_VENDOR_LNK_AUDIT NUMBER(16,0) NOT NULL ENABLE,
        ID_PORTAL_USER_VENDOR_LINK NUMBER(16,0) NOT NULL,
  	DT_LAST_UPDATE DATE NOT NULL ENABLE, 
  	ID_USER NUMBER(16,0), 
  	ID_RESOURCE NUMBER(16,0), 
  	CD_ACCESS_TYPE VARCHAR2(3 BYTE), 
  	CD_STATUS VARCHAR2(4 BYTE),
  	ID_SHINES_PERSON_MODIFIED_BY NUMBER(16,0),
        ID_PORTAL_PERSON_MODIFIED_BY NUMBER(16,0),
        DT_START DATE, 
	DT_END DATE,
        TABLE_ACTION varchar2(10),        
  	 CONSTRAINT PK_USER_VENDOR_LINK_AUDIT PRIMARY KEY (ID_PORTAL_USR_VENDOR_LNK_AUDIT)
    USING INDEX 
    TABLESPACE INDEX01  ENABLE
     ) 
    TABLESPACE DATA01 ;
   
  
     COMMENT ON COLUMN CAPS.PORTAL_USR_VENDOR_LNK_AUDIT.ID_PORTAL_USR_VENDOR_LNK_AUDIT IS 'A unique integer which defines an Portal User Vendor Link Audit.';

     COMMENT ON COLUMN CAPS.PORTAL_USR_VENDOR_LNK_AUDIT.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';
   
     COMMENT ON COLUMN CAPS.PORTAL_USR_VENDOR_LNK_AUDIT.ID_USER IS 'A unique integer which identifies a Portal User''s ID';
   
     COMMENT ON COLUMN CAPS.PORTAL_USR_VENDOR_LNK_AUDIT.ID_RESOURCE IS 'Resource ID from Caps_Resource Table';
   
     COMMENT ON COLUMN CAPS.PORTAL_USR_VENDOR_LNK_AUDIT.CD_ACCESS_TYPE IS 'Identifies the type of access (i.e. admin/user acess)';
   
     COMMENT ON COLUMN CAPS.PORTAL_USR_VENDOR_LNK_AUDIT.CD_STATUS IS 'Identifies the status (i.e. Active/Inactive/Pending)';
     
     COMMENT ON COLUMN CAPS.PORTAL_USR_VENDOR_LNK_AUDIT.ID_SHINES_PERSON_MODIFIED_BY IS 'Shines Person ID modified the record';
 
     COMMENT ON COLUMN CAPS.PORTAL_USR_VENDOR_LNK_AUDIT.ID_PORTAL_PERSON_MODIFIED_BY IS 'Portal User ID modified the record';

     COMMENT ON COLUMN CAPS.PORTAL_USR_VENDOR_LNK_AUDIT.TABLE_ACTION IS 'INSERT,UPDATE or DELETE. This field shows the type of SQL statement that changed the data.';

   grant select,update,insert,delete on CAPS.PORTAL_USR_VENDOR_LNK_AUDIT to capson,capsbat,ops$datafix;
   grant select on caps.PORTAL_USR_VENDOR_LNK_AUDIT to operator;
   
   CREATE SEQUENCE  CAPS.SEQ_PORTAL_USR_VNDR_LNK_AUDIT  NOMINVALUE NOMAXVALUE INCREMENT
   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

   grant select on CAPS.SEQ_PORTAL_USR_VNDR_LNK_AUDIT  to capsbat,capson,ops$datafix;

    CREATE INDEX CAPS.IND_PRTL_USR_VNDR_LNK_AUDIT_1 ON CAPS.PORTAL_USR_VENDOR_LNK_AUDIT (ID_RESOURCE) 
        TABLESPACE INDEX01 ;
  
    CREATE INDEX CAPS.IND_PRTL_USR_VNDR_LNK_AUDIT_2 ON CAPS.PORTAL_USR_VENDOR_LNK_AUDIT (ID_USER, ID_RESOURCE) 
        TABLESPACE INDEX01 ;

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
 CREATE OR REPLACE TRIGGER CAPS.TIBR_PORTAL_USR_VNDR_LNK_AUDIT 
BEFORE INSERT
ON CAPS.PORTAL_USR_VENDOR_LNK_AUDIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
dummy number;
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;

  IF (:NEW.ID_PORTAL_USR_VENDOR_LNK_AUDIT is null or :NEW.ID_PORTAL_USR_VENDOR_LNK_AUDIT=0) then
      SELECT SEQ_PORTAL_USR_VNDR_LNK_AUDIT.nextval INTO dummy FROM dual;
      :NEW.ID_PORTAL_USR_VENDOR_LNK_AUDIT := dummy;
  END IF;

END;
/



--Portal User Vendor Link Table
   CREATE TABLE CAPS.PORTAL_USER_VENDOR_LINK 
     (	ID_PORTAL_USER_VENDOR_LINK NUMBER(16,0) NOT NULL ENABLE, 
  	DT_LAST_UPDATE DATE NOT NULL ENABLE, 
  	ID_USER NUMBER(16,0) NOT NULL ENABLE, 
  	ID_RESOURCE NUMBER(16,0) NOT NULL ENABLE, 
  	CD_ACCESS_TYPE VARCHAR2(3 BYTE), 
  	CD_STATUS VARCHAR2(4 BYTE),
        ID_SHINES_PERSON_MODIFIED_BY NUMBER(16,0),
        ID_PORTAL_PERSON_MODIFIED_BY NUMBER(16,0),
        DT_START DATE, 
	DT_END DATE, 
  	 CONSTRAINT PK_USER_VENDOR_LINK PRIMARY KEY (ID_PORTAL_USER_VENDOR_LINK)
    USING INDEX 
    TABLESPACE INDEX01  ENABLE, 
  	 CONSTRAINT UK1_USER_VENDOR_LINK UNIQUE (ID_USER, ID_RESOURCE)
    USING INDEX 
    TABLESPACE INDEX01  ENABLE
     ) 
    TABLESPACE DATA01 ;
   
  
     COMMENT ON COLUMN CAPS.PORTAL_USER_VENDOR_LINK.ID_PORTAL_USER_VENDOR_LINK IS 'A unique integer which defines an Portal User Vendor Link.';
   
     COMMENT ON COLUMN CAPS.PORTAL_USER_VENDOR_LINK.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';
   
     COMMENT ON COLUMN CAPS.PORTAL_USER_VENDOR_LINK.ID_USER IS 'A unique integer which identifies a Portal User''s ID';
   
     COMMENT ON COLUMN CAPS.PORTAL_USER_VENDOR_LINK.ID_RESOURCE IS 'Resource ID from Caps_Resource Table';
   
     COMMENT ON COLUMN CAPS.PORTAL_USER_VENDOR_LINK.CD_ACCESS_TYPE IS 'Identifies the type of access (i.e. admin/user acess)';
   
     COMMENT ON COLUMN CAPS.PORTAL_USER_VENDOR_LINK.CD_STATUS IS 'Identifies the status (i.e. Active/Inactive/Pending)';

     COMMENT ON COLUMN CAPS.PORTAL_USER_VENDOR_LINK.ID_SHINES_PERSON_MODIFIED_BY IS 'Shines Person ID modified the record';
 
     COMMENT ON COLUMN CAPS.PORTAL_USER_VENDOR_LINK.ID_PORTAL_PERSON_MODIFIED_BY IS 'Portal User ID modified the record';

   grant select,update,insert,delete on CAPS.PORTAL_USER_VENDOR_LINK to capson,capsbat,ops$datafix;
   grant select on caps.PORTAL_USER_VENDOR_LINK to operator;
   
   CREATE SEQUENCE  CAPS.SEQ_PORTAL_USER_VENDOR_LINK  NOMINVALUE NOMAXVALUE INCREMENT
   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

   grant select on CAPS.SEQ_PORTAL_USER_VENDOR_LINK  to capsbat,capson,ops$datafix;
  
    CREATE INDEX CAPS.IND_PORTAL_USER_VENDOR_LINK_1 ON CAPS.PORTAL_USER_VENDOR_LINK (ID_RESOURCE) 
        TABLESPACE INDEX01 ;

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_PORTAL_USR_VNDR_LNK
BEFORE INSERT
ON CAPS.PORTAL_USER_VENDOR_LINK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
declare
   dummy  number(16);
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;

  IF (:NEW.ID_PORTAL_USER_VENDOR_LINK is null or :NEW.ID_PORTAL_USER_VENDOR_LINK=0) then
      SELECT SEQ_PORTAL_USER_VENDOR_LINK.nextval INTO dummy FROM dual;
      :NEW.ID_PORTAL_USER_VENDOR_LINK := dummy;
  END IF;

  insert into PORTAL_USR_VENDOR_LNK_AUDIT(
        ID_PORTAL_USER_VENDOR_LINK,
  	DT_LAST_UPDATE, 
  	ID_USER, 
  	ID_RESOURCE, 
  	CD_ACCESS_TYPE, 
  	CD_STATUS,
  	ID_SHINES_PERSON_MODIFIED_BY,
        ID_PORTAL_PERSON_MODIFIED_BY,
        DT_START, 
	DT_END,
        TABLE_ACTION)
   VALUES (
        :NEW.ID_PORTAL_USER_VENDOR_LINK,
  	:NEW.DT_LAST_UPDATE, 
  	:NEW.ID_USER, 
  	:NEW.ID_RESOURCE, 
  	:NEW.CD_ACCESS_TYPE, 
  	:NEW.CD_STATUS,
  	:NEW.ID_SHINES_PERSON_MODIFIED_BY,
        :NEW.ID_PORTAL_PERSON_MODIFIED_BY,
        :NEW.DT_START, 
	:NEW.DT_END,
        'INSERT');
END;
/  

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_PORTAL_USR_VNDR_LNK
BEFORE UPDATE
ON CAPS.PORTAL_USER_VENDOR_LINK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW

BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;

  insert into PORTAL_USR_VENDOR_LNK_AUDIT(
        ID_PORTAL_USER_VENDOR_LINK,
  	DT_LAST_UPDATE, 
  	ID_USER, 
  	ID_RESOURCE, 
  	CD_ACCESS_TYPE, 
  	CD_STATUS,
  	ID_SHINES_PERSON_MODIFIED_BY,
        ID_PORTAL_PERSON_MODIFIED_BY,
        DT_START, 
	DT_END,
        TABLE_ACTION)
   VALUES (
        :NEW.ID_PORTAL_USER_VENDOR_LINK,
  	:NEW.DT_LAST_UPDATE, 
  	:NEW.ID_USER, 
  	:NEW.ID_RESOURCE, 
  	:NEW.CD_ACCESS_TYPE, 
  	:NEW.CD_STATUS,
  	:NEW.ID_SHINES_PERSON_MODIFIED_BY,
        :NEW.ID_PORTAL_PERSON_MODIFIED_BY,
        :NEW.DT_START, 
	:NEW.DT_END,
        'UPDATE');
END;
/  

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
CREATE OR REPLACE TRIGGER CAPS.TDBR_PORTAL_USR_VNDR_LNK
BEFORE DELETE
ON CAPS.PORTAL_USER_VENDOR_LINK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW

BEGIN

  insert into PORTAL_USR_VENDOR_LNK_AUDIT(
        ID_PORTAL_USER_VENDOR_LINK,
  	DT_LAST_UPDATE, 
  	ID_USER, 
  	ID_RESOURCE, 
  	CD_ACCESS_TYPE, 
  	CD_STATUS,
  	ID_SHINES_PERSON_MODIFIED_BY,
        ID_PORTAL_PERSON_MODIFIED_BY,
        DT_START, 
	DT_END,
        TABLE_ACTION)
   VALUES (
        :NEW.ID_PORTAL_USER_VENDOR_LINK,
  	:NEW.DT_LAST_UPDATE, 
  	:NEW.ID_USER, 
  	:NEW.ID_RESOURCE, 
  	:NEW.CD_ACCESS_TYPE, 
  	:NEW.CD_STATUS,
  	:NEW.ID_SHINES_PERSON_MODIFIED_BY,
        :NEW.ID_PORTAL_PERSON_MODIFIED_BY,
        :NEW.DT_START, 
	:NEW.DT_END,
        'DELETE');
END;
/  
  
           
 
    --Portal Metaphor table
    
    

  CREATE TABLE CAPS.PORTAL_METAPHOR 
   (	ID_TAB NUMBER(4,0) NOT NULL ENABLE, 
	TXT_TAB_URL VARCHAR2(90 BYTE), 
	TXT_TAB_CONSTANT VARCHAR2(90 BYTE), 
	TXT_TAB VARCHAR2(40 BYTE), 
	TXT_L1_IMG_INACTIVE VARCHAR2(40 BYTE), 
	TXT_L1_IMG_ACTIVE VARCHAR2(40 BYTE), 
	TXT_FILTER_PATH VARCHAR2(200 BYTE), 
	DT_LAST_UPDATE DATE, 
	 CONSTRAINT PK_PORTAL_METAPHOR PRIMARY KEY (ID_TAB)
  USING INDEX 
  TABLESPACE INDEX01  ENABLE
   ) 
  TABLESPACE DATA01 ;
 

   COMMENT ON COLUMN CAPS.PORTAL_METAPHOR.ID_TAB IS 'A unique ID identifying each tab.';
 
   COMMENT ON COLUMN CAPS.PORTAL_METAPHOR.TXT_TAB_URL IS 'The URL to which the tab links.';
 
   COMMENT ON COLUMN CAPS.PORTAL_METAPHOR.TXT_TAB_CONSTANT IS 'A unique constant which maps to the tab ID.';
 
   COMMENT ON COLUMN CAPS.PORTAL_METAPHOR.TXT_TAB IS 'The text that appears on the tab.';
 
   COMMENT ON COLUMN CAPS.PORTAL_METAPHOR.TXT_L1_IMG_INACTIVE IS 'The location of the 1st level inactive tab image.';
 
   COMMENT ON COLUMN CAPS.PORTAL_METAPHOR.TXT_L1_IMG_ACTIVE IS 'The location of the 1st level active tab image.';
 
   COMMENT ON COLUMN CAPS.PORTAL_METAPHOR.TXT_FILTER_PATH IS 'The location of the filter class that governs whether the tab displays (if applicable).';
 
   COMMENT ON COLUMN CAPS.PORTAL_METAPHOR.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';
 
   COMMENT ON TABLE CAPS.PORTAL_METAPHOR  IS 'Table used exclusively by the Portal application PORTAL_METAPHOR.  Data is loaded into hashmaps on startup by NavInit.java.';
 
   grant select,update,insert,delete on CAPS.PORTAL_METAPHOR to capson,capsbat,ops$datafix;
   grant select on caps.PORTAL_METAPHOR to operator;
   
   CREATE SEQUENCE  CAPS.SEQ_PORTAL_METAPHOR  NOMINVALUE NOMAXVALUE INCREMENT
   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

   grant select on CAPS.SEQ_PORTAL_METAPHOR  to capsbat,capson,ops$datafix;

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TIBR_PORTAL_METAPHOR 
BEFORE INSERT
ON CAPS.PORTAL_METAPHOR
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
declare
   dummy  number(16);
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;

  IF (:NEW.ID_TAB is null or :NEW.ID_TAB=0) then
      SELECT SEQ_PORTAL_METAPHOR.nextval INTO dummy FROM dual;
      :NEW.ID_TAB := dummy;
  END IF;
END;
/


ALTER TRIGGER CAPS.TIBR_PORTAL_METAPHOR ENABLE;
 
grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TUBR_PORTAL_METAPHOR 
BEFORE UPDATE
ON CAPS.PORTAL_METAPHOR
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/

ALTER TRIGGER CAPS.TUBR_PORTAL_METAPHOR ENABLE;

--Portal Command table

  CREATE TABLE CAPS.PORTAL_COMMAND 
   (	ID_COMMAND NUMBER(16,0) NOT NULL ENABLE, 
	DT_LAST_UPDATE DATE NOT NULL ENABLE, 
	NM_SERVLET VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	NM_CONVERSATION VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	NM_COMMAND VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	NM_BRANCH VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT PK_PORTAL_COMMAND PRIMARY KEY (ID_COMMAND)
  USING INDEX 
  TABLESPACE INDEX01  ENABLE
   ) 
  TABLESPACE DATA01 ;
 

   COMMENT ON COLUMN CAPS.PORTAL_COMMAND.ID_COMMAND IS 'Primary key - id of the impact command record.';
 
   COMMENT ON COLUMN CAPS.PORTAL_COMMAND.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';
 
   COMMENT ON COLUMN CAPS.PORTAL_COMMAND.NM_SERVLET IS 'Servlet name.';
 
   COMMENT ON COLUMN CAPS.PORTAL_COMMAND.NM_CONVERSATION IS 'Conversation name.';
 
   COMMENT ON COLUMN CAPS.PORTAL_COMMAND.NM_COMMAND IS 'command name.';
 
   COMMENT ON COLUMN CAPS.PORTAL_COMMAND.NM_BRANCH IS 'branch name.';
 
   COMMENT ON TABLE CAPS.PORTAL_COMMAND  IS 'Used for on demand  application tracing only';
 
   grant select,update,insert,delete on CAPS.PORTAL_COMMAND to capson,capsbat,ops$datafix;
   grant select on caps.PORTAL_COMMAND to operator;
   
   CREATE SEQUENCE  CAPS.SEQ_PORTAL_COMMAND  NOMINVALUE NOMAXVALUE INCREMENT
   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

   grant select on CAPS.SEQ_PORTAL_COMMAND  to capsbat,capson,ops$datafix;


grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TUBR_PORTAL_COMMAND 
BEFORE UPDATE
ON CAPS.PORTAL_COMMAND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;
END;
/


ALTER TRIGGER CAPS.TUBR_PORTAL_COMMAND ENABLE;
 
grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TIBR_PORTAL_COMMAND 
BEFORE INSERT
ON CAPS.PORTAL_COMMAND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
dummy number;
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;

  IF (:NEW.id_command is null or :NEW.id_command=0) then
      SELECT seq_impact_command.nextval INTO dummy FROM dual;
      :NEW.id_command := dummy;
  END IF;

END;
/


ALTER TRIGGER CAPS.TIBR_PORTAL_COMMAND ENABLE;

--PORTAL_SECURITY_CLASS_AUDIT table

  CREATE TABLE CAPS.PORTAL_SECURITY_CLASS_AUDIT 
   (	ID_PORTAL_SECURITY_CLASS_AUDIT NUMBER(16,0) NOT NULL ENABLE, 
	CD_SECURITY_CLASS_NAME VARCHAR2(15 BYTE) NOT NULL ENABLE, 
	DT_LAST_UPDATE DATE NOT NULL ENABLE, 
	TXT_SECURITY_CLASS_PROFIL VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	IND_RESTRICT VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ENABLE, 
	ID_PERSON_MODIFIED_BY NUMBER(16,0) NOT NULL ENABLE, 
        TABLE_ACTION varchar2(10),
	 CONSTRAINT PK_PORTAL_SECURITY_CLASS_AUDIT PRIMARY KEY (ID_PORTAL_SECURITY_CLASS_AUDIT)
  USING INDEX 
  TABLESPACE INDEX01  ENABLE
   ) 
  TABLESPACE DATA01 ;
 

   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS_AUDIT.ID_PORTAL_SECURITY_CLASS_AUDIT IS 'Unique key for the PORTAL_SECURITY_CLASS_AUDIT table';
 
   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS_AUDIT.CD_SECURITY_CLASS_NAME IS 'Stores the name of the security class. Also is used to uniquely identify each row. Mislabeled as a code. There is no associated codes table with this data element.';
 
   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS_AUDIT.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';
 
   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS_AUDIT.TXT_SECURITY_CLASS_PROFIL IS 'Field containing an employee''s security profile. Each position in TxtSecurityAttribute corresponds to a specific permission.';
 
   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS_AUDIT.IND_RESTRICT IS 'If that class is restricted';
 
   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS_AUDIT.ID_PERSON_MODIFIED_BY IS 'Id of Employee who last modified this record';

   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS_AUDIT.TABLE_ACTION IS 'UPDATE, INSERT or DELETE. This field shows the type of SQL statement that changed the data.';
 
   COMMENT ON TABLE CAPS.PORTAL_SECURITY_CLASS_AUDIT  IS 'Audit table for Portal Security Class table';

   grant select,update,insert,delete on CAPS.PORTAL_SECURITY_CLASS_AUDIT to capson,capsbat,ops$datafix;
   grant select on caps.PORTAL_SECURITY_CLASS_AUDIT to operator;
   
   CREATE SEQUENCE  CAPS.SEQ_PORTAL_SECURITY_CLSS_AUDIT  NOMINVALUE NOMAXVALUE INCREMENT
   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

   grant select on CAPS.SEQ_PORTAL_SECURITY_CLSS_AUDIT  to capsbat,capson,ops$datafix;


grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TIBR_POR_SECURITY_CLASS_AUDIT 
BEFORE INSERT
ON CAPS.PORTAL_SECURITY_CLASS_AUDIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
  dummy    NUMBER;
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;
  IF (:NEW.ID_PORTAL_SECURITY_CLASS_AUDIT IS NULL OR :NEW.ID_PORTAL_SECURITY_CLASS_AUDIT = 0) THEN
    SELECT  SEQ_PORTAL_SECURITY_CLSS_AUDIT.NEXTVAL
    INTO  dummy
    FROM  DUAL;
    :NEW.ID_PORTAL_SECURITY_CLASS_AUDIT := dummy;
  END IF;
END;
/

ALTER TRIGGER CAPS.TIBR_POR_SECURITY_CLASS_AUDIT ENABLE;

 

--Portal Class Security Table

  CREATE TABLE CAPS.PORTAL_SECURITY_CLASS 
   (	CD_SECURITY_CLASS_NAME VARCHAR2(15 BYTE) NOT NULL ENABLE, 
	DT_LAST_UPDATE DATE NOT NULL ENABLE, 
	TXT_SECURITY_CLASS_PROFIL VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	IND_RESTRICT VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ENABLE, 
	ID_PERSON_MODIFIED_BY NUMBER(16,0) NOT NULL ENABLE, 
	 CONSTRAINT PK_PORTAL_SECURITY_CLASS PRIMARY KEY (CD_SECURITY_CLASS_NAME)
  USING INDEX 
  TABLESPACE INDEX01  ENABLE, 
	 CONSTRAINT FK_POR_SEC_CLASS_EMPLOYEE FOREIGN KEY (ID_PERSON_MODIFIED_BY)
	  REFERENCES CAPS.EMPLOYEE (ID_PERSON) ENABLE
   ) 
  TABLESPACE DATA01 ;
 

   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS.CD_SECURITY_CLASS_NAME IS 'Stores the name of the security class. Also is used to uniquely identify each row. Mislabeled as a code. There is no associated codes table with this data element.';
 
   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';
 
   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS.TXT_SECURITY_CLASS_PROFIL IS 'Field containing an employee''s security profile. Each position in TxtSecurityAttribute corresponds to a specific permission.';
 
   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS.IND_RESTRICT IS 'If that class is restricted';
 
   COMMENT ON COLUMN CAPS.PORTAL_SECURITY_CLASS.ID_PERSON_MODIFIED_BY IS 'Id of Employee who last modified this record';
 
   COMMENT ON TABLE CAPS.PORTAL_SECURITY_CLASS  IS 'Security classes established for IMPACT. Each security class has security attributes that enable the user to perform certain functions in the application.';

   grant select,update,insert,delete on CAPS.PORTAL_SECURITY_CLASS to capson,capsbat,ops$datafix;
   grant select on caps.PORTAL_SECURITY_CLASS to operator;
   
--   CREATE SEQUENCE  CAPS.SEQ_PORTAL_SECURITY_CLASS  NOMINVALUE NOMAXVALUE INCREMENT
--   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

--   grant select on CAPS.SEQ_PORTAL_SECURITY_CLASS  to capsbat,capson,ops$datafix;

  CREATE INDEX CAPS.IND_PORTAL_SECURITY_CLASS_1 ON CAPS.PORTAL_SECURITY_CLASS (ID_PERSON_MODIFIED_BY) 
    TABLESPACE INDEX01 ;
 
grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TIBR_PORTAL_SECURITY_CLASS 
BEFORE INSERT
ON CAPS.PORTAL_SECURITY_CLASS
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;
  insert into PORTAL_SECURITY_CLASS_audit(
    CD_SECURITY_CLASS_NAME,
      TXT_SECURITY_CLASS_PROFIL,
      IND_RESTRICT,
      ID_PERSON_MODIFIED_BY,
      TABLE_ACTION
    ) values (
      :NEW.CD_SECURITY_CLASS_NAME,
      :NEW.TXT_SECURITY_CLASS_PROFIL,
      :NEW.IND_RESTRICT,
      :NEW.ID_PERSON_MODIFIED_BY,
      'INSERT'
    );
END;
/

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TUBR_PORTAL_SECURITY_CLASS 
BEFORE UPDATE
ON CAPS.PORTAL_SECURITY_CLASS
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;
  insert into PORTAL_SECURITY_CLASS_audit(
    CD_SECURITY_CLASS_NAME,
      TXT_SECURITY_CLASS_PROFIL,
      IND_RESTRICT,
      ID_PERSON_MODIFIED_BY,
      TABLE_ACTION
    ) values (
      :NEW.CD_SECURITY_CLASS_NAME,
      :NEW.TXT_SECURITY_CLASS_PROFIL,
      :NEW.IND_RESTRICT,
      :NEW.ID_PERSON_MODIFIED_BY,
      'UPDATE'
    );
END;
/

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TDBR_PORTAL_SECURITY_CLASS 
BEFORE DELETE
ON CAPS.PORTAL_SECURITY_CLASS
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
  insert into PORTAL_SECURITY_CLASS_audit(
    CD_SECURITY_CLASS_NAME,
      TXT_SECURITY_CLASS_PROFIL,
      IND_RESTRICT,
      ID_PERSON_MODIFIED_BY,
      TABLE_ACTION
    ) values (
      :NEW.CD_SECURITY_CLASS_NAME,
      :NEW.TXT_SECURITY_CLASS_PROFIL,
      :NEW.IND_RESTRICT,
      :NEW.ID_PERSON_MODIFIED_BY,
      'DELETE'
    );
END;
/


--POR_USR_SEC_CLASS_LNK_AUDIT table

  CREATE TABLE CAPS.POR_USR_SEC_CLASS_LNK_AUDIT 
   (	ID_PORTAL_USER_SEC_LINK_AUDIT NUMBER(16,0) NOT NULL ENABLE, 
        ID_PORTAL_USER_SEC_LINK NUMBER(16,0) NOT NULL ENABLE, 
	DT_LAST_UPDATE DATE NOT NULL ENABLE, 
        CD_SECURITY_CLASS_NAME VARCHAR2(15 BYTE) NOT NULL ENABLE, 
	ID_USER NUMBER(16,0) NOT NULL ENABLE,
        ID_SHINES_PERSON_MODIFIED_BY NUMBER(16,0),
        ID_PORTAL_PERSON_MODIFIED_BY NUMBER(16,0), 
        TABLE_ACTION varchar2(10),
	 CONSTRAINT PK_POR_USR_SEC_CLASS_LNK_AUDIT PRIMARY KEY (ID_PORTAL_USER_SEC_LINK_AUDIT)
  USING INDEX 
  TABLESPACE INDEX01  ENABLE
   ) 
  TABLESPACE DATA01 ;
 

   COMMENT ON COLUMN CAPS.POR_USR_SEC_CLASS_LNK_AUDIT.ID_PORTAL_USER_SEC_LINK_AUDIT IS 'Unique key for POR_USR_SEC_CLASS_LNK_AUDIT table';
 
   COMMENT ON COLUMN CAPS.POR_USR_SEC_CLASS_LNK_AUDIT.ID_PORTAL_USER_SEC_LINK IS 'Provides a link between the Portal User table and the SECURITY CLASS table.  It defines the Portal Security available to each employee.';
 
   COMMENT ON COLUMN CAPS.POR_USR_SEC_CLASS_LNK_AUDIT.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';
 
   COMMENT ON COLUMN CAPS.POR_USR_SEC_CLASS_LNK_AUDIT.CD_SECURITY_CLASS_NAME IS 'Stores the name of the security class. Also is used to uniquely identify each row. Mislabeled as a code. There is no associated codes table with this data element.';
 
   COMMENT ON COLUMN CAPS.POR_USR_SEC_CLASS_LNK_AUDIT.ID_USER IS 'Contains the ID PERSON of an employee with IMPACT Security.';
 
   COMMENT ON COLUMN CAPS.POR_USR_SEC_CLASS_LNK_AUDIT.ID_SHINES_PERSON_MODIFIED_BY IS 'Id of SHINES user who modified the record.';

   COMMENT ON COLUMN CAPS.POR_USR_SEC_CLASS_LNK_AUDIT.ID_PORTAL_PERSON_MODIFIED_BY IS 'Id of PORTAL user who modified the record.';

   COMMENT ON COLUMN CAPS.POR_USR_SEC_CLASS_LNK_AUDIT.TABLE_ACTION IS 'UPDATE,INSERT or DELETE. This field show the type of SQL statement that changed the data.';
 
   COMMENT ON TABLE CAPS.POR_USR_SEC_CLASS_LNK_AUDIT  IS 'Audit table to track all modifications to the PORTAL_USER_SEC_CLASS_LINK table.';
 
   grant select,update,insert,delete on CAPS.POR_USR_SEC_CLASS_LNK_AUDIT to capson,capsbat,ops$datafix;
   grant select on caps.POR_USR_SEC_CLASS_LNK_AUDIT to operator;
   
   CREATE SEQUENCE  CAPS.SEQ_POR_USR_SEC_CLSS_LNK_AUDIT  NOMINVALUE NOMAXVALUE INCREMENT
   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

   grant select on CAPS.SEQ_POR_USR_SEC_CLSS_LNK_AUDIT  to capsbat,capson,ops$datafix;

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TIBR_POR_USR_SEC_LINK_AUDIT 
BEFORE INSERT
ON CAPS.POR_USR_SEC_CLASS_LNK_AUDIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
  dummy    NUMBER;
BEGIN
  :NEW.DT_LAST_UPDATE := SYSDATE;
  IF (:NEW.ID_PORTAL_USER_SEC_LINK_AUDIT IS NULL OR :NEW.ID_PORTAL_USER_SEC_LINK_AUDIT = 0) THEN
    SELECT  SEQ_POR_USR_SEC_CLSS_LNK_AUDIT.NEXTVAL
    INTO  dummy
    FROM  DUAL;
    :NEW.ID_PORTAL_USER_SEC_LINK_AUDIT := dummy;
  END IF;
END;
/


ALTER TRIGGER CAPS.TIBR_POR_USR_SEC_LINK_AUDIT ENABLE;


--PORTAL_USER_SEC_CLASS_LINK table


  CREATE TABLE CAPS.PORTAL_USER_SEC_CLASS_LINK 
   (	ID_PORTAL_USER_SEC_LINK NUMBER(16,0) NOT NULL ENABLE, 
	DT_LAST_UPDATE DATE NOT NULL ENABLE, 
	CD_SECURITY_CLASS_NAME VARCHAR2(15 BYTE) NOT NULL ENABLE, 
	ID_USER NUMBER(16,0) NOT NULL ENABLE, 
        ID_SHINES_PERSON_MODIFIED_BY NUMBER(16,0),
        ID_PORTAL_PERSON_MODIFIED_BY NUMBER(16,0),
	 CONSTRAINT PK_PORTAL_USER_SEC_CLASS_LINK PRIMARY KEY (ID_PORTAL_USER_SEC_LINK)
  USING INDEX 
  TABLESPACE INDEX01  ENABLE, 
	 CONSTRAINT FK_PORTAL_USER_SEC_CLASS_LINK FOREIGN KEY (CD_SECURITY_CLASS_NAME)
	  REFERENCES CAPS.PORTAL_SECURITY_CLASS (CD_SECURITY_CLASS_NAME) ENABLE, 
	 CONSTRAINT FK_SHINES_PRSN_SEC_CLASS_LINK FOREIGN KEY (ID_SHINES_PERSON_MODIFIED_BY)
	  REFERENCES CAPS.EMPLOYEE (ID_PERSON) ENABLE,
	 CONSTRAINT FK_PORTAL_PRSN_SEC_CLASS_LINK FOREIGN KEY (ID_PORTAL_PERSON_MODIFIED_BY)
	  REFERENCES CAPS.PORTAL_USER (ID_USER) ENABLE
   ) 
  TABLESPACE DATA01 ;
 

   COMMENT ON COLUMN CAPS.PORTAL_USER_SEC_CLASS_LINK.ID_PORTAL_USER_SEC_LINK IS 'Provides a link between the Portal User table and the SECURITY CLASS table.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_SEC_CLASS_LINK.DT_LAST_UPDATE IS 'Date of last update shows when the record was last modified.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_SEC_CLASS_LINK.CD_SECURITY_CLASS_NAME IS 'Stores the name of the security class. Also is used to uniquely identify each row. Mislabeled as a code. There is no associated codes table with this data element.';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_SEC_CLASS_LINK.ID_USER IS 'Contains the ID USER of an employee/portal user with IMPACT Security.';

   COMMENT ON COLUMN CAPS.PORTAL_USER_SEC_CLASS_LINK.ID_SHINES_PERSON_MODIFIED_BY IS 'Shines Person ID modified the record';
 
   COMMENT ON COLUMN CAPS.PORTAL_USER_SEC_CLASS_LINK.ID_PORTAL_PERSON_MODIFIED_BY IS 'Portal User ID modified the record'; 
   
   COMMENT ON TABLE CAPS.PORTAL_USER_SEC_CLASS_LINK  IS 'Provides a link between the Portal User table and the SECURITY CLASS table.';

   grant select,update,insert,delete on CAPS.PORTAL_USER_SEC_CLASS_LINK to capson,capsbat,ops$datafix;
   grant select on caps.PORTAL_USER_SEC_CLASS_LINK to operator;
   
   CREATE SEQUENCE  CAPS.SEQ_PORTAL_USER_SEC_CLASS_LINK  NOMINVALUE NOMAXVALUE INCREMENT
   BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

   grant select on CAPS.SEQ_PORTAL_USER_SEC_CLASS_LINK  to capsbat,capson,ops$datafix;



  CREATE INDEX CAPS.IND_POR_USR_SEC_CLASS_LINK_1 ON CAPS.PORTAL_USER_SEC_CLASS_LINK (ID_USER) 
    TABLESPACE INDEX01 ;
 
  CREATE INDEX CAPS.IND_POR_USR_SEC_CLASS_LINK_2 ON CAPS.PORTAL_USER_SEC_CLASS_LINK (CD_SECURITY_CLASS_NAME) 
    TABLESPACE INDEX01 ;
 
  CREATE INDEX CAPS.IND_POR_USR_SEC_CLASS_LINK_3 ON CAPS.PORTAL_USER_SEC_CLASS_LINK (ID_SHINES_PERSON_MODIFIED_BY) 
    TABLESPACE INDEX01 ;
 
  CREATE INDEX CAPS.IND_POR_USR_SEC_CLASS_LINK_4 ON CAPS.PORTAL_USER_SEC_CLASS_LINK (ID_PORTAL_PERSON_MODIFIED_BY) 
    TABLESPACE INDEX01 ;

grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
  CREATE OR REPLACE TRIGGER CAPS.TIBR_POR_USR_SEC_CLASS_LINK 
BEFORE INSERT
ON CAPS.PORTAL_USER_SEC_CLASS_LINK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
        dummy                       NUMBER;

BEGIN
        :NEW.DT_LAST_UPDATE := SYSDATE;

IF (:NEW.ID_PORTAL_USER_SEC_LINK = 0 OR :NEW.ID_PORTAL_USER_SEC_LINK IS NULL) THEN
                SELECT  SEQ_PORTAL_USER_SEC_CLASS_LINK.NEXTVAL
                INTO    dummy
                FROM    DUAL;
                :NEW.ID_PORTAL_USER_SEC_LINK := dummy;
        END IF;
        
        insert into POR_USR_SEC_CLASS_LNK_AUDIT(
          ID_PORTAL_USER_SEC_LINK,
          CD_SECURITY_CLASS_NAME,
          ID_USER,
          ID_SHINES_PERSON_MODIFIED_BY,
          ID_PORTAL_PERSON_MODIFIED_BY,
          TABLE_ACTION
        ) values (
          :NEW.ID_PORTAL_USER_SEC_LINK,
          :NEW.CD_SECURITY_CLASS_NAME,
          :NEW.ID_USER,
          :NEW.ID_SHINES_PERSON_MODIFIED_BY,
          :NEW.ID_PORTAL_PERSON_MODIFIED_BY,
          'INSERT'
        );

END;
/



ALTER TRIGGER CAPS.TIBR_POR_USR_SEC_CLASS_LINK ENABLE;
 


  grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_POR_USR_SEC_CLASS_LINK 
BEFORE UPDATE
ON CAPS.PORTAL_USER_SEC_CLASS_LINK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
        :NEW.DT_LAST_UPDATE := SYSDATE;
        insert into POR_USR_SEC_CLASS_LNK_AUDIT(
          ID_PORTAL_USER_SEC_LINK,
          CD_SECURITY_CLASS_NAME,
          ID_USER,
          ID_SHINES_PERSON_MODIFIED_BY,
          ID_PORTAL_PERSON_MODIFIED_BY,
          TABLE_ACTION
        ) values (
          :NEW.ID_PORTAL_USER_SEC_LINK,
          :NEW.CD_SECURITY_CLASS_NAME,
          :NEW.ID_USER,
          :NEW.ID_SHINES_PERSON_MODIFIED_BY,
          :NEW.ID_PORTAL_PERSON_MODIFIED_BY,
          'UPDATE'
        );
END;
/


ALTER TRIGGER CAPS.TUBR_POR_USR_SEC_CLASS_LINK ENABLE;
 
grant select on CAPS.SEQ_PORTAL_USER_AUDIT  to capsbat,capson,ops$datafix;
/
CREATE OR REPLACE TRIGGER CAPS.TDBR_POR_USR_SEC_CLASS_LINK 
BEFORE DELETE
ON CAPS.PORTAL_USER_SEC_CLASS_LINK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
        insert into POR_USR_SEC_CLASS_LNK_AUDIT(
          ID_PORTAL_USER_SEC_LINK,
          CD_SECURITY_CLASS_NAME,
          ID_USER,
          ID_SHINES_PERSON_MODIFIED_BY,
          ID_PORTAL_PERSON_MODIFIED_BY,
          TABLE_ACTION
        ) values (
          :NEW.ID_PORTAL_USER_SEC_LINK,
          :NEW.CD_SECURITY_CLASS_NAME,
          :NEW.ID_USER,
          :NEW.ID_SHINES_PERSON_MODIFIED_BY,
          :NEW.ID_PORTAL_PERSON_MODIFIED_BY,
          'DELETE'
        );
END;
/


ALTER TRIGGER CAPS.TDBR_POR_USR_SEC_CLASS_LINK ENABLE;
 

insert into caps.schema_version (id_schema_version, application_version, comments)
                        values (569, 'SacwisRev3', 'Release Undetermined - DBCR 15478');

commit;





