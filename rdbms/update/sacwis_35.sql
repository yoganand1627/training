
-- Sequence Alter SQL

CREATE SEQUENCE CAPS.SEQ_PLACEMENT_REFERRAL
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_ADO_INFO_CBX
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_ADO_INFO_FAMILY
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_COLLEGE_EXAM
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_DILIGENT_SEARCH
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_NEEDS_OUTCOMES_DETAIL
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_FCE_EXPENDITURES
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_FCCP_CHILD_CBX
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_PLAN_GOAL
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_PLAN_STEP
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_PLAN_PARTICIPANT
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_PLAN_SEC_GOAL
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_COUNTY_BUDGET_LIMIT
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_RESTRICTED_FUNDS
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_TCM_CLAIM
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_FAC_LIC
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_HOME_APPLICANT_CBX
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;
CREATE SEQUENCE CAPS.SEQ_HOME_APPLICANT
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- Dictionary Object Alter SQL


-- Standard Alter Table SQL

ALTER TABLE CAPS.ADOPTION_SUBSIDY ADD IND_SAU_CONF VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY ADD IND_SPCL_ASST_APPRVL VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY ADD AMT_SPCL_ASST_REQ NUMBER(6)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY ADD CD_SPCL_ASST_TYPE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY ADD TXT_SPCL_ASST_SPECIFY VARCHAR2(40)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY ADD TXT_SPCL_ASST_CMNTS VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY ADD DT_RENWL_EFF_BEGIN DATE     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY ADD DT_RENWL_EFF_END DATE     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY_AUDIT ADD IND_SAU_CONF VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY_AUDIT ADD IND_SPCL_ASST_APPRVL VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY_AUDIT ADD AMT_SPCL_ASST_REQ NUMBER(6)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY_AUDIT ADD CD_SPCL_ASST_TYPE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY_AUDIT ADD TXT_SPCL_ASST_SPECIFY VARCHAR2(40)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY_AUDIT ADD TXT_SPCL_ASST_CMNTS VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY_AUDIT ADD DT_RENWL_EFF_BEGIN DATE     NULL
;
ALTER TABLE CAPS.ADOPTION_SUBSIDY_AUDIT ADD DT_RENWL_EFF_END DATE     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD NM_RSRC_CONTACT_TITLE VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD NBR_RSRC_NTNL_PROVIDER VARCHAR2(20)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD ADDR_RSRC_EMAIL VARCHAR2(70)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD ADDR_RSRC_WEBSITE VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD CD_SCHOOL_TYPE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD CD_PAYMENT_DELIVERY VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD TXT_SPEC_CERT VARCHAR2(50)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD CD_EXCHANGE_STAT VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD IND_WAIVER VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD CD_SCH_DIST VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD CD_ELEM VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD CD_MIDDLE VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD CD_HIGH VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD DT_FOST_MANUAL DATE     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD DT_FOST_BILL DATE     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD IND_SPECIFIC_CHILD VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD DT_LIC_BEGIN DATE     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD DT_LIC_END DATE     NULL
;
ALTER TABLE CAPS.CAPS_RESOURCE ADD TXT_CLOSURE_COMM VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.CNSRVTRSHP_REMOVAL ADD CD_REMOVAL_TYPE VARCHAR2(2)     NULL
;
ALTER TABLE CAPS.CNSRVTRSHP_REMOVAL ADD IND_PARENT_NOTIFIED VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.CNSRVTRSHP_REMOVAL ADD TXT_DESCRIPTION_OF_INCIDENT VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.CONTRACT ADD IND_CNTRCTD_RSRC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.CONTRACT_AUDIT ADD IND_CNTRCTD_RSRC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.CONTRACT_PERIOD ADD TXT_TERM_COMM VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.CONTRACT_PERIOD_AUDIT ADD TXT_TERM_COMM VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.DELETE_EPL_HIST ADD IND_CAREGIVER VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.EVENT_PERSON_LINK ADD TXT_GOAL_CMMT VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.EVENT_PERSON_LINK ADD IND_CAREGIVER VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD IND_CRT_ORDRD VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD DT_INIT_DUE DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD DT_PLAN_PREP DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD DT_REV_FAM DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD NM_ASSGN_JUDGE VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD IND_INIT_REVIEW VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD DT_ORIG_SUB DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD DT_PREV_REV DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD DT_CURR_REV DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD CD_PRIM_PERM_PLAN VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD TXT_PRIM_COMP_RSNS VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD CD_SECND_PERM_PLAN VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD TXT_SECND_COMP_RSNS VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD CD_REV_TYP VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD TXT_RSNS_PROT VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD TXT_HARM VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD DT_PERM_ACHVD DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD IND_PRNT_PRTCPT VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD TXT_PRNT_PRTCPT VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD IND_CHILD_PRTCPT VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD TXT_CHILD_PRTCPT VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD IND_PRNT_PRESENT VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD IND_HEARING_SUB VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD DT_HEARING_REQSTD DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN ADD IND_ASSTNC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN_ITEM ADD DT_GOAL_COMP DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN_TASK ADD DT_TASK_COMP DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN_TASK ADD DT_COURT_ACT DATE     NULL
;
ALTER TABLE CAPS.FAMILY_PLAN_TASK ADD IND_COURT_CLOSE VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD NM_AGENCY VARCHAR2(40)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD IND_CO_TRAIN VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD NM_TRAIN1 VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD CD_TRAIN1_ROLE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD NM_TRAIN2 VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD CD_TRAIN2_ROLE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD NM_TRAIN3 VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD CD_TRAIN3_ROLE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD NM_TRAIN4 VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.FA_INDIV_TRAINING ADD CD_TRAIN4_ROLE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.FCE_APPLICATION ADD IND_AGE_VRFD_SUCCESS_SYSTEM VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_APPLICATION ADD IND_AGE_VRFD_SAVE_SYSTEM VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_APPLICATION ADD IND_EVAL_REVEIEW_EC_ES VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_APPLICATION ADD IND_MEDICAL_ASSISTANCE VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_APPLICATION ADD TXT_MONTH_MEDICAL_ASSISTANCE VARCHAR2(50)     NULL
;
ALTER TABLE CAPS.FCE_APPLICATION ADD IND_PRF_PREGNANCY_SENT_ES VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_APPLICATION ADD TXT_PRF_PREGNANCY_SENT_ES VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD CD_FCE_ELIG_REASON VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_AMER_INDIAN_CARD VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZNSHP_US_ID_CARD VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZNSHP_CIVIL_SERV_EMP VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZNSHP_BIRTH_ABROAD VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_NORTH_MARIANA_ID VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_FIN_ADOPT_DECREE VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_VITAL_ST_BIRTH_REC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_MLTRY_BIRTH_REC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZNSHP_CONFIRM_BIRTH VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_US_HSPTL_BIRTH_REC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_LIFE_HLTH_INS_BI_REC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_CENSUS_BIRTH_REC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_MDCL_BIRTH_REC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZNSHP_RLGS_BIRTH_REC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_LCL_GOVT_BIR_REC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZNSHP_REFUGEE VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZNSHP_STUDENT_VISA VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_LGL_IMMG_STS_EXP VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_UNCMPND_MINOR VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZN_UNDOC_IMMIGRANT VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZNSHP_SUCCESS VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CTZNSHP_SAVE_SYSTEM VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_COST_CARE_EXCEED_AMT VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_COST_CARE_OUT_OF_HOME VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_COST_CARE_EMANCIPATION VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_COST_CARE_ADOPTED VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_OTHER_EXPENDITURES VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CRT_ORDR_BEST_INTRST VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD IND_CRT_ORDR_REUNIFY VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD DT_DEPRIVATION_CHANGED DATE     NULL
;
ALTER TABLE CAPS.FCE_ELIGIBILITY ADD TXT_MONTHS_DEPRIVATION VARCHAR2(50)     NULL
;
ALTER TABLE CAPS.FCE_PERSON ADD IND_LEGAL_CUSTODIAN VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.FCE_PERSON ADD IND_THIRD_PARTY_INSURANCE VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.INVOICE ADD CD_INVO_COUNTY VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.INVOICE ADD TXT_INVO_CONTACT VARCHAR2(27)     NULL
;
ALTER TABLE CAPS.PERSON_DTL ADD IND_ANNUAL_MED VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.PERSON_DTL ADD DT_MED_DUE DATE     NULL
;
ALTER TABLE CAPS.PERSON_DTL ADD DT_CRIM_REC DATE     NULL
;
ALTER TABLE CAPS.PPT ADD CD_PPT_TYPE VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.PPT ADD IND_MDT_PERM VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.PPT ADD IND_MDT_SFTY VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.PPT ADD IND_MDT_WLBNG VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.PPT ADD IND_FTM_REQ_MET VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.PPT ADD DT_UR_BEGIN DATE     NULL
;
ALTER TABLE CAPS.PPT ADD DT_UR_END DATE     NULL
;
ALTER TABLE CAPS.PPT ADD IND_AH_ASST_NEEDED VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.PPT ADD DT_AH_REQUESTED DATE     NULL
;
ALTER TABLE CAPS.PPT ADD DT_AH_OUTCOME DATE     NULL
;
ALTER TABLE CAPS.PPT_PARTICIPANT ADD CD_PPT_PART_TITLE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.PPT_PARTICIPANT ADD NM_PPT_PART_AGENCY VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.PPT_PARTICIPANT ADD IND_ACCPTD_CHANGES VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.PPT_PARTICIPANT ADD IND_SIGNED_WVR_AH VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.PPT_PARTICIPANT ADD IND_REQ_AH VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD NM_RSRC_CONTACT_TITLE VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD NBR_RSRC_NTNL_PROVIDER VARCHAR2(20)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD ADDR_RSRC_EMAIL VARCHAR2(70)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD ADDR_RSRC_WEBSITE VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD CD_SCHOOL_TYPE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD CD_PAYMENT_DELIVERY VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD TXT_SPEC_CERT VARCHAR2(50)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD CD_EXCHANGE_STAT VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD IND_WAIVER VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD CD_SCH_DIST VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD CD_ELEM VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD CD_MIDDLE VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD CD_HIGH VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD DT_FOST_MANUAL DATE     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD DT_FOST_BILL DATE     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD IND_SPECIFIC_CHILD VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD DT_LIC_BEGIN DATE     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD DT_LIC_END DATE     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY ADD TXT_CLOSURE_COMM VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD NM_RSRC_CONTACT_TITLE VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD NBR_RSRC_NTNL_PROVIDER VARCHAR2(20)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD ADDR_RSRC_EMAIL VARCHAR2(70)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD ADDR_RSRC_WEBSITE VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD CD_SCHOOL_TYPE VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD CD_PAYMENT_DELIVERY VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD TXT_SPEC_CERT VARCHAR2(30)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD CD_EXCHANGE_STAT VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD IND_WAIVER VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD CD_SCH_DIST VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD CD_ELEM VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD CD_MIDDLE VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD CD_HIGH VARCHAR2(4)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD DT_FOST_MANUAL DATE     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD DT_FOST_BILL DATE     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD IND_SPECIFIC_CHILD VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD DT_LIC_BEGIN DATE     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD DT_LIC_END DATE     NULL
;
ALTER TABLE CAPS.RESOURCE_HISTORY_AUDIT ADD TXT_CLOSURE_COMM VARCHAR2(300)     NULL
;
ALTER TABLE CAPS.SERVICE_AUTHORIZATION ADD CD_PAY_CNTY VARCHAR2(3) DEFAULT 0 NOT NULL
;
COMMENT ON COLUMN CAPS.SERVICE_AUTHORIZATION.CD_PAY_CNTY IS
'County Code'
;
ALTER TABLE CAPS.SERVICE_AUTHORIZATION ADD IND_WAIVER_REQD VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.SERVICE_AUTHORIZATION ADD ID_WAIVER NUMBER(16)     NULL
;
ALTER TABLE CAPS.SERVICE_AUTHORIZATION ADD DT_REF_SENT DATE     NULL
;
ALTER TABLE CAPS.SERVICE_AUTHORIZATION ADD CD_ERLY_CASE_TYP VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.SERVICE_AUTHORIZATION ADD CD_PUP_TYP VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.SERVICE_AUTHORIZATION ADD CD_PUP_OTCME VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.SVC_AUTH_DETAIL ADD IND_SERV_ACPT VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.SVC_AUTH_DETAIL ADD IND_CASE_PLN_SVC VARCHAR2(1)     NULL
;
ALTER TABLE CAPS.SVC_AUTH_DETAIL ADD CD_SVC_QLTY VARCHAR2(3)     NULL
;
ALTER TABLE CAPS.SVC_AUTH_DETAIL ADD TXT_CMMTS VARCHAR2(300)     NULL
;

-- Drop Referencing Constraint SQL


-- Drop Constraint, Rename and Create Table SQL

DROP TABLE CAPS.GROUP_LINK CASCADE CONSTRAINTS
;
DROP TABLE CAPS.FORM_GROUPS CASCADE CONSTRAINTS
;
DROP TABLE CAPS.FORMS CASCADE CONSTRAINTS
;
DROP TABLE CAPS.DO_SQL CASCADE CONSTRAINTS
;
DROP TABLE CAPS.DAM_FORM_LINK CASCADE CONSTRAINTS
;
DROP TABLE CAPS.DAMS CASCADE CONSTRAINTS
;
DROP TABLE CAPS.DAM_STRUCTURE CASCADE CONSTRAINTS
;
DROP TABLE CAPS.DO_UPGRADE CASCADE CONSTRAINTS
;
DROP TABLE CAPS.FORM_FIELDS CASCADE CONSTRAINTS
;
DROP TABLE CAPS.GROUP_DATA_SPEC CASCADE CONSTRAINTS
;
CREATE TABLE CAPS.ADO_INFO
(
    ID_EVENT         NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE   DATE          NOT NULL,
    ID_RESOURCE      NUMBER(16)    NOT NULL,
    CD_CHLD_AVAIL    VARCHAR2(3)       NULL,
    DT_INT_TPR       DATE              NULL,
    DT_PERM_STAFF    DATE              NULL,
    DT_DEC_ADOPT     DATE              NULL,
    DT_LIFE_HIS_PRES DATE              NULL,
    DT_ADO_STAFF     DATE              NULL,
    DT_ADO_AGREE     DATE              NULL,
    DT_REL_ADO       DATE              NULL,
    DT_PERM_FILE     DATE              NULL,
    DT_DOC_SENT      DATE              NULL,
    IND_OTH_SIB      VARCHAR2(1)       NULL,
    NBR_FAM_CONS     NUMBER(5)         NULL,
    TXT_NOT_SEL      VARCHAR2(300)     NULL,
    TXT_TYP_ADO      VARCHAR2(300)     NULL,
    IND_IDEN_ADO     VARCHAR2(1)       NULL,
    CD_RSRC_CNTY     VARCHAR2(3)       NULL,
    NM_PRIV_AGENCY   VARCHAR2(30)      NULL,
    CD_STATE         VARCHAR2(2)       NULL,
    TXT_RECR_BARR    VARCHAR2(300)     NULL,
    TXT_PLCMNT_BARR  VARCHAR2(300)     NULL,
    TXT_TPR_BARR     VARCHAR2(300)     NULL,
    IND_INQRY        VARCHAR2(1)       NULL,
    CONSTRAINT PK_ADO_INFO
    PRIMARY KEY (ID_EVENT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.ADO_INFO IS
'Holds data from the Adoption Information Page'
;
COMMENT ON COLUMN CAPS.ADO_INFO.DT_LAST_UPDATE IS
'Date of insert or last update'
;
COMMENT ON COLUMN CAPS.ADO_INFO.CD_RSRC_CNTY IS
'County Code'
;
GRANT DELETE ON CAPS.ADO_INFO TO CAPSBAT
;
GRANT INSERT ON CAPS.ADO_INFO TO CAPSBAT
;
GRANT SELECT ON CAPS.ADO_INFO TO CAPSBAT
;
GRANT UPDATE ON CAPS.ADO_INFO TO CAPSBAT
;
GRANT DELETE ON CAPS.ADO_INFO TO CAPSON
;
GRANT INSERT ON CAPS.ADO_INFO TO CAPSON
;
GRANT SELECT ON CAPS.ADO_INFO TO CAPSON
;
GRANT UPDATE ON CAPS.ADO_INFO TO CAPSON
;
GRANT SELECT ON CAPS.ADO_INFO TO OPERATOR
;
CREATE TABLE CAPS.ADO_INFO_CBX
(
    ID_INFO_CHAR    NUMBER(16)  NOT NULL,
    DT_LAST_UPDATE  DATE        NOT NULL,
    ID_EVENT        NUMBER(16)  NOT NULL,
    CD_ADO_INFO_CBX VARCHAR2(3)     NULL,
    CONSTRAINT PK_ADO_INFO_CBX
    PRIMARY KEY (ID_INFO_CHAR)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.ADO_INFO_CBX IS
'Holds Checkbox information for Adoption Information Page'
;
COMMENT ON COLUMN CAPS.ADO_INFO_CBX.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.ADO_INFO_CBX TO CAPSBAT
;
GRANT INSERT ON CAPS.ADO_INFO_CBX TO CAPSBAT
;
GRANT SELECT ON CAPS.ADO_INFO_CBX TO CAPSBAT
;
GRANT UPDATE ON CAPS.ADO_INFO_CBX TO CAPSBAT
;
GRANT DELETE ON CAPS.ADO_INFO_CBX TO CAPSON
;
GRANT INSERT ON CAPS.ADO_INFO_CBX TO CAPSON
;
GRANT SELECT ON CAPS.ADO_INFO_CBX TO CAPSON
;
GRANT UPDATE ON CAPS.ADO_INFO_CBX TO CAPSON
;
GRANT SELECT ON CAPS.ADO_INFO_CBX TO OPERATOR
;
CREATE TABLE CAPS.ADO_INFO_FAMILY
(
    ID_INFO_FAMILY NUMBER(16) NOT NULL,
    DT_LAST_UPDATE DATE       NOT NULL,
    ID_EVENT       NUMBER(16) NOT NULL,
    ID_RESOURCE    NUMBER(16) NOT NULL,
    CONSTRAINT PK_ADO_INFO_FAMILY
    PRIMARY KEY (ID_INFO_FAMILY)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.ADO_INFO_FAMILY IS
'Holds the adoptive family study resources'
;
COMMENT ON COLUMN CAPS.ADO_INFO_FAMILY.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.ADO_INFO_FAMILY TO CAPSBAT
;
GRANT INSERT ON CAPS.ADO_INFO_FAMILY TO CAPSBAT
;
GRANT SELECT ON CAPS.ADO_INFO_FAMILY TO CAPSBAT
;
GRANT UPDATE ON CAPS.ADO_INFO_FAMILY TO CAPSBAT
;
GRANT DELETE ON CAPS.ADO_INFO_FAMILY TO CAPSON
;
GRANT INSERT ON CAPS.ADO_INFO_FAMILY TO CAPSON
;
GRANT SELECT ON CAPS.ADO_INFO_FAMILY TO CAPSON
;
GRANT UPDATE ON CAPS.ADO_INFO_FAMILY TO CAPSON
;
GRANT SELECT ON CAPS.ADO_INFO_FAMILY TO OPERATOR
;
CREATE TABLE CAPS.CASE_BUDGET_LIMIT
(
    ID_CASE        NUMBER(16)   NOT NULL,
    DT_LAST_UPDATE DATE         NOT NULL,
    CD_UAS         VARCHAR2(3)      NULL,
    CD_ENTITLEMENT VARCHAR2(3)      NULL,
    AMT_BUDGT      NUMBER(13,2)     NULL,
    AMT_SPENT      NUMBER(13,2)     NULL,
    AMT_REMAIN     NUMBER(13,2)     NULL,
    AMT_WAIVER     NUMBER(13,2)     NULL,
    AMT_BALANCE    NUMBER(13,2)     NULL,
    CONSTRAINT PK_CASE_BUDGET_LIMIT
    PRIMARY KEY (ID_CASE)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.CASE_BUDGET_LIMIT IS
'Holds Data for the Case Budget Limit page'
;
COMMENT ON COLUMN CAPS.CASE_BUDGET_LIMIT.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.CASE_BUDGET_LIMIT TO CAPSBAT
;
GRANT INSERT ON CAPS.CASE_BUDGET_LIMIT TO CAPSBAT
;
GRANT SELECT ON CAPS.CASE_BUDGET_LIMIT TO CAPSBAT
;
GRANT UPDATE ON CAPS.CASE_BUDGET_LIMIT TO CAPSBAT
;
GRANT DELETE ON CAPS.CASE_BUDGET_LIMIT TO CAPSON
;
GRANT INSERT ON CAPS.CASE_BUDGET_LIMIT TO CAPSON
;
GRANT SELECT ON CAPS.CASE_BUDGET_LIMIT TO CAPSON
;
GRANT UPDATE ON CAPS.CASE_BUDGET_LIMIT TO CAPSON
;
GRANT SELECT ON CAPS.CASE_BUDGET_LIMIT TO OPERATOR
;
CREATE TABLE CAPS.COLLEGE_EXAM
(
    ID_COLLEGE_EXAM NUMBER(16)  NOT NULL,
    DT_LAST_UPDATE  DATE        NOT NULL,
    ID_PERSON       NUMBER(16)  NOT NULL,
    CD_EXAM_TYP     VARCHAR2(3)     NULL,
    NBR_ENGLISH     NUMBER(6)       NULL,
    NBR_MATH        NUMBER(6)       NULL,
    NBR_READING     NUMBER(6)       NULL,
    NBR_SCIENCE     NUMBER(6)       NULL,
    NBR_WRITING     NUMBER(6)       NULL,
    NBR_TOTAL       NUMBER(6)       NULL,
    NBR_VERBAL      NUMBER(6)       NULL,
    CONSTRAINT PK_COLLEGE_EXAM
    PRIMARY KEY (ID_COLLEGE_EXAM)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.COLLEGE_EXAM IS
'Holds College Entrance Exam Information.'
;
COMMENT ON COLUMN CAPS.COLLEGE_EXAM.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.COLLEGE_EXAM TO CAPSBAT
;
GRANT INSERT ON CAPS.COLLEGE_EXAM TO CAPSBAT
;
GRANT SELECT ON CAPS.COLLEGE_EXAM TO CAPSBAT
;
GRANT UPDATE ON CAPS.COLLEGE_EXAM TO CAPSBAT
;
GRANT DELETE ON CAPS.COLLEGE_EXAM TO CAPSON
;
GRANT INSERT ON CAPS.COLLEGE_EXAM TO CAPSON
;
GRANT SELECT ON CAPS.COLLEGE_EXAM TO CAPSON
;
GRANT UPDATE ON CAPS.COLLEGE_EXAM TO CAPSON
;
GRANT SELECT ON CAPS.COLLEGE_EXAM TO OPERATOR
;
CREATE TABLE CAPS.COUNTY_BUDGET_LIMIT
(
    ID_COUNTY_BUDGET_LIMIT NUMBER(16)   NOT NULL,
    DT_LAST_UPDATE         DATE         NOT NULL,
    CD_COUNTY              VARCHAR2(3)  NOT NULL,
    CD_PROGRAM             VARCHAR2(3)  NOT NULL,
    NBR_FISCAL_YEAR        NUMBER(4)        NULL,
    AMT_BUDGET_LIMIT       NUMBER(13,2) NOT NULL,
    AMT_SPENT              NUMBER(13,2)     NULL,
    AMT_OBG                NUMBER(13,2)     NULL,
    AMT_BALANCE            NUMBER(13,2)     NULL,
    CONSTRAINT PK_COUNTY_BUDGET_LIMIT
    PRIMARY KEY (ID_COUNTY_BUDGET_LIMIT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.COUNTY_BUDGET_LIMIT IS
'Holds County Budget Limit Data'
;
COMMENT ON COLUMN CAPS.COUNTY_BUDGET_LIMIT.DT_LAST_UPDATE IS
'Date of insert or last update'
;
COMMENT ON COLUMN CAPS.COUNTY_BUDGET_LIMIT.CD_COUNTY IS
'County Code'
;
GRANT DELETE ON CAPS.COUNTY_BUDGET_LIMIT TO CAPSBAT
;
GRANT INSERT ON CAPS.COUNTY_BUDGET_LIMIT TO CAPSBAT
;
GRANT SELECT ON CAPS.COUNTY_BUDGET_LIMIT TO CAPSBAT
;
GRANT UPDATE ON CAPS.COUNTY_BUDGET_LIMIT TO CAPSBAT
;
GRANT DELETE ON CAPS.COUNTY_BUDGET_LIMIT TO CAPSON
;
GRANT INSERT ON CAPS.COUNTY_BUDGET_LIMIT TO CAPSON
;
GRANT SELECT ON CAPS.COUNTY_BUDGET_LIMIT TO CAPSON
;
GRANT UPDATE ON CAPS.COUNTY_BUDGET_LIMIT TO CAPSON
;
GRANT SELECT ON CAPS.COUNTY_BUDGET_LIMIT TO OPERATOR
;
CREATE TABLE CAPS.DILIGENT_SEARCH
(
    ID_DILIGENT_SEARCH NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE     DATE          NOT NULL,
    ID_CASE            NUMBER(16)    NOT NULL,
    ID_STAGE           NUMBER(16)    NOT NULL,
    IND_INC_DLGNT      VARCHAR2(1)       NULL,
    IND_CRTKR_PRIOR    VARCHAR2(1)       NULL,
    TXT_DESC_REM       VARCHAR2(300)     NULL,
    CD_REF_TYPE        VARCHAR2(3)       NULL,
    TXT_OTHER_DESC     VARCHAR2(50)      NULL,
    TXT_REF_NAME       VARCHAR2(50)      NULL,
    IND_SUCC_CONT      VARCHAR2(1)       NULL,
    TXT_WHY_CONT       VARCHAR2(300)     NULL,
    CD_CURR_OUTCOME    VARCHAR2(3)       NULL,
    IND_VISIT_RSRC     VARCHAR2(1)       NULL,
    IND_PLCMT_RSRC     VARCHAR2(1)       NULL,
    TXT_RSRC           VARCHAR2(300)     NULL,
    DT_SUBSY_DISCSD    DATE              NULL,
    TXT_COMMENTS       VARCHAR2(300)     NULL,
    CONSTRAINT PK_DILIGENT_SEARCH
    PRIMARY KEY (ID_DILIGENT_SEARCH)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.DILIGENT_SEARCH IS
'Holds Diligent Search Information - required by GA State law to ensure all possible relatives have been contacted.'
;
COMMENT ON COLUMN CAPS.DILIGENT_SEARCH.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.DILIGENT_SEARCH TO CAPSBAT
;
GRANT INSERT ON CAPS.DILIGENT_SEARCH TO CAPSBAT
;
GRANT SELECT ON CAPS.DILIGENT_SEARCH TO CAPSBAT
;
GRANT UPDATE ON CAPS.DILIGENT_SEARCH TO CAPSBAT
;
GRANT DELETE ON CAPS.DILIGENT_SEARCH TO CAPSON
;
GRANT INSERT ON CAPS.DILIGENT_SEARCH TO CAPSON
;
GRANT SELECT ON CAPS.DILIGENT_SEARCH TO CAPSON
;
GRANT UPDATE ON CAPS.DILIGENT_SEARCH TO CAPSON
;
GRANT SELECT ON CAPS.DILIGENT_SEARCH TO OPERATOR
;
CREATE TABLE CAPS.FACILITY_LICENSE_TYPE
(
    ID_FAC_LIC     NUMBER(16)  NOT NULL,
    DT_LAST_UPDATE DATE        NOT NULL,
    ID_RESOURCE    NUMBER(16)  NOT NULL,
    CD_LIC         VARCHAR2(3)     NULL,
    CONSTRAINT PK_FACILITY_LICENSE_TYPE
    PRIMARY KEY (ID_FAC_LIC)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.FACILITY_LICENSE_TYPE IS
'Holds Data about Program Licences'
;
COMMENT ON COLUMN CAPS.FACILITY_LICENSE_TYPE.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.FACILITY_LICENSE_TYPE TO CAPSBAT
;
GRANT INSERT ON CAPS.FACILITY_LICENSE_TYPE TO CAPSBAT
;
GRANT SELECT ON CAPS.FACILITY_LICENSE_TYPE TO CAPSBAT
;
GRANT UPDATE ON CAPS.FACILITY_LICENSE_TYPE TO CAPSBAT
;
GRANT DELETE ON CAPS.FACILITY_LICENSE_TYPE TO CAPSON
;
GRANT INSERT ON CAPS.FACILITY_LICENSE_TYPE TO CAPSON
;
GRANT SELECT ON CAPS.FACILITY_LICENSE_TYPE TO CAPSON
;
GRANT UPDATE ON CAPS.FACILITY_LICENSE_TYPE TO CAPSON
;
GRANT SELECT ON CAPS.FACILITY_LICENSE_TYPE TO OPERATOR
;
CREATE TABLE CAPS.FAMILY_SERVICE_REFERRAL
(
    ID_EVENT           NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE     DATE          NOT NULL,
    DT_DUE             DATE              NULL,
    DT_COMPLETE        DATE              NULL,
    ID_PERSON_ASSIGNED NUMBER(16)    NOT NULL,
    TXT_DESC           VARCHAR2(80)      NULL,
    TXT_REF_NOTE       VARCHAR2(300)     NULL,
    ID_PERSON_CREATE   NUMBER(16)        NULL,
    DT_REFERRAL        DATE              NULL,
    CONSTRAINT PK_FAMILY_SERVICE_REFERRAL
    PRIMARY KEY (ID_EVENT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.FAMILY_SERVICE_REFERRAL IS
'Holds data from the Family service referral page'
;
COMMENT ON COLUMN CAPS.FAMILY_SERVICE_REFERRAL.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.FAMILY_SERVICE_REFERRAL TO CAPSBAT
;
GRANT INSERT ON CAPS.FAMILY_SERVICE_REFERRAL TO CAPSBAT
;
GRANT SELECT ON CAPS.FAMILY_SERVICE_REFERRAL TO CAPSBAT
;
GRANT UPDATE ON CAPS.FAMILY_SERVICE_REFERRAL TO CAPSBAT
;
GRANT DELETE ON CAPS.FAMILY_SERVICE_REFERRAL TO CAPSON
;
GRANT INSERT ON CAPS.FAMILY_SERVICE_REFERRAL TO CAPSON
;
GRANT SELECT ON CAPS.FAMILY_SERVICE_REFERRAL TO CAPSON
;
GRANT UPDATE ON CAPS.FAMILY_SERVICE_REFERRAL TO CAPSON
;
GRANT SELECT ON CAPS.FAMILY_SERVICE_REFERRAL TO OPERATOR
;
CREATE TABLE CAPS.FCCP_CHILD
(
    ID_EVENT           NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE     DATE          NOT NULL,
    TXT_EFFRTS_REM     VARCHAR2(300)     NULL,
    IND_DILGNT_SRCH    VARCHAR2(1)       NULL,
    DT_DILGNT_COMP     DATE              NULL,
    IND_CHILD_ADJ_CARE VARCHAR2(1)       NULL,
    TXT_CHILD_ADJ_COMM VARCHAR2(300)     NULL,
    TXT_AFSA           VARCHAR2(300)     NULL,
    IND_TPR            VARCHAR2(1)       NULL,
    DT_TPR             DATE              NULL,
    TXT_TPR            VARCHAR2(300)     NULL,
    TXT_STEPS          VARCHAR2(300)     NULL,
    TXT_ADDTL_INFO     VARCHAR2(300)     NULL,
    IND_IMM_UTD        VARCHAR2(1)       NULL,
    TXT_IMM_UTD        VARCHAR2(300)     NULL,
    IND_IMM_ONFILE     VARCHAR2(1)       NULL,
    TXT_IMM_ONFILE     VARCHAR2(300)     NULL,
    IND_ONGOING_PROB   VARCHAR2(1)       NULL,
    TXT_ONGOING_PROB   VARCHAR2(300)     NULL,
    IND_MEDREC_ONFILE  VARCHAR2(1)       NULL,
    TXT_MEDREC_ONFILE  VARCHAR2(300)     NULL,
    IND_PSYCH_ONFILE   VARCHAR2(1)       NULL,
    TXT_PSYCH_ONFILE   VARCHAR2(300)     NULL,
    IND_PSYCH_TREAT    VARCHAR2(1)       NULL,
    IND_PSYCH_DOC      VARCHAR2(1)       NULL,
    TXT_EVAL_DATES     VARCHAR2(300)     NULL,
    TXT_RELEVANT_MED   VARCHAR2(300)     NULL,
    IND_SCH_REC        VARCHAR2(2)       NULL,
    IND_REC_BOARD      VARCHAR2(2)       NULL,
    IND_SCH_CHG        VARCHAR2(2)       NULL,
    IND_CCFA_EDU       VARCHAR2(1)       NULL,
    TXT_CCFA_EDU       VARCHAR2(300)     NULL,
    DT_CCFA_EDU        DATE              NULL,
    TXT_DSCPL_COMM     VARCHAR2(300)     NULL,
    IND_SPC_EDU_NEED   VARCHAR2(2)       NULL,
    IND_PREV_EDU_NEED  VARCHAR2(2)       NULL,
    TXT_SPC_EDU        VARCHAR2(300)     NULL,
    DT_SST_REF         DATE              NULL,
    DT_EDU_PLAN        DATE              NULL,
    NM_SURR_PRNT       VARCHAR2(30)      NULL,
    IND_FSTR_PRNT      VARCHAR2(2)       NULL,
    IND_LEGAL_PRNT     VARCHAR2(1)       NULL,
    IND_EIS            VARCHAR2(1)       NULL,
    IND_PREV_EIS       VARCHAR2(1)       NULL,
    TXT_EIS            VARCHAR2(300)     NULL,
    IND_SPVSN          VARCHAR2(1)       NULL,
    TXT_SPVSN          VARCHAR2(300)     NULL,
    CONSTRAINT PK_FFCP_CHILD
    PRIMARY KEY (ID_EVENT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.FCCP_CHILD IS
'Holds Foster Care Case Plan Child Data'
;
COMMENT ON COLUMN CAPS.FCCP_CHILD.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.FCCP_CHILD TO CAPSBAT
;
GRANT INSERT ON CAPS.FCCP_CHILD TO CAPSBAT
;
GRANT SELECT ON CAPS.FCCP_CHILD TO CAPSBAT
;
GRANT UPDATE ON CAPS.FCCP_CHILD TO CAPSBAT
;
GRANT DELETE ON CAPS.FCCP_CHILD TO CAPSON
;
GRANT INSERT ON CAPS.FCCP_CHILD TO CAPSON
;
GRANT SELECT ON CAPS.FCCP_CHILD TO CAPSON
;
GRANT UPDATE ON CAPS.FCCP_CHILD TO CAPSON
;
GRANT SELECT ON CAPS.FCCP_CHILD TO OPERATOR
;
CREATE TABLE CAPS.FCCP_CHILD_CBX
(
    ID_FCCP_CHILD_CBX NUMBER(16)  NOT NULL,
    DT_LAST_UPDATE    DATE        NOT NULL,
    ID_EVENT          NUMBER(16)  NOT NULL,
    CD_CBX            VARCHAR2(3)     NULL,
    CONSTRAINT PK_FCCP_CHILD_CBX
    PRIMARY KEY (ID_FCCP_CHILD_CBX)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.FCCP_CHILD_CBX IS
'Holds the Foster Care Case Plan Checkboxes'
;
COMMENT ON COLUMN CAPS.FCCP_CHILD_CBX.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.FCCP_CHILD_CBX TO CAPSBAT
;
GRANT INSERT ON CAPS.FCCP_CHILD_CBX TO CAPSBAT
;
GRANT SELECT ON CAPS.FCCP_CHILD_CBX TO CAPSBAT
;
GRANT UPDATE ON CAPS.FCCP_CHILD_CBX TO CAPSBAT
;
GRANT DELETE ON CAPS.FCCP_CHILD_CBX TO CAPSON
;
GRANT INSERT ON CAPS.FCCP_CHILD_CBX TO CAPSON
;
GRANT SELECT ON CAPS.FCCP_CHILD_CBX TO CAPSON
;
GRANT UPDATE ON CAPS.FCCP_CHILD_CBX TO CAPSON
;
GRANT SELECT ON CAPS.FCCP_CHILD_CBX TO OPERATOR
;
CREATE TABLE CAPS.FCE_EXPENDITURES
(
    ID_FCE_EXPENDITURES NUMBER(16)   NOT NULL,
    DT_LAST_UPDATE      DATE         NOT NULL,
    ID_FCE_ELIGIBILITY  NUMBER(16)   NOT NULL,
    ID_PERSON           NUMBER(16)   NOT NULL,
    ID_FCE_PERSON       NUMBER(16)   NOT NULL,
    NM_SERVICE_PROVIDER VARCHAR2(80)     NULL,
    AMT_PD_MONTHLY      NUMBER(13,2)     NULL,
    CONSTRAINT PK_FCE_EXPENDITURES
    PRIMARY KEY (ID_FCE_EXPENDITURES)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.FCE_EXPENDITURES IS
'Foster Care Eligibility Expenditures'
;
COMMENT ON COLUMN CAPS.FCE_EXPENDITURES.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.FCE_EXPENDITURES TO CAPSBAT
;
GRANT INSERT ON CAPS.FCE_EXPENDITURES TO CAPSBAT
;
GRANT SELECT ON CAPS.FCE_EXPENDITURES TO CAPSBAT
;
GRANT UPDATE ON CAPS.FCE_EXPENDITURES TO CAPSBAT
;
GRANT DELETE ON CAPS.FCE_EXPENDITURES TO CAPSON
;
GRANT INSERT ON CAPS.FCE_EXPENDITURES TO CAPSON
;
GRANT SELECT ON CAPS.FCE_EXPENDITURES TO CAPSON
;
GRANT UPDATE ON CAPS.FCE_EXPENDITURES TO CAPSON
;
GRANT SELECT ON CAPS.FCE_EXPENDITURES TO OPERATOR
;
CREATE TABLE CAPS.FCE_THIRD_PARTY_INSURANCE
(
    ID_FCE_APPLICATION NUMBER(16)   NOT NULL,
    DT_LAST_UPDATE     DATE         NOT NULL,
    IND_CHILD_COVERAGE VARCHAR2(1)      NULL,
    CD_TYPE            VARCHAR2(3)      NULL,
    NM_COMPANY         VARCHAR2(50)     NULL,
    NBR_POLICY         VARCHAR2(20)     NULL,
    NBR_GROUP          VARCHAR2(20)     NULL,
    ADDR_STREET_LN1    VARCHAR2(30)     NULL,
    ADDR_STREET_LN2    VARCHAR2(30)     NULL,
    ADDR_CITY          VARCHAR2(20)     NULL,
    ADDR_STATE         VARCHAR2(2)      NULL,
    ADDR_ZIP           VARCHAR2(10)     NULL,
    NBR_PHONE          VARCHAR2(10)     NULL,
    CD_POLICY_HOLDER   VARCHAR2(3)      NULL,
    DT_BEGIN           DATE             NULL,
    DT_END             DATE             NULL,
    NM_EMPLOYER        VARCHAR2(50)     NULL,
    NM_EMPLOYEE_NAME   VARCHAR2(50)     NULL,
    IND_AUTH_RELEASE   VARCHAR2(1)      NULL,
    IND_AUTH_ASSIGN    VARCHAR2(1)      NULL,
    DT_AUTH_RELEASE    DATE             NULL,
    DT_AUTH_ASSIGN     DATE             NULL,
    IND_CHANGE_CANCEL  VARCHAR2(1)      NULL,
    DT_CHANGE_CANCEL   DATE             NULL,
    CONSTRAINT PK_FCE_THIRD_PARTY_INSURANCE
    PRIMARY KEY (ID_FCE_APPLICATION)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.FCE_THIRD_PARTY_INSURANCE IS
'Foster Care table documenting if the child had other insurance'
;
COMMENT ON COLUMN CAPS.FCE_THIRD_PARTY_INSURANCE.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.FCE_THIRD_PARTY_INSURANCE TO CAPSBAT
;
GRANT INSERT ON CAPS.FCE_THIRD_PARTY_INSURANCE TO CAPSBAT
;
GRANT SELECT ON CAPS.FCE_THIRD_PARTY_INSURANCE TO CAPSBAT
;
GRANT UPDATE ON CAPS.FCE_THIRD_PARTY_INSURANCE TO CAPSBAT
;
GRANT DELETE ON CAPS.FCE_THIRD_PARTY_INSURANCE TO CAPSON
;
GRANT INSERT ON CAPS.FCE_THIRD_PARTY_INSURANCE TO CAPSON
;
GRANT SELECT ON CAPS.FCE_THIRD_PARTY_INSURANCE TO CAPSON
;
GRANT UPDATE ON CAPS.FCE_THIRD_PARTY_INSURANCE TO CAPSON
;
GRANT SELECT ON CAPS.FCE_THIRD_PARTY_INSURANCE TO OPERATOR
;
CREATE TABLE CAPS.HOME_APPLICANT_CBX
(
    ID_HOME_APPLICANT_CBX NUMBER(16)  NOT NULL,
    DT_LAST_UPDATE        DATE        NOT NULL,
    ID_HOME_APPLICANT     NUMBER(16)  NOT NULL,
    CD_HOME_APPLICANT_CBX VARCHAR2(3)     NULL,
    CONSTRAINT PK_HOME_APPLICANT_CBX
    PRIMARY KEY (ID_HOME_APPLICANT_CBX)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.HOME_APPLICANT_CBX IS
'Holds Inquiry and Pre-Service checkboxes from the Home Information page'
;
COMMENT ON COLUMN CAPS.HOME_APPLICANT_CBX.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.HOME_APPLICANT_CBX TO CAPSBAT
;
GRANT INSERT ON CAPS.HOME_APPLICANT_CBX TO CAPSBAT
;
GRANT SELECT ON CAPS.HOME_APPLICANT_CBX TO CAPSBAT
;
GRANT UPDATE ON CAPS.HOME_APPLICANT_CBX TO CAPSBAT
;
GRANT DELETE ON CAPS.HOME_APPLICANT_CBX TO CAPSON
;
GRANT INSERT ON CAPS.HOME_APPLICANT_CBX TO CAPSON
;
GRANT SELECT ON CAPS.HOME_APPLICANT_CBX TO CAPSON
;
GRANT UPDATE ON CAPS.HOME_APPLICANT_CBX TO CAPSON
;
GRANT SELECT ON CAPS.HOME_APPLICANT_CBX TO OPERATOR
;
CREATE TABLE CAPS.HOME_APPLICANT_INFO
(
    ID_HOME_APPLICANT NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE    DATE          NOT NULL,
    ID_RESOURCE       NUMBER(16)    NOT NULL,
    DT_INQUIRY        DATE              NULL,
    CD_INQUIRY_RCVD   VARCHAR2(3)       NULL,
    CD_INFO_PACKET    VARCHAR2(3)       NULL,
    DT_INFO_SENT      DATE              NULL,
    TXT_CHILD_INT     VARCHAR2(30)      NULL,
    TXT_INQRY_COMM    VARCHAR2(300)     NULL,
    DT_ORIENT1        DATE              NULL,
    CD_ORIENT1_STAT   VARCHAR2(3)       NULL,
    DT_ORIENT2        DATE              NULL,
    CD_ORIENT2_STAT   VARCHAR2(3)       NULL,
    DT_ORIENT3        DATE              NULL,
    CD_ORIENT3_STAT   VARCHAR2(3)       NULL,
    DT_INVITE1        DATE              NULL,
    CD_INVITE1_STAT   VARCHAR2(3)       NULL,
    TXT_INVITE1_LOC   VARCHAR2(30)      NULL,
    DT_INVITE2        DATE              NULL,
    CD_INVITE2_STAT   VARCHAR2(3)       NULL,
    TXT_INVITE2_LOC   VARCHAR2(30)      NULL,
    DT_INVITE3        DATE              NULL,
    CD_INVITE3_STAT   VARCHAR2(3)       NULL,
    TXT_INVITE3_LOC   VARCHAR2(30)      NULL,
    TXT_TRN_COMM      VARCHAR2(300)     NULL,
    CONSTRAINT PK_HOME_APPLICANT_INFO
    PRIMARY KEY (ID_HOME_APPLICANT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.HOME_APPLICANT_INFO IS
'Holds Inquiry and Pre-Service information from the Home Information page'
;
COMMENT ON COLUMN CAPS.HOME_APPLICANT_INFO.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.HOME_APPLICANT_INFO TO CAPSBAT
;
GRANT INSERT ON CAPS.HOME_APPLICANT_INFO TO CAPSBAT
;
GRANT SELECT ON CAPS.HOME_APPLICANT_INFO TO CAPSBAT
;
GRANT UPDATE ON CAPS.HOME_APPLICANT_INFO TO CAPSBAT
;
GRANT DELETE ON CAPS.HOME_APPLICANT_INFO TO CAPSON
;
GRANT INSERT ON CAPS.HOME_APPLICANT_INFO TO CAPSON
;
GRANT SELECT ON CAPS.HOME_APPLICANT_INFO TO CAPSON
;
GRANT UPDATE ON CAPS.HOME_APPLICANT_INFO TO CAPSON
;
GRANT SELECT ON CAPS.HOME_APPLICANT_INFO TO OPERATOR
;
CREATE TABLE CAPS.NEEDS_OUTCOMES
(
    ID_EVENT           NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE     DATE          NOT NULL,
    NM_AGENCY          VARCHAR2(30)      NULL,
    ID_RESOURCE        NUMBER(16)        NULL,
    NM_ASSESSOR        VARCHAR2(26)      NULL,
    TXT_ASSESSOR_TITLE VARCHAR2(4)       NULL,
    DT_REFERRAL        DATE              NULL,
    DT_ASST_CMPLT      DATE              NULL,
    TXT_GEN_REC        VARCHAR2(300)     NULL,
    TXT_PLCMT_REC      VARCHAR2(300)     NULL,
    TXT_CCFA_REC       VARCHAR2(300)     NULL,
    CONSTRAINT PK_NEEDS_OUTCOMES
    PRIMARY KEY (ID_EVENT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.NEEDS_OUTCOMES IS
'Holds the Needs and Outcomes Data'
;
COMMENT ON COLUMN CAPS.NEEDS_OUTCOMES.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.NEEDS_OUTCOMES TO CAPSBAT
;
GRANT INSERT ON CAPS.NEEDS_OUTCOMES TO CAPSBAT
;
GRANT SELECT ON CAPS.NEEDS_OUTCOMES TO CAPSBAT
;
GRANT UPDATE ON CAPS.NEEDS_OUTCOMES TO CAPSBAT
;
GRANT DELETE ON CAPS.NEEDS_OUTCOMES TO CAPSON
;
GRANT INSERT ON CAPS.NEEDS_OUTCOMES TO CAPSON
;
GRANT SELECT ON CAPS.NEEDS_OUTCOMES TO CAPSON
;
GRANT UPDATE ON CAPS.NEEDS_OUTCOMES TO CAPSON
;
GRANT SELECT ON CAPS.NEEDS_OUTCOMES TO OPERATOR
;
CREATE TABLE CAPS.NEEDS_OUTCOMES_DETAIL
(
    ID_NEEDS_OUTCOMES_DETAIL NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE           DATE          NOT NULL,
    ID_EVENT                 NUMBER(16)    NOT NULL,
    TXT_IDEN_NEED            VARCHAR2(50)      NULL,
    TXT_COMMENTS             VARCHAR2(300)     NULL,
    IND_CCFA_NEED            VARCHAR2(1)       NULL,
    TXT_SVC_REC              VARCHAR2(50)      NULL,
    IND_SVC_PROV             VARCHAR2(1)       NULL,
    IND_NEED_MET             VARCHAR2(1)       NULL,
    TXT_SVC_PROV             VARCHAR2(300)     NULL,
    TXT_NEED_MET             VARCHAR2(300)     NULL,
    CONSTRAINT PK_NEEDS_OUTCOME_DETAIL
    PRIMARY KEY (ID_NEEDS_OUTCOMES_DETAIL)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.NEEDS_OUTCOMES_DETAIL IS
'Holds Data from the Needs and Outcomes Detail page'
;
COMMENT ON COLUMN CAPS.NEEDS_OUTCOMES_DETAIL.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.NEEDS_OUTCOMES_DETAIL TO CAPSBAT
;
GRANT INSERT ON CAPS.NEEDS_OUTCOMES_DETAIL TO CAPSBAT
;
GRANT SELECT ON CAPS.NEEDS_OUTCOMES_DETAIL TO CAPSBAT
;
GRANT UPDATE ON CAPS.NEEDS_OUTCOMES_DETAIL TO CAPSBAT
;
GRANT DELETE ON CAPS.NEEDS_OUTCOMES_DETAIL TO CAPSON
;
GRANT INSERT ON CAPS.NEEDS_OUTCOMES_DETAIL TO CAPSON
;
GRANT SELECT ON CAPS.NEEDS_OUTCOMES_DETAIL TO CAPSON
;
GRANT UPDATE ON CAPS.NEEDS_OUTCOMES_DETAIL TO CAPSON
;
GRANT SELECT ON CAPS.NEEDS_OUTCOMES_DETAIL TO OPERATOR
;
CREATE TABLE CAPS.OUTPUT_LAUNCH_EVENT_LINK
(
    ID_EVENT       NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE DATE          NOT NULL,
    DT_ACHIEVED    DATE              NULL,
    TXT_RESULTS    VARCHAR2(300)     NULL,
    CONSTRAINT PK_OUTPUT_LAUNCH_EL
    PRIMARY KEY (ID_EVENT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.OUTPUT_LAUNCH_EVENT_LINK IS
'Used to capture additional details about an event / narrative in Output Launch'
;
COMMENT ON COLUMN CAPS.OUTPUT_LAUNCH_EVENT_LINK.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.OUTPUT_LAUNCH_EVENT_LINK TO CAPSBAT
;
GRANT INSERT ON CAPS.OUTPUT_LAUNCH_EVENT_LINK TO CAPSBAT
;
GRANT SELECT ON CAPS.OUTPUT_LAUNCH_EVENT_LINK TO CAPSBAT
;
GRANT UPDATE ON CAPS.OUTPUT_LAUNCH_EVENT_LINK TO CAPSBAT
;
GRANT DELETE ON CAPS.OUTPUT_LAUNCH_EVENT_LINK TO CAPSON
;
GRANT INSERT ON CAPS.OUTPUT_LAUNCH_EVENT_LINK TO CAPSON
;
GRANT SELECT ON CAPS.OUTPUT_LAUNCH_EVENT_LINK TO CAPSON
;
GRANT UPDATE ON CAPS.OUTPUT_LAUNCH_EVENT_LINK TO CAPSON
;
GRANT SELECT ON CAPS.OUTPUT_LAUNCH_EVENT_LINK TO OPERATOR
;
CREATE TABLE CAPS.PLACEMENT_REFERRAL
(
    ID_PLACEMENT_REFERRAL NUMBER(16)  NOT NULL,
    DT_LAST_UPDATE        DATE        NOT NULL,
    ID_EMPLOYEE           NUMBER(16)  NOT NULL,
    ID_PERSON             NUMBER(16)  NOT NULL,
    ID_RESOURCE           NUMBER(16)  NOT NULL,
    DT_BEGIN              DATE        NOT NULL,
    DT_EXPIRATION         DATE            NULL,
    CD_STATUS             VARCHAR2(2)     NULL,
    CD_PLACEMENT_TYPE     VARCHAR2(3)     NULL,
    CONSTRAINT PK_PLACEMENT_REFERRAL
    PRIMARY KEY (ID_PLACEMENT_REFERRAL)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.PLACEMENT_REFERRAL IS
'Capture the referrals for placements of children into a certain resource.'
;
COMMENT ON COLUMN CAPS.PLACEMENT_REFERRAL.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.PLACEMENT_REFERRAL TO CAPSBAT
;
GRANT INSERT ON CAPS.PLACEMENT_REFERRAL TO CAPSBAT
;
GRANT SELECT ON CAPS.PLACEMENT_REFERRAL TO CAPSBAT
;
GRANT UPDATE ON CAPS.PLACEMENT_REFERRAL TO CAPSBAT
;
GRANT DELETE ON CAPS.PLACEMENT_REFERRAL TO CAPSON
;
GRANT INSERT ON CAPS.PLACEMENT_REFERRAL TO CAPSON
;
GRANT SELECT ON CAPS.PLACEMENT_REFERRAL TO CAPSON
;
GRANT UPDATE ON CAPS.PLACEMENT_REFERRAL TO CAPSON
;
GRANT SELECT ON CAPS.PLACEMENT_REFERRAL TO OPERATOR
;
CREATE TABLE CAPS.PLAN_GOAL
(
    ID_PLAN_GOAL   NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE DATE          NOT NULL,
    ID_EVENT       NUMBER(16)    NOT NULL,
    CD_PLAN_TYP    VARCHAR2(3)       NULL,
    CD_GOAL_TYP    VARCHAR2(3)       NULL,
    CD_GOAL_RSN    VARCHAR2(3)       NULL,
    TXT_OTH        VARCHAR2(50)      NULL,
    TXT_GOAL       VARCHAR2(300)     NULL,
    CONSTRAINT PK_PLAN_GOAL
    PRIMARY KEY (ID_PLAN_GOAL)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.PLAN_GOAL IS
'Holds Goals for the Family Plan, Foster Care Case Plan Child, and Foster Care Case Plan Family'
;
COMMENT ON COLUMN CAPS.PLAN_GOAL.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.PLAN_GOAL TO CAPSBAT
;
GRANT INSERT ON CAPS.PLAN_GOAL TO CAPSBAT
;
GRANT SELECT ON CAPS.PLAN_GOAL TO CAPSBAT
;
GRANT UPDATE ON CAPS.PLAN_GOAL TO CAPSBAT
;
GRANT DELETE ON CAPS.PLAN_GOAL TO CAPSON
;
GRANT INSERT ON CAPS.PLAN_GOAL TO CAPSON
;
GRANT SELECT ON CAPS.PLAN_GOAL TO CAPSON
;
GRANT UPDATE ON CAPS.PLAN_GOAL TO CAPSON
;
GRANT SELECT ON CAPS.PLAN_GOAL TO OPERATOR
;
CREATE TABLE CAPS.PLAN_PARTICIPANT
(
    ID_PLAN_PARTICIPANT NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE      DATE          NOT NULL,
    ID_EVENT            NUMBER(16)    NOT NULL,
    CD_PART_TYP         VARCHAR2(3)       NULL,
    ID_PERSON           NUMBER(16)        NULL,
    NM_PART             VARCHAR2(30)  NOT NULL,
    CD_REL              VARCHAR2(3)       NULL,
    DT_SIGN             DATE              NULL,
    DT_PART             DATE              NULL,
    IND_APPV            VARCHAR2(1)       NULL,
    DT_APPV             DATE              NULL,
    TXT_NO_APPV         VARCHAR2(300)     NULL,
    CONSTRAINT PK_PLAN_PARTICIPANT
    PRIMARY KEY (ID_PLAN_PARTICIPANT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.PLAN_PARTICIPANT IS
'Holds Participants for the Family Plan, Foster Care Case Plan Child, and Foster Care Case Plan Family'
;
COMMENT ON COLUMN CAPS.PLAN_PARTICIPANT.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.PLAN_PARTICIPANT TO CAPSBAT
;
GRANT INSERT ON CAPS.PLAN_PARTICIPANT TO CAPSBAT
;
GRANT SELECT ON CAPS.PLAN_PARTICIPANT TO CAPSBAT
;
GRANT UPDATE ON CAPS.PLAN_PARTICIPANT TO CAPSBAT
;
GRANT DELETE ON CAPS.PLAN_PARTICIPANT TO CAPSON
;
GRANT INSERT ON CAPS.PLAN_PARTICIPANT TO CAPSON
;
GRANT SELECT ON CAPS.PLAN_PARTICIPANT TO CAPSON
;
GRANT UPDATE ON CAPS.PLAN_PARTICIPANT TO CAPSON
;
GRANT SELECT ON CAPS.PLAN_PARTICIPANT TO OPERATOR
;
CREATE TABLE CAPS.PLAN_SEC_GOAL
(
    ID_PLAN_SEC_GOAL NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE   DATE          NOT NULL,
    ID_EVENT         NUMBER(16)    NOT NULL,
    TXT_DESC         VARCHAR2(300)     NULL,
    CD_STAT          VARCHAR2(3)       NULL,
    IND_PRNT_APPV    VARCHAR2(1)       NULL,
    CONSTRAINT PK_PLAN_SEC_GOAL
    PRIMARY KEY (ID_PLAN_SEC_GOAL)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.PLAN_SEC_GOAL IS
'Holds Secondary Goals for the Family Plan, Foster Care Case Plan Child, and Foster Care Case Plan Family'
;
COMMENT ON COLUMN CAPS.PLAN_SEC_GOAL.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.PLAN_SEC_GOAL TO CAPSBAT
;
GRANT INSERT ON CAPS.PLAN_SEC_GOAL TO CAPSBAT
;
GRANT SELECT ON CAPS.PLAN_SEC_GOAL TO CAPSBAT
;
GRANT UPDATE ON CAPS.PLAN_SEC_GOAL TO CAPSBAT
;
GRANT DELETE ON CAPS.PLAN_SEC_GOAL TO CAPSON
;
GRANT INSERT ON CAPS.PLAN_SEC_GOAL TO CAPSON
;
GRANT SELECT ON CAPS.PLAN_SEC_GOAL TO CAPSON
;
GRANT UPDATE ON CAPS.PLAN_SEC_GOAL TO CAPSON
;
GRANT SELECT ON CAPS.PLAN_SEC_GOAL TO OPERATOR
;
CREATE TABLE CAPS.PLAN_STEP
(
    ID_PLAN_STEP   NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE DATE          NOT NULL,
    ID_PLAN_GOAL   NUMBER(16)    NOT NULL,
    TXT_PRIORITY   VARCHAR2(30)      NULL,
    TXT_RSPNS      VARCHAR2(30)      NULL,
    TXT_STEP       VARCHAR2(300) NOT NULL,
    TXT_STEP_COMM  VARCHAR2(300)     NULL,
    CD_STATUS      VARCHAR2(3)       NULL,
    DT_ANT_COMP    DATE              NULL,
    DT_ACT_COMP    DATE              NULL,
    CONSTRAINT PK_PLAN_STEP
    PRIMARY KEY (ID_PLAN_STEP)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.PLAN_STEP IS
'Holds Steps for the Family Plan, Foster Care Case Plan Child, and Foster Care Case Plan Family'
;
COMMENT ON COLUMN CAPS.PLAN_STEP.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.PLAN_STEP TO CAPSBAT
;
GRANT INSERT ON CAPS.PLAN_STEP TO CAPSBAT
;
GRANT SELECT ON CAPS.PLAN_STEP TO CAPSBAT
;
GRANT UPDATE ON CAPS.PLAN_STEP TO CAPSBAT
;
GRANT DELETE ON CAPS.PLAN_STEP TO CAPSON
;
GRANT INSERT ON CAPS.PLAN_STEP TO CAPSON
;
GRANT SELECT ON CAPS.PLAN_STEP TO CAPSON
;
GRANT UPDATE ON CAPS.PLAN_STEP TO CAPSON
;
GRANT SELECT ON CAPS.PLAN_STEP TO OPERATOR
;
CREATE TABLE CAPS.RESTRICTED_FUNDS
(
    ID_RESTRICTED_FUNDS NUMBER(16)   NOT NULL,
    DT_LAST_UPDATE      DATE         NOT NULL,
    ID_PERSON           NUMBER(16)   NOT NULL,
    AMT_CHECK_BAL       NUMBER(13,2)     NULL,
    AMT_SAV_BAL         NUMBER(13,2)     NULL,
    AMT_RES             NUMBER(13,2)     NULL,
    TXT_RES             VARCHAR2(50)     NULL,
    CONSTRAINT PK_RESTRICTED_FUNDS
    PRIMARY KEY (ID_RESTRICTED_FUNDS)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.RESTRICTED_FUNDS IS
'Holds Data from the Restricted Funds Data'
;
COMMENT ON COLUMN CAPS.RESTRICTED_FUNDS.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.RESTRICTED_FUNDS TO CAPSBAT
;
GRANT INSERT ON CAPS.RESTRICTED_FUNDS TO CAPSBAT
;
GRANT SELECT ON CAPS.RESTRICTED_FUNDS TO CAPSBAT
;
GRANT UPDATE ON CAPS.RESTRICTED_FUNDS TO CAPSBAT
;
GRANT DELETE ON CAPS.RESTRICTED_FUNDS TO CAPSON
;
GRANT INSERT ON CAPS.RESTRICTED_FUNDS TO CAPSON
;
GRANT SELECT ON CAPS.RESTRICTED_FUNDS TO CAPSON
;
GRANT UPDATE ON CAPS.RESTRICTED_FUNDS TO CAPSON
;
GRANT SELECT ON CAPS.RESTRICTED_FUNDS TO OPERATOR
;
CREATE TABLE CAPS.TCM_CLAIM
(
    ID_TCM_CLAIM   NUMBER(16)   NOT NULL,
    DT_LAST_UPDATE DATE         NOT NULL,
    ID_STAFF       NUMBER(16)       NULL,
    ID_STAGE       NUMBER(16)       NULL,
    ID_PERSON      NUMBER(16)       NULL,
    NM_CLIENT      VARCHAR2(30)     NULL,
    NBR_MEDICAID   VARCHAR2(15)     NULL,
    CD_STATUS      VARCHAR2(3)      NULL,
    CD_DENIAL      VARCHAR2(4)      NULL,
    DT_STATUS      DATE             NULL,
    DT_SERVICE     DATE             NULL,
    NBR_TCN        VARCHAR2(15)     NULL,
    CONSTRAINT PK_TCM_CLAIM
    PRIMARY KEY (ID_TCM_CLAIM)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.TCM_CLAIM IS
'Holds TCM Claim Data'
;
COMMENT ON COLUMN CAPS.TCM_CLAIM.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.TCM_CLAIM TO CAPSBAT
;
GRANT INSERT ON CAPS.TCM_CLAIM TO CAPSBAT
;
GRANT SELECT ON CAPS.TCM_CLAIM TO CAPSBAT
;
GRANT UPDATE ON CAPS.TCM_CLAIM TO CAPSBAT
;
GRANT DELETE ON CAPS.TCM_CLAIM TO CAPSON
;
GRANT INSERT ON CAPS.TCM_CLAIM TO CAPSON
;
GRANT SELECT ON CAPS.TCM_CLAIM TO CAPSON
;
GRANT UPDATE ON CAPS.TCM_CLAIM TO CAPSON
;
GRANT SELECT ON CAPS.TCM_CLAIM TO OPERATOR
;
CREATE TABLE CAPS.WTLP_DETAIL
(
    ID_PERSON             NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE        DATE          NOT NULL,
    DT_EMNC_DISC          DATE              NULL,
    TXT_DEM_CMMTS         VARCHAR2(300)     NULL,
    TXT_LIFE_SKILLS       VARCHAR2(300)     NULL,
    TXT_EMP_SVC           VARCHAR2(300)     NULL,
    TXT_HLTH_SVC          VARCHAR2(300)     NULL,
    DT_GRAD               DATE              NULL,
    CD_ACAD_TRACK         VARCHAR2(3)       NULL,
    NBR_SCH_CREDIT_REQD   NUMBER(4)         NULL,
    NBR_SCH_CREDIT_EARNED NUMBER(4)         NULL,
    NBR_SCH_CURR_GPA      NUMBER(6)         NULL,
    NBR_SCH_CUM_GPA       NUMBER(6)         NULL,
    IND_SCH_GRAD          VARCHAR2(1)       NULL,
    TXT_SCH_CMMTS         VARCHAR2(300)     NULL,
    DT_GGT_WRITE_TAK      DATE              NULL,
    DT_GGT_WRITE_PASSED   DATE              NULL,
    DT_GGT_MATH_TAK       DATE              NULL,
    DT_GGT_MATH_PASSED    DATE              NULL,
    DT_GGT_SCI_TAK        DATE              NULL,
    DT_GGT_SCI_PASSED     DATE              NULL,
    DT_GGT_SOCSCI_TAK     DATE              NULL,
    DT_GGT_SOCSCI_PASSED  DATE              NULL,
    DT_GGT_READ_TAK       DATE              NULL,
    DT_GGT_READ_PASSED    DATE              NULL,
    NM_GED_PROG           VARCHAR2(20)      NULL,
    IND_GED_PROG          VARCHAR2(1)       NULL,
    ADDR_GED_ADDR_1       VARCHAR2(30)      NULL,
    ADDR_GED_ADDR_2       VARCHAR2(30)      NULL,
    ADDR_GED_ADDR_CITY    VARCHAR2(20)      NULL,
    ADDR_GED_ADDR_STATE   VARCHAR2(2)       NULL,
    ADDR_GED_ADDR_ZIP     VARCHAR2(10)      NULL,
    NBR_GED_PHONE         VARCHAR2(10)      NULL,
    NBR_GED_FAX           VARCHAR2(10)      NULL,
    DT_GED_EXP_PROG_COMP  DATE              NULL,
    DT_GED_PROG_COMP      DATE              NULL,
    DT_GED_COMP           DATE              NULL,
    DT_GED_WRITE_TAK      DATE              NULL,
    DT_GED_WRITE_PASSED   DATE              NULL,
    DT_GED_SOCSTU_TAK     DATE              NULL,
    DT_GED_SOCSTU_PASSED  DATE              NULL,
    DT_GED_SCI_TAK        DATE              NULL,
    DT_GED_SCI_PASSED     DATE              NULL,
    DT_GED_LA_TAK         DATE              NULL,
    DT_GED_LA_PASSED      DATE              NULL,
    DT_GED_MATH_TAK       DATE              NULL,
    DT_GED_MATH_PASSED    DATE              NULL,
    NM_INST               VARCHAR2(50)      NULL,
    CD_EDU_GOAL           VARCHAR2(3)       NULL,
    CD_CLASSIF            VARCHAR2(3)       NULL,
    TXT_AREA_STUDY        VARCHAR2(20)      NULL,
    NBR_POST_CURR_GPA     NUMBER(6)         NULL,
    NBR_POST_CUMM_GPA     NUMBER(6)         NULL,
    NBR_POST_REQ_CRED     NUMBER(4)         NULL,
    NBR_POST_REQ_EAR      NUMBER(4)         NULL,
    DT_POST_EXP_GRAD      DATE              NULL,
    DT_POST_GRAD          DATE              NULL,
    CONSTRAINT PK_WTLP_DETAIL
    PRIMARY KEY (ID_PERSON)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.WTLP_DETAIL IS
'Holds Written Transition Living Plan Information for a child.'
;
COMMENT ON COLUMN CAPS.WTLP_DETAIL.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.WTLP_DETAIL TO CAPSBAT
;
GRANT INSERT ON CAPS.WTLP_DETAIL TO CAPSBAT
;
GRANT SELECT ON CAPS.WTLP_DETAIL TO CAPSBAT
;
GRANT UPDATE ON CAPS.WTLP_DETAIL TO CAPSBAT
;
GRANT DELETE ON CAPS.WTLP_DETAIL TO CAPSON
;
GRANT INSERT ON CAPS.WTLP_DETAIL TO CAPSON
;
GRANT SELECT ON CAPS.WTLP_DETAIL TO CAPSON
;
GRANT UPDATE ON CAPS.WTLP_DETAIL TO CAPSON
;
GRANT SELECT ON CAPS.WTLP_DETAIL TO OPERATOR
;
CREATE TABLE CAPS.WTLP_PLAN
(
    ID_EVENT       NUMBER(16)    NOT NULL,
    DT_LAST_UPDATE DATE          NOT NULL,
    CD_PLAN_TYPE   VARCHAR2(1)       NULL,
    ID_PERSON      NUMBER(16)        NULL,
    DT_WTLP        DATE              NULL,
    DT_FROM        DATE              NULL,
    DT_TO          DATE              NULL,
    CD_PLCMT_AUTH  VARCHAR2(3)       NULL,
    TXT_VOLUNTARY  VARCHAR2(300)     NULL,
    CD_EDU         VARCHAR2(3)       NULL,
    CD_VOC         VARCHAR2(3)       NULL,
    CD_BASIC       VARCHAR2(3)       NULL,
    CD_HEALTH      VARCHAR2(3)       NULL,
    CD_PERS        VARCHAR2(3)       NULL,
    TXT_STRENGTHS  VARCHAR2(300)     NULL,
    TXT_NEEDS      VARCHAR2(300)     NULL,
    CONSTRAINT PK_WTLP_PLAN
    PRIMARY KEY (ID_EVENT)
    USING INDEX TABLESPACE INDEX01
                STORAGE(BUFFER_POOL DEFAULT)
    ENABLE
    VALIDATE
)
LOGGING
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCACHE
;
COMMENT ON TABLE CAPS.WTLP_PLAN IS
'Holds WTLP page information'
;
COMMENT ON COLUMN CAPS.WTLP_PLAN.DT_LAST_UPDATE IS
'Date of insert or last update'
;
GRANT DELETE ON CAPS.WTLP_PLAN TO CAPSBAT
;
GRANT INSERT ON CAPS.WTLP_PLAN TO CAPSBAT
;
GRANT SELECT ON CAPS.WTLP_PLAN TO CAPSBAT
;
GRANT UPDATE ON CAPS.WTLP_PLAN TO CAPSBAT
;
GRANT DELETE ON CAPS.WTLP_PLAN TO CAPSON
;
GRANT INSERT ON CAPS.WTLP_PLAN TO CAPSON
;
GRANT SELECT ON CAPS.WTLP_PLAN TO CAPSON
;
GRANT UPDATE ON CAPS.WTLP_PLAN TO CAPSON
;
GRANT SELECT ON CAPS.WTLP_PLAN TO OPERATOR
;


-- Add Referencing Foreign Keys SQL

ALTER TABLE CAPS.ADO_INFO 
    ADD CONSTRAINT FK_ADO_INFO_RESOURCE
FOREIGN KEY (ID_RESOURCE)
REFERENCES CAPS.CAPS_RESOURCE (ID_RESOURCE)
ENABLE
;
ALTER TABLE CAPS.ADO_INFO 
    ADD CONSTRAINT FK_ADO_INFO_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.ADO_INFO_CBX 
    ADD CONSTRAINT FK_CBX_ADO_INFO
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.ADO_INFO (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.ADO_INFO_FAMILY 
    ADD CONSTRAINT FK_ADO_INF_FAM_RESOURCE
FOREIGN KEY (ID_RESOURCE)
REFERENCES CAPS.CAPS_RESOURCE (ID_RESOURCE)
ENABLE
;
ALTER TABLE CAPS.ADO_INFO_FAMILY 
    ADD CONSTRAINT FK_FAMILY_ADO_INFO
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.ADO_INFO (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.CASE_BUDGET_LIMIT 
    ADD CONSTRAINT FK_CASE_BUDG_LIM_CASE
FOREIGN KEY (ID_CASE)
REFERENCES CAPS.CAPS_CASE (ID_CASE)
ENABLE
;
ALTER TABLE CAPS.COLLEGE_EXAM 
    ADD CONSTRAINT FK_COLL_EXAM_WTLP
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.WTLP_DETAIL (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.COLLEGE_EXAM 
    ADD CONSTRAINT FK_COLL_EXAM_PERSON
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.DILIGENT_SEARCH 
    ADD CONSTRAINT FK_DILI_SEARCH_STAGE
FOREIGN KEY (ID_STAGE)
REFERENCES CAPS.STAGE (ID_STAGE)
ENABLE
;
ALTER TABLE CAPS.DILIGENT_SEARCH 
    ADD CONSTRAINT FK_DILI_SEARCH_CASE
FOREIGN KEY (ID_CASE)
REFERENCES CAPS.CAPS_CASE (ID_CASE)
ENABLE
;
ALTER TABLE CAPS.FACILITY_LICENSE_TYPE 
    ADD CONSTRAINT FK_FACIL_LIC_TYPE_RESOURCE
FOREIGN KEY (ID_RESOURCE)
REFERENCES CAPS.CAPS_RESOURCE (ID_RESOURCE)
ENABLE
;
ALTER TABLE CAPS.FAMILY_SERVICE_REFERRAL 
    ADD CONSTRAINT FK_FAM_SRV_REF_ASS_PERSON
FOREIGN KEY (ID_PERSON_ASSIGNED)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.FAMILY_SERVICE_REFERRAL 
    ADD CONSTRAINT FK_FAM_SRV_REF_CRT_PERSON
FOREIGN KEY (ID_PERSON_CREATE)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.FAMILY_SERVICE_REFERRAL 
    ADD CONSTRAINT FK_FAM_SERV_REF_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.FCCP_CHILD 
    ADD CONSTRAINT FK_FFCP_CHILD_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.FCCP_CHILD_CBX 
    ADD CONSTRAINT FK_FCCP_CHILD_CBX_FCCP_CHILD
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.FCCP_CHILD (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.FCE_EXPENDITURES 
    ADD CONSTRAINT FK_FCE_EXP_PERSON
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.FCE_EXPENDITURES 
    ADD CONSTRAINT FK_FC_EXP_FCE_PERS
FOREIGN KEY (ID_FCE_PERSON)
REFERENCES CAPS.FCE_PERSON (ID_FCE_PERSON)
ENABLE
;
ALTER TABLE CAPS.FCE_EXPENDITURES 
    ADD CONSTRAINT FK_FCE_EXP_FCE_ELG
FOREIGN KEY (ID_FCE_ELIGIBILITY)
REFERENCES CAPS.FCE_ELIGIBILITY (ID_FCE_ELIGIBILITY)
ENABLE
;
ALTER TABLE CAPS.FCE_THIRD_PARTY_INSURANCE 
    ADD CONSTRAINT FK_FCE_3RD_PART_INS_APP
FOREIGN KEY (ID_FCE_APPLICATION)
REFERENCES CAPS.FCE_APPLICATION (ID_FCE_APPLICATION)
ENABLE
;
ALTER TABLE CAPS.HOME_APPLICANT_CBX 
    ADD CONSTRAINT FK_HOME_APP_CBX_HOME_APP
FOREIGN KEY (ID_HOME_APPLICANT)
REFERENCES CAPS.HOME_APPLICANT_INFO (ID_HOME_APPLICANT)
ENABLE
;
ALTER TABLE CAPS.HOME_APPLICANT_INFO 
    ADD CONSTRAINT FK_HOME_APP_INFO_RESOURCE
FOREIGN KEY (ID_RESOURCE)
REFERENCES CAPS.CAPS_RESOURCE (ID_RESOURCE)
ENABLE
;
ALTER TABLE CAPS.NEEDS_OUTCOMES 
    ADD CONSTRAINT FK_NEEDS_OUTS_RESOURCE
FOREIGN KEY (ID_RESOURCE)
REFERENCES CAPS.CAPS_RESOURCE (ID_RESOURCE)
ENABLE
;
ALTER TABLE CAPS.NEEDS_OUTCOMES 
    ADD CONSTRAINT FK_NEEDS_OUTS_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.NEEDS_OUTCOMES_DETAIL 
    ADD CONSTRAINT FK_NEEDS_OUTS_DET_NO
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.NEEDS_OUTCOMES (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.OUTPUT_LAUNCH_EVENT_LINK 
    ADD CONSTRAINT FK_OUTP_LNCH_EL_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.PLACEMENT_REFERRAL 
    ADD CONSTRAINT FK_PLACE_REF_PERSON
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.PLACEMENT_REFERRAL 
    ADD CONSTRAINT FK_PLACE_REF_RESOURCE
FOREIGN KEY (ID_RESOURCE)
REFERENCES CAPS.CAPS_RESOURCE (ID_RESOURCE)
ENABLE
;
ALTER TABLE CAPS.PLACEMENT_REFERRAL 
    ADD CONSTRAINT FK_PLACE_REF_EMPLOYEE
FOREIGN KEY (ID_EMPLOYEE)
REFERENCES CAPS.EMPLOYEE (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.PLAN_GOAL 
    ADD CONSTRAINT FK_PLAN_GOAL_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.PLAN_PARTICIPANT 
    ADD CONSTRAINT FK_PLAN_PART_PERSON
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.PLAN_PARTICIPANT 
    ADD CONSTRAINT FK_PLAN_PARTIC_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.PLAN_SEC_GOAL 
    ADD CONSTRAINT FK_PLAN_SEC_GOAL_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;
ALTER TABLE CAPS.PLAN_STEP 
    ADD CONSTRAINT FK_PLAN_STEP_PLAN_GOAL
FOREIGN KEY (ID_PLAN_GOAL)
REFERENCES CAPS.PLAN_GOAL (ID_PLAN_GOAL)
ENABLE
;
ALTER TABLE CAPS.RESTRICTED_FUNDS 
    ADD CONSTRAINT FK_RESTR_FUNDS_PERSON
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.TCM_CLAIM 
    ADD CONSTRAINT FK_TCM_CLAIM_STAGE
FOREIGN KEY (ID_STAGE)
REFERENCES CAPS.STAGE (ID_STAGE)
ENABLE
;
ALTER TABLE CAPS.TCM_CLAIM 
    ADD CONSTRAINT FK_TCM_CLAIM_PERSON
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.TCM_CLAIM 
    ADD CONSTRAINT FK_TCM_CLAIM_PERSON_STAFF
FOREIGN KEY (ID_STAFF)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.WTLP_DETAIL 
    ADD CONSTRAINT FK_WTLP_DET_PERSON
FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.WTLP_PLAN 
    ADD FOREIGN KEY (ID_PERSON)
REFERENCES CAPS.PERSON (ID_PERSON)
ENABLE
;
ALTER TABLE CAPS.WTLP_PLAN 
    ADD CONSTRAINT FK_WTLP_PLAN_EVENT
FOREIGN KEY (ID_EVENT)
REFERENCES CAPS.EVENT (ID_EVENT)
ENABLE
;

-- Alter Trigger SQL
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_ADOPTION_SUBSIDY
BEFORE UPDATE
ON CAPS.ADOPTION_SUBSIDY
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
        ----------------------------------------------------------
	-- SIR #22028 08/22/96 GLOORJW only write to the shadow
	-- table if any of the following variables have changed
	-- while updating the ADOPTION_SUBSIDY table:
	--     Type       CD_ADPT_SUB_DETERM,
	--     Amount     AMT_ADPT_SUB,
	--     Start Date DT_ADPT_SUB_EFFECTIVE,
	--     End Date   DT_ADPT_SUB_END
	--     :old = old or previous value on ADOPTION_SUBSIDY table
	--     :new = new or current value on ADOPTION_SUBSIDY table
        ----------------------------------------------------------
        IF (:new.CD_ADPT_SUB_DETERM    <> :old.CD_ADPT_SUB_DETERM    OR
	    :new.AMT_ADPT_SUB          <> :old.AMT_ADPT_SUB          OR
	    :new.DT_ADPT_SUB_EFFECTIVE <> :old.DT_ADPT_SUB_EFFECTIVE OR
	    :new.DT_ADPT_SUB_END       <> :old.DT_ADPT_SUB_END)
	THEN
       	    insert into ADOPTION_SUBSIDY_AUDIT (
	        ID_ADPT_SUB_AUD,
	        ID_ADPT_AUD_PERSON,
	        ID_ADPT_AUD_PAYEE,
	        ID_PLCMT_EVENT,
	        DT_LAST_UPDATE,
	        AMT_ADPT_AUD,
	        CD_ADPT_AUD_CLOSE_RSN,
	        CD_ADPT_AUD_DETERM,
	        DT_ADPT_AUD_AGREE_RETN,
	        DT_ADPT_AUD_AGREE_SENT,
	        DT_ADPT_AUD_APP_RETURNED,
	        DT_ADPT_AUD_APP_SENT,
	        DT_ADPT_AUD_APPRVD ,
	        DT_ADPT_AUD_EFFECTIVE,
	        DT_ADPT_AUD_END,
	        DT_ADPT_AUD_LAST_INVC,
	        IND_ADPT_AUD_THIRD_PARTY,
	        IND_ADPT_AUD_PROCESS,
	        TXT_ADPT_AUD_RSN,
	        IND_SAU_CONF,
	        IND_SPCL_ASST_APPRVL,
	        AMT_SPCL_ASST_REQ,
	        CD_SPCL_ASST_TYPE,
	        TXT_SPCL_ASST_SPECIFY,
	        TXT_SPCL_ASST_CMNTS,
	        DT_RENWL_EFF_BEGIN,
	        DT_RENWL_EFF_END
	    ) VALUES (
		:new.ID_ADPT_SUB,
		:new.ID_ADPT_SUB_PERSON,
		:new.ID_ADPT_SUB_PAYEE,
		:new.ID_PLCMT_EVENT,
		:new.DT_LAST_UPDATE,
		:new.AMT_ADPT_SUB,
		:new.CD_ADPT_SUB_CLOSE_RSN,
		:new.CD_ADPT_SUB_DETERM,
		:new.DT_ADPT_SUB_AGREE_RETN,
		:new.DT_ADPT_SUB_AGREE_SENT,
		:new.DT_ADPT_SUB_APP_RETURNED,
		:new.DT_ADPT_SUB_APP_SENT,
		:new.DT_ADPT_SUB_APPRVD,
		:new.DT_ADPT_SUB_EFFECTIVE,
		:new.DT_ADPT_SUB_END,
		:new.DT_ADPT_SUB_LAST_INVC,
		:new.IND_ADPT_SUB_THIRD_PARTY,
		:new.IND_ADPT_SUB_PROCESS,
		:new.TXT_ADPT_SUB_RSN,
		:new.IND_SAU_CONF,
	    :new.IND_SPCL_ASST_APPRVL,
	    :new.AMT_SPCL_ASST_REQ,
	    :new.CD_SPCL_ASST_TYPE,
	    :new.TXT_SPCL_ASST_SPECIFY,
	    :new.TXT_SPCL_ASST_CMNTS,
	    :new.DT_RENWL_EFF_BEGIN,
	    :new.DT_RENWL_EFF_END
	    );
        END IF;
	------------------------------------------------------
	-- End SIR 22028
	------------------------------------------------------
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_ADOPTION_SUBSIDY
BEFORE INSERT
ON CAPS.ADOPTION_SUBSIDY
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy number;
BEGIN
	IF (:NEW.ID_ADPT_SUB IS NULL OR :new.ID_ADPT_SUB = 0)
	THEN
                SELECT SEQ_ADOPTION_SUBSIDY.NEXTVAL INTO dummy  FROM DUAL;
		:new.ID_ADPT_SUB := dummy;
	END IF;
	:new.DT_LAST_UPDATE := SYSDATE;
	insert into ADOPTION_SUBSIDY_AUDIT (
	        ID_ADPT_SUB_AUD,
	        ID_ADPT_AUD_PERSON,
	        ID_ADPT_AUD_PAYEE,
	        ID_PLCMT_EVENT,
	        DT_LAST_UPDATE,
	        AMT_ADPT_AUD,
	        CD_ADPT_AUD_CLOSE_RSN,
	        CD_ADPT_AUD_DETERM,
	        DT_ADPT_AUD_AGREE_RETN,
	        DT_ADPT_AUD_AGREE_SENT,
	        DT_ADPT_AUD_APP_RETURNED,
	        DT_ADPT_AUD_APP_SENT,
	        DT_ADPT_AUD_APPRVD ,
	        DT_ADPT_AUD_EFFECTIVE,
	        DT_ADPT_AUD_END,
	        DT_ADPT_AUD_LAST_INVC,
	        IND_ADPT_AUD_THIRD_PARTY,
	        IND_ADPT_AUD_PROCESS,
	        TXT_ADPT_AUD_RSN,
	        IND_SAU_CONF,
	        IND_SPCL_ASST_APPRVL,
	        AMT_SPCL_ASST_REQ,
	        CD_SPCL_ASST_TYPE,
	        TXT_SPCL_ASST_SPECIFY,
	        TXT_SPCL_ASST_CMNTS,
	        DT_RENWL_EFF_BEGIN,
	        DT_RENWL_EFF_END
	) VALUES (
		:new.ID_ADPT_SUB,
		:new.ID_ADPT_SUB_PERSON,
		:new.ID_ADPT_SUB_PAYEE,
		:new.ID_PLCMT_EVENT,
		:new.DT_LAST_UPDATE,
		:new.AMT_ADPT_SUB,
		:new.CD_ADPT_SUB_CLOSE_RSN,
		:new.CD_ADPT_SUB_DETERM,
		:new.DT_ADPT_SUB_AGREE_RETN,
		:new.DT_ADPT_SUB_AGREE_SENT,
		:new.DT_ADPT_SUB_APP_RETURNED,
		:new.DT_ADPT_SUB_APP_SENT,
		:new.DT_ADPT_SUB_APPRVD,
		:new.DT_ADPT_SUB_EFFECTIVE,
		:new.DT_ADPT_SUB_END,
		:new.DT_ADPT_SUB_LAST_INVC,
		:new.IND_ADPT_SUB_THIRD_PARTY,
		:new.IND_ADPT_SUB_PROCESS,
		:new.TXT_ADPT_SUB_RSN,
		:new.IND_SAU_CONF,
	    :new.IND_SPCL_ASST_APPRVL,
	    :new.AMT_SPCL_ASST_REQ,
	    :new.CD_SPCL_ASST_TYPE,
	    :new.TXT_SPCL_ASST_SPECIFY,
	    :new.TXT_SPCL_ASST_CMNTS,
	    :new.DT_RENWL_EFF_BEGIN,
	    :new.DT_RENWL_EFF_END
	);
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_CAPS_RESOURCE
BEFORE UPDATE
ON CAPS.CAPS_RESOURCE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
	dummy2		NUMBER;

-- Similar to those triggers of table PERSON
-- Mike Bui 12-JUL-95

BEGIN

-- 05/26/2001 MITSCHCG Added for CLASS project SIR #15684
-- For resource type 70 check whether any of the following columns changed
-- and if changed set the dt_ccl_update to sysdate.

IF :NEW.CD_RSRC_FACIL_TYPE ='70' THEN

IF ((:OLD.CD_RSRC_FACIL_TYPE IS NULL AND :NEW.CD_RSRC_FACIL_TYPE IS NOT NULL) 	OR
   (:OLD.CD_RSRC_FACIL_TYPE IS NOT NULL AND :NEW.CD_RSRC_FACIL_TYPE IS NULL) 	OR
   (:OLD.CD_RSRC_FACIL_TYPE != :NEW.CD_RSRC_FACIL_TYPE))  			OR
   ((:OLD.CD_RSRC_FA_HOME_STATUS IS NULL AND :NEW.CD_RSRC_FA_HOME_STATUS IS NOT NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_STATUS IS NOT NULL AND :NEW.CD_RSRC_FA_HOME_STATUS IS NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_STATUS != :NEW.CD_RSRC_FA_HOME_STATUS))  			OR
   ((:OLD.CD_RSRC_CATEGORY IS NULL AND :NEW.CD_RSRC_CATEGORY IS NOT NULL) 	OR
   (:OLD.CD_RSRC_CATEGORY IS NOT NULL AND :NEW.CD_RSRC_CATEGORY IS NULL) 	OR
   (:OLD.CD_RSRC_CATEGORY != :NEW.CD_RSRC_CATEGORY))  			OR
   ((:OLD.CD_RSRC_FA_HOME_TYPE_1 IS NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_1 IS NOT NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_1 IS NOT NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_1 IS NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_1 != :NEW.CD_RSRC_FA_HOME_TYPE_1))  			OR
   ((:OLD.CD_RSRC_FA_HOME_TYPE_2 IS NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_2 IS NOT NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_2 IS NOT NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_2 IS NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_2 != :NEW.CD_RSRC_FA_HOME_TYPE_2))  			OR
   ((:OLD.CD_RSRC_FA_HOME_TYPE_3 IS NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_3 IS NOT NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_3 IS NOT NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_3 IS NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_3 != :NEW.CD_RSRC_FA_HOME_TYPE_3))  			OR
   ((:OLD.CD_RSRC_FA_HOME_TYPE_4 IS NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_4 IS NOT NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_4 IS NOT NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_4 IS NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_4 != :NEW.CD_RSRC_FA_HOME_TYPE_4))  			OR
   ((:OLD.CD_RSRC_FA_HOME_TYPE_5 IS NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_5 IS NOT NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_5 IS NOT NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_5 IS NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_5 != :NEW.CD_RSRC_FA_HOME_TYPE_5))  			OR
   ((:OLD.CD_RSRC_FA_HOME_TYPE_6 IS NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_6 IS NOT NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_6 IS NOT NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_6 IS NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_6 != :NEW.CD_RSRC_FA_HOME_TYPE_6))  			OR
   ((:OLD.CD_RSRC_FA_HOME_TYPE_7 IS NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_7 IS NOT NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_7 IS NOT NULL AND :NEW.CD_RSRC_FA_HOME_TYPE_7 IS NULL) 	OR
   (:OLD.CD_RSRC_FA_HOME_TYPE_7 != :NEW.CD_RSRC_FA_HOME_TYPE_7))  			OR
   ((:OLD.CD_RSRC_REGION IS NULL AND :NEW.CD_RSRC_REGION IS NOT NULL) 	OR
   (:OLD.CD_RSRC_REGION IS NOT NULL AND :NEW.CD_RSRC_REGION IS NULL) 	OR
   (:OLD.CD_RSRC_REGION != :NEW.CD_RSRC_REGION))  			OR
   ((:OLD.NM_RESOURCE IS NULL AND :NEW.NM_RESOURCE IS NOT NULL) 	OR
   (:OLD.NM_RESOURCE IS NOT NULL AND :NEW.NM_RESOURCE IS NULL) 	OR
   (:OLD.NM_RESOURCE != :NEW.NM_RESOURCE))  			OR
   ((:OLD.NBR_RSRC_FACIL_CAPACITY IS NULL AND :NEW.NBR_RSRC_FACIL_CAPACITY IS NOT NULL) 	OR
   (:OLD.NBR_RSRC_FACIL_CAPACITY IS NOT NULL AND :NEW.NBR_RSRC_FACIL_CAPACITY IS NULL) 	OR
   (:OLD.NBR_RSRC_FACIL_CAPACITY != :NEW.NBR_RSRC_FACIL_CAPACITY))  			OR
   ((:OLD.DT_RSRC_CLOSE IS NULL AND :NEW.DT_RSRC_CLOSE IS NOT NULL) 	OR
   (:OLD.DT_RSRC_CLOSE IS NOT NULL AND :NEW.DT_RSRC_CLOSE IS NULL) 	OR
   (:OLD.DT_RSRC_CLOSE != :NEW.DT_RSRC_CLOSE))  			OR
   ((:OLD.DT_RSRC_CERT IS NULL AND :NEW.DT_RSRC_CERT IS NOT NULL) 	OR
   (:OLD.DT_RSRC_CERT IS NOT NULL AND :NEW.DT_RSRC_CERT IS NULL) 	OR
   (:OLD.DT_RSRC_CERT != :NEW.DT_RSRC_CERT))  			OR
   ((:OLD.ADDR_RSRC_ST_LN_1 IS NULL AND :NEW.ADDR_RSRC_ST_LN_1 IS NOT NULL) 	OR
   (:OLD.ADDR_RSRC_ST_LN_1 IS NOT NULL AND :NEW.ADDR_RSRC_ST_LN_1 IS NULL) 	OR
   (:OLD.ADDR_RSRC_ST_LN_1 != :NEW.ADDR_RSRC_ST_LN_1))  			OR
   ((:OLD.ADDR_RSRC_ST_LN_2 IS NULL AND :NEW.ADDR_RSRC_ST_LN_2 IS NOT NULL) 	OR
   (:OLD.ADDR_RSRC_ST_LN_2 IS NOT NULL AND :NEW.ADDR_RSRC_ST_LN_2 IS NULL) 	OR
   (:OLD.ADDR_RSRC_ST_LN_2 != :NEW.ADDR_RSRC_ST_LN_2))  			OR
   ((:OLD.ADDR_RSRC_CITY IS NULL AND :NEW.ADDR_RSRC_CITY IS NOT NULL) 	OR
   (:OLD.ADDR_RSRC_CITY IS NOT NULL AND :NEW.ADDR_RSRC_CITY IS NULL) 	OR
   (:OLD.ADDR_RSRC_CITY != :NEW.ADDR_RSRC_CITY))  			OR
   ((:OLD.CD_RSRC_STATE IS NULL AND :NEW.CD_RSRC_STATE IS NOT NULL) 	OR
   (:OLD.CD_RSRC_STATE IS NOT NULL AND :NEW.CD_RSRC_STATE IS NULL) 	OR
   (:OLD.CD_RSRC_STATE != :NEW.CD_RSRC_STATE))  			OR
   ((:OLD.ADDR_RSRC_ZIP IS NULL AND :NEW.ADDR_RSRC_ZIP IS NOT NULL) 	OR
   (:OLD.ADDR_RSRC_ZIP IS NOT NULL AND :NEW.ADDR_RSRC_ZIP IS NULL) 	OR
   (:OLD.ADDR_RSRC_ZIP != :NEW.ADDR_RSRC_ZIP))  			OR
   ((:OLD.CD_RSRC_CNTY IS NULL AND :NEW.CD_RSRC_CNTY IS NOT NULL) 	OR
   (:OLD.CD_RSRC_CNTY IS NOT NULL AND :NEW.CD_RSRC_CNTY IS NULL) 	OR
   (:OLD.CD_RSRC_CNTY != :NEW.CD_RSRC_CNTY))  			OR
   ((:OLD.NBR_RSRC_PHN IS NULL AND :NEW.NBR_RSRC_PHN IS NOT NULL) 		OR
   (:OLD.NBR_RSRC_PHN IS NOT NULL AND :NEW.NBR_RSRC_PHN IS NULL) 		OR
   (:OLD.NBR_RSRC_PHN != :NEW.NBR_RSRC_PHN))  					OR
   ((:OLD.NBR_RSRC_PHONE_EXT IS NULL AND :NEW.NBR_RSRC_PHONE_EXT IS NOT NULL) 	OR
   (:OLD.NBR_RSRC_PHONE_EXT IS NOT NULL AND :NEW.NBR_RSRC_PHONE_EXT IS NULL) 	OR
   (:OLD.NBR_RSRC_PHONE_EXT != :NEW.NBR_RSRC_PHONE_EXT))  			OR
   ((:OLD.NBR_RSRC_FM_AGE_MAX IS NULL AND :NEW.NBR_RSRC_FM_AGE_MAX IS NOT NULL) 	OR
   (:OLD.NBR_RSRC_FM_AGE_MAX IS NOT NULL AND :NEW.NBR_RSRC_FM_AGE_MAX IS NULL) 	OR
   (:OLD.NBR_RSRC_FM_AGE_MAX != :NEW.NBR_RSRC_FM_AGE_MAX))  			OR
   ((:OLD.NBR_RSRC_FM_AGE_MIN IS NULL AND :NEW.NBR_RSRC_FM_AGE_MIN IS NOT NULL) 	OR
   (:OLD.NBR_RSRC_FM_AGE_MIN IS NOT NULL AND :NEW.NBR_RSRC_FM_AGE_MIN IS NULL) 	OR
   (:OLD.NBR_RSRC_FM_AGE_MIN != :NEW.NBR_RSRC_FM_AGE_MIN))  			OR
   ((:OLD.NBR_RSRC_MA_AGE_MAX IS NULL AND :NEW.NBR_RSRC_MA_AGE_MAX IS NOT NULL) 	OR
   (:OLD.NBR_RSRC_MA_AGE_MAX IS NOT NULL AND :NEW.NBR_RSRC_MA_AGE_MAX IS NULL) 	OR
   (:OLD.NBR_RSRC_MA_AGE_MAX != :NEW.NBR_RSRC_MA_AGE_MAX))  			OR
   ((:OLD.NBR_RSRC_MA_AGE_MIN IS NULL AND :NEW.NBR_RSRC_MA_AGE_MIN IS NOT NULL) 	OR
   (:OLD.NBR_RSRC_MA_AGE_MIN IS NOT NULL AND :NEW.NBR_RSRC_MA_AGE_MIN IS NULL) 	OR
   (:OLD.NBR_RSRC_MA_AGE_MIN != :NEW.NBR_RSRC_MA_AGE_MIN))
										THEN
	:NEW.DT_CCL_UPDATE := SYSDATE;
END IF;

END IF;


  :NEW.DT_LAST_UPDATE := SYSDATE;
  :NEW.NM_RSRC_NAME_INDEX := SUBSTR(:NEW.NM_RESOURCE,0,2);
  --insert into table RESOURCE_HISTORY if field :new.IND_RSRC_WRITE_HIST is 'Y':
  IF NVL(:NEW.IND_RSRC_WRITE_HIST,'N') = 'Y' THEN

	--dbms_output.put_line('0');
	-- 1st: set END DATE of previous record:
	UPDATE RESOURCE_HISTORY  RH
	SET    RH.DT_RSHS_END		= :NEW.DT_LAST_UPDATE
	WHERE  RH.ID_RESOURCE		= :NEW.ID_RESOURCE
	AND    RH.ID_RESOURCE_HISTORY	=
		(SELECT MAX(RH2.ID_RESOURCE_HISTORY)
		FROM   RESOURCE_HISTORY RH2
		WHERE  RH2.ID_RESOURCE= :NEW.ID_RESOURCE
		AND    RH2.DT_RSHS_END = '12/31/4712');

	-- now insert a new record into RESOURCE_HISTORY using data from the OLD record
	-- (not from the NEW record) of CAPS_RESOURCE.  This is different with that
	-- update trigger of table PERSON

	-- Get next sequence value:
	SELECT SEQ_RESOURCE_HISTORY.NEXTVAL INTO dummy2 FROM DUAL;

	--dbms_output.put_line('1 '||TO_CHAR(dummy2) ||' ' ||
	--to_char(:new.dt_last_update) || ' ' ||
	--to_char(:new.id_resource) );
	INSERT INTO RESOURCE_HISTORY (
		ID_RESOURCE_HISTORY,
		DT_RSHS_EFFECTIVE,
		DT_RSHS_END,
		ID_RESOURCE,
		DT_LAST_UPDATE,
		ID_CASE,
		ADDR_RSHS_ST_LN_1,
		ADDR_RSHS_ST_LN_2,
		ADDR_RSHS_CITY,
		ADDR_RSHS_ATTN,
		CD_RSHS_STATE,
		ADDR_RSHS_ZIP,
		CD_RSHS_CNTY,
		NM_RSHS_RESOURCE,
		NM_RSHS_CONTACT,
		CD_RSHS_TYPE,
		CD_RSHS_HUB,
		CD_RSHS_CAMPUS_TYPE,
		NBR_RSHS_PHN,
		NBR_RSHS_CAMPUS_NBR,
		CD_RSHS_MAINTAINER,
		CD_RSHS_SCH_DIST,
		CD_RSHS_OWNERSHIP,
		CD_RSHS_STATUS,
		NM_RSHS_LAST_UPDATE,
		IND_RSHS_TRANSPORT,
		CD_RSHS_FACIL_TYPE,
		NBR_RSHS_FACIL_ACCLAIM,
		CD_RSHS_CERT_BY,
		CD_RSHS_OPER_BY,
		CD_RSHS_SETTING,
		DT_RSHS_CERT,
		DT_RSHS_CLOSE,
		CD_RSHS_PAYMENT,
		NBR_RSHS_FACIL_CAPACITY,
		ID_RSHS_FA_HOME_STAGE,
		ID_RSHS_FA_HOME_EVENT,
		CD_RSHS_CATEGORY,
		CD_RSHS_ETHNICITY,
		CD_RSHS_LANGUAGE,
		CD_RSHS_MARITAL_STATUS,
		CD_RSHS_REGION,
		CD_RSHS_RELIGION,
		CD_RSHS_RESPITE,
		CD_RSHS_RECMND_REOPEN,
		CD_RSHS_FA_HOME_TYPE1,
		CD_RSHS_FA_HOME_TYPE2,
		CD_RSHS_FA_HOME_TYPE3,
		CD_RSHS_FA_HOME_TYPE4,
		CD_RSHS_FA_HOME_TYPE5,
		CD_RSHS_FA_HOME_TYPE6,
		CD_RSHS_FA_HOME_TYPE7,
                CD_RSHS_MHMR_COMP_CODE,
		CD_RSHS_INVOL_CLOSURE,
		CD_RSHS_CLOSURE_RSN,
		CD_RSHS_FA_HOME_STATUS,
		DT_RSHS_MARRIAGE,
		IND_RSHS_CARE_PROV,
		IND_RSHS_EMERG_PLACE,
		IND_RSHS_INACTIVE,
		IND_RSHS_INDIV_STUDY,
		IND_RSHS_NONPRS,
		NBR_RSHS_INT_CHILDREN,
		NBR_RSHS_INT_FE_AGE_MAX,
		NBR_RSHS_INT_FE_AGE_MIN,
		NBR_RSHS_INT_MA_AGE_MAX,
		NBR_RSHS_INT_MA_AGE_MIN,
		NBR_RSHS_ANNUAL_INCOME,
		NBR_RSHS_FM_AGE_MAX,
		NBR_RSHS_FM_AGE_MIN,
		NBR_RSHS_MA_AGE_MAX,
		NBR_RSHS_MA_AGE_MIN,
		NBR_RSHS_PHONE_EXT,
		NBR_RSHS_VID,
                NBR_RSHS_OPEN_SLOTS,
		CD_RSHS_SOURCE_INQUIRY,
		TXT_RSHS_ADDR_CMNTS,
		TXT_RSHS_COMMENTS,
                DT_CCL_UPDATE,
		CD_RSRC_MHMR_SITE,
		IND_RSRC_CONTRACTED,
		NM_LEGAL,
		CD_CERTIFY_ENTITY,
		NM_RSRC_CONTACT_TITLE,
		NBR_RSRC_NTNL_PROVIDER,
		ADDR_RSRC_EMAIL,
		ADDR_RSRC_WEBSITE,
		CD_SCHOOL_TYPE,
		CD_PAYMENT_DELIVERY,
		TXT_SPEC_CERT,
		CD_EXCHANGE_STAT,
		IND_WAIVER,
		CD_SCH_DIST,
		CD_ELEM,
		CD_MIDDLE,
		CD_HIGH,
		DT_FOST_MANUAL,
		DT_FOST_BILL,
		IND_SPECIFIC_CHILD,
		DT_LIC_BEGIN,
		DT_LIC_END,
		TXT_CLOSURE_COMM
	) VALUES (
		dummy2,
		:NEW.DT_LAST_UPDATE,
		NULL,
		:NEW.ID_RESOURCE,
		SYSDATE,
		:NEW.ID_CASE,
		:NEW.ADDR_RSRC_ST_LN_1,
		:NEW.ADDR_RSRC_ST_LN_2,
		:NEW.ADDR_RSRC_CITY,
		:NEW.ADDR_RSRC_ATTN,
		:NEW.CD_RSRC_STATE,
		:NEW.ADDR_RSRC_ZIP,
		:NEW.CD_RSRC_CNTY,
		:NEW.NM_RESOURCE,
		:NEW.NM_RSRC_CONTACT,
		:NEW.CD_RSRC_TYPE,
		:NEW.CD_RSRC_HUB,
		:NEW.CD_RSRC_CAMPUS_TYPE,
		:NEW.NBR_RSRC_PHN,
		:NEW.NBR_RSRC_CAMPUS_NBR,
		:NEW.CD_RSRC_MAINTAINER,
		:NEW.CD_RSRC_SCH_DIST,
		:NEW.CD_RSRC_OWNERSHIP,
		:NEW.CD_RSRC_STATUS,
		:NEW.NM_RSRC_LAST_UPDATE,
		:NEW.IND_RSRC_TRANSPORT,
		:NEW.CD_RSRC_FACIL_TYPE,
		:NEW.NBR_RSRC_FACIL_ACCLAIM,
		:NEW.CD_RSRC_CERT_BY,
		:NEW.CD_RSRC_OPER_BY,
		:NEW.CD_RSRC_SETTING,
		:NEW.DT_RSRC_CERT,
		:NEW.DT_RSRC_CLOSE,
		:NEW.CD_RSRC_PAYMENT,
		:NEW.NBR_RSRC_FACIL_CAPACITY,
		:NEW.ID_RSRC_FA_HOME_STAGE,
		:NEW.ID_RSRC_FA_HOME_EVENT,
		:NEW.CD_RSRC_CATEGORY,
		:NEW.CD_RSRC_ETHNICITY,
		:NEW.CD_RSRC_LANGUAGE,
		:NEW.CD_RSRC_MARITAL_STATUS,
		:NEW.CD_RSRC_REGION,
		:NEW.CD_RSRC_RELIGION,
		:NEW.CD_RSRC_RESPITE,
		:NEW.CD_RSRC_RECMND_REOPEN,
		:NEW.CD_RSRC_FA_HOME_TYPE_1,
		:NEW.CD_RSRC_FA_HOME_TYPE_2,
		:NEW.CD_RSRC_FA_HOME_TYPE_3,
		:NEW.CD_RSRC_FA_HOME_TYPE_4,
		:NEW.CD_RSRC_FA_HOME_TYPE_5,
		:NEW.CD_RSRC_FA_HOME_TYPE_6,
		:NEW.CD_RSRC_FA_HOME_TYPE_7,
                :NEW.CD_RSRC_MHMR_COMP_CODE,
		:NEW.CD_RSRC_INVOL_CLOSURE,
		:NEW.CD_RSRC_CLOSURE_RSN,
		:NEW.CD_RSRC_FA_HOME_STATUS,
		:NEW.DT_RSRC_MARRIAGE,
		:NEW.IND_RSRC_CARE_PROV,
		:NEW.IND_RSRC_EMERG_PLACE,
		:NEW.IND_RSRC_INACTIVE,
		:NEW.IND_RSRC_INDIV_STUDY,
		:NEW.IND_RSRC_NONPRS,
		:NEW.NBR_RSRC_INT_CHILDREN,
		:NEW.NBR_RSRC_INT_FE_AGE_MAX,
		:NEW.NBR_RSRC_INT_FE_AGE_MIN,
		:NEW.NBR_RSRC_INT_MA_AGE_MAX,
		:NEW.NBR_RSRC_INT_MA_AGE_MIN,
		:NEW.NBR_RSRC_ANNUAL_INCOME,
		:NEW.NBR_RSRC_FM_AGE_MAX,
		:NEW.NBR_RSRC_FM_AGE_MIN,
		:NEW.NBR_RSRC_MA_AGE_MAX,
		:NEW.NBR_RSRC_MA_AGE_MIN,
		:NEW.NBR_RSRC_PHONE_EXT,
		:NEW.NBR_RSRC_VID,
                :NEW.NBR_RSRC_OPEN_SLOTS,
		:NEW.CD_RSRC_SOURCE_INQUIRY,
		:NEW.TXT_RSRC_ADDR_CMNTS,
		:NEW.TXT_RSRC_COMMENTS,
                :NEW.DT_CCL_UPDATE,
		:NEW.CD_RSRC_MHMR_SITE,
		:NEW.IND_RSRC_CONTRACTED,
		:NEW.NM_LEGAL,
		:NEW.CD_CERTIFY_ENTITY,
		:NEW.NM_RSRC_CONTACT_TITLE,
		:NEW.NBR_RSRC_NTNL_PROVIDER,
		:NEW.ADDR_RSRC_EMAIL,
		:NEW.ADDR_RSRC_WEBSITE,
		:NEW.CD_SCHOOL_TYPE,
		:NEW.CD_PAYMENT_DELIVERY,
		:NEW.TXT_SPEC_CERT,
		:NEW.CD_EXCHANGE_STAT,
		:NEW.IND_WAIVER,
		:NEW.CD_SCH_DIST,
		:NEW.CD_ELEM,
		:NEW.CD_MIDDLE,
		:NEW.CD_HIGH,
		:NEW.DT_FOST_MANUAL,
		:NEW.DT_FOST_BILL,
		:NEW.IND_SPECIFIC_CHILD,
		:NEW.DT_LIC_BEGIN,
		:NEW.DT_LIC_END,
		:NEW.TXT_CLOSURE_COMM);
END IF;


END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_CAPS_RESOURCE
BEFORE INSERT
ON CAPS.CAPS_RESOURCE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
	dummy2		NUMBER;

-- Similar to those triggers of table PERSON
-- Mike Bui 12-JUL-95

BEGIN

-- 05/26/2001 MITSCHCG Added for CLASS project SIR #15684

IF :NEW.CD_RSRC_FACIL_TYPE = '70' THEN
  :NEW.DT_CCL_UPDATE := SYSDATE;
END IF;
--
  :NEW.DT_LAST_UPDATE := SYSDATE;
  :NEW.NM_RSRC_NAME_INDEX := SUBSTR(:NEW.NM_RESOURCE,0,2);
  IF :NEW.ID_RESOURCE=0 THEN
	SELECT SEQ_CAPS_RESOURCE.NEXTVAL INTO dummy  FROM DUAL;
	:NEW.ID_RESOURCE := dummy;
  END IF;

	BEGIN
		SELECT	ID_CASE
		INTO		:NEW.ID_CASE
		FROM		STAGE
		WHERE		ID_STAGE = :NEW.ID_RSRC_FA_HOME_STAGE;
	EXCEPTION
		WHEN OTHERS THEN
			IF SQL%NOTFOUND THEN
				:NEW.ID_CASE := NULL;
			END IF;
	END;

  --insert into table RESOURCE_HISTORY if field :new.IND_RSRC_WRITE_HIST is 'Y':
   IF NVL(:NEW.IND_RSRC_WRITE_HIST,'N') = 'Y' THEN

	-- Get next sequence value:
	SELECT SEQ_RESOURCE_HISTORY.NEXTVAL INTO dummy2 FROM DUAL;

	INSERT INTO RESOURCE_HISTORY (
		ID_RESOURCE_HISTORY,
		DT_RSHS_EFFECTIVE,
		DT_RSHS_END,
		ID_RESOURCE,
		DT_LAST_UPDATE,
		ID_CASE,
		ADDR_RSHS_ST_LN_1,
		ADDR_RSHS_ST_LN_2,
		ADDR_RSHS_CITY,
		ADDR_RSHS_ATTN,
		CD_RSHS_STATE,
		ADDR_RSHS_ZIP,
		CD_RSHS_CNTY,
		NM_RSHS_RESOURCE,
		NM_RSHS_CONTACT,
		CD_RSHS_TYPE,
		CD_RSHS_HUB,
		CD_RSHS_CAMPUS_TYPE,
		NBR_RSHS_PHN,
		NBR_RSHS_CAMPUS_NBR,
		CD_RSHS_MAINTAINER,
		CD_RSHS_SCH_DIST,
		CD_RSHS_OWNERSHIP,
		CD_RSHS_STATUS,
		NM_RSHS_LAST_UPDATE,
		IND_RSHS_TRANSPORT,
		CD_RSHS_FACIL_TYPE,
		NBR_RSHS_FACIL_ACCLAIM,
		CD_RSHS_CERT_BY,
		CD_RSHS_OPER_BY,
		CD_RSHS_SETTING,
		DT_RSHS_CERT,
		DT_RSHS_CLOSE,
		CD_RSHS_PAYMENT,
		NBR_RSHS_FACIL_CAPACITY,
		ID_RSHS_FA_HOME_STAGE,
		ID_RSHS_FA_HOME_EVENT,
		CD_RSHS_CATEGORY,
		CD_RSHS_ETHNICITY,
		CD_RSHS_LANGUAGE,
		CD_RSHS_MARITAL_STATUS,
		CD_RSHS_REGION,
		CD_RSHS_RELIGION,
		CD_RSHS_RESPITE,
		CD_RSHS_RECMND_REOPEN,
		CD_RSHS_FA_HOME_TYPE1,
		CD_RSHS_FA_HOME_TYPE2,
		CD_RSHS_FA_HOME_TYPE3,
		CD_RSHS_FA_HOME_TYPE4,
		CD_RSHS_FA_HOME_TYPE5,
		CD_RSHS_FA_HOME_TYPE6,
		CD_RSHS_FA_HOME_TYPE7,
                CD_RSHS_MHMR_COMP_CODE,
		CD_RSHS_INVOL_CLOSURE,
		CD_RSHS_CLOSURE_RSN,
		CD_RSHS_FA_HOME_STATUS,
		DT_RSHS_MARRIAGE,
		IND_RSHS_CARE_PROV,
		IND_RSHS_EMERG_PLACE,
		IND_RSHS_INACTIVE,
		IND_RSHS_INDIV_STUDY,
		IND_RSHS_NONPRS,
		NBR_RSHS_INT_CHILDREN,
		NBR_RSHS_INT_FE_AGE_MAX,
		NBR_RSHS_INT_FE_AGE_MIN,
		NBR_RSHS_INT_MA_AGE_MAX,
		NBR_RSHS_INT_MA_AGE_MIN,
		NBR_RSHS_ANNUAL_INCOME,
		NBR_RSHS_FM_AGE_MAX,
		NBR_RSHS_FM_AGE_MIN,
		NBR_RSHS_MA_AGE_MAX,
		NBR_RSHS_MA_AGE_MIN,
		NBR_RSHS_PHONE_EXT,
		NBR_RSHS_VID,
                NBR_RSHS_OPEN_SLOTS,
		CD_RSHS_SOURCE_INQUIRY,
		TXT_RSHS_ADDR_CMNTS,
		TXT_RSHS_COMMENTS,
		DT_CCL_UPDATE,
		CD_RSRC_MHMR_SITE,
		IND_RSRC_CONTRACTED,
		NM_LEGAL,
		CD_CERTIFY_ENTITY,
		NM_RSRC_CONTACT_TITLE,
		NBR_RSRC_NTNL_PROVIDER,
		ADDR_RSRC_EMAIL,
		ADDR_RSRC_WEBSITE,
		CD_SCHOOL_TYPE,
		CD_PAYMENT_DELIVERY,
		TXT_SPEC_CERT,
		CD_EXCHANGE_STAT,
		IND_WAIVER,
		CD_SCH_DIST,
		CD_ELEM,
		CD_MIDDLE,
		CD_HIGH,
		DT_FOST_MANUAL,
		DT_FOST_BILL,
		IND_SPECIFIC_CHILD,
		DT_LIC_BEGIN,
		DT_LIC_END,
		TXT_CLOSURE_COMM)
 VALUES (
		dummy2,
		:NEW.DT_LAST_UPDATE,
		NULL,
		:NEW.ID_RESOURCE,
		SYSDATE,
		:NEW.ID_CASE,
		:NEW.ADDR_RSRC_ST_LN_1,
		:NEW.ADDR_RSRC_ST_LN_2,
		:NEW.ADDR_RSRC_CITY,
		:NEW.ADDR_RSRC_ATTN,
		:NEW.CD_RSRC_STATE,
		:NEW.ADDR_RSRC_ZIP,
		:NEW.CD_RSRC_CNTY,
		:NEW.NM_RESOURCE,
		:NEW.NM_RSRC_CONTACT,
		:NEW.CD_RSRC_TYPE,
		:NEW.CD_RSRC_HUB,
		:NEW.CD_RSRC_CAMPUS_TYPE,
		:NEW.NBR_RSRC_PHN,
		:NEW.NBR_RSRC_CAMPUS_NBR,
		:NEW.CD_RSRC_MAINTAINER,
		:NEW.CD_RSRC_SCH_DIST,
		:NEW.CD_RSRC_OWNERSHIP,
		:NEW.CD_RSRC_STATUS,
		:NEW.NM_RSRC_LAST_UPDATE,
		:NEW.IND_RSRC_TRANSPORT,
		:NEW.CD_RSRC_FACIL_TYPE,
		:NEW.NBR_RSRC_FACIL_ACCLAIM,
		:NEW.CD_RSRC_CERT_BY,
		:NEW.CD_RSRC_OPER_BY,
		:NEW.CD_RSRC_SETTING,
		:NEW.DT_RSRC_CERT,
		:NEW.DT_RSRC_CLOSE,
		:NEW.CD_RSRC_PAYMENT,
		:NEW.NBR_RSRC_FACIL_CAPACITY,
		:NEW.ID_RSRC_FA_HOME_STAGE,
		:NEW.ID_RSRC_FA_HOME_EVENT,
		:NEW.CD_RSRC_CATEGORY,
		:NEW.CD_RSRC_ETHNICITY,
		:NEW.CD_RSRC_LANGUAGE,
		:NEW.CD_RSRC_MARITAL_STATUS,
		:NEW.CD_RSRC_REGION,
		:NEW.CD_RSRC_RELIGION,
		:NEW.CD_RSRC_RESPITE,
		:NEW.CD_RSRC_RECMND_REOPEN,
		:NEW.CD_RSRC_FA_HOME_TYPE_1,
		:NEW.CD_RSRC_FA_HOME_TYPE_2,
		:NEW.CD_RSRC_FA_HOME_TYPE_3,
		:NEW.CD_RSRC_FA_HOME_TYPE_4,
		:NEW.CD_RSRC_FA_HOME_TYPE_5,
		:NEW.CD_RSRC_FA_HOME_TYPE_6,
		:NEW.CD_RSRC_FA_HOME_TYPE_7,
                :NEW.CD_RSRC_MHMR_COMP_CODE,
		:NEW.CD_RSRC_INVOL_CLOSURE,
		:NEW.CD_RSRC_CLOSURE_RSN,
		:NEW.CD_RSRC_FA_HOME_STATUS,
		:NEW.DT_RSRC_MARRIAGE,
		:NEW.IND_RSRC_CARE_PROV,
		:NEW.IND_RSRC_EMERG_PLACE,
		:NEW.IND_RSRC_INACTIVE,
		:NEW.IND_RSRC_INDIV_STUDY,
		:NEW.IND_RSRC_NONPRS,
		:NEW.NBR_RSRC_INT_CHILDREN,
		:NEW.NBR_RSRC_INT_FE_AGE_MAX,
		:NEW.NBR_RSRC_INT_FE_AGE_MIN,
		:NEW.NBR_RSRC_INT_MA_AGE_MAX,
		:NEW.NBR_RSRC_INT_MA_AGE_MIN,
		:NEW.NBR_RSRC_ANNUAL_INCOME,
		:NEW.NBR_RSRC_FM_AGE_MAX,
		:NEW.NBR_RSRC_FM_AGE_MIN,
		:NEW.NBR_RSRC_MA_AGE_MAX,
		:NEW.NBR_RSRC_MA_AGE_MIN,
		:NEW.NBR_RSRC_PHONE_EXT,
		:NEW.NBR_RSRC_VID,
                :NEW.NBR_RSRC_OPEN_SLOTS,
		:NEW.CD_RSRC_SOURCE_INQUIRY,
		:NEW.TXT_RSRC_ADDR_CMNTS,
		:NEW.TXT_RSRC_COMMENTS,
		:NEW.DT_CCL_UPDATE,
		:NEW.CD_RSRC_MHMR_SITE,
		:NEW.IND_RSRC_CONTRACTED,
		:NEW.NM_LEGAL,
		:New.CD_CERTIFY_ENTITY,
		:New.NM_RSRC_CONTACT_TITLE,
		:New.NBR_RSRC_NTNL_PROVIDER,
		:New.ADDR_RSRC_EMAIL,
		:New.ADDR_RSRC_WEBSITE,
		:New.CD_SCHOOL_TYPE,
		:New.CD_PAYMENT_DELIVERY,
		:New.TXT_SPEC_CERT,
		:New.CD_EXCHANGE_STAT,
		:New.IND_WAIVER,
		:New.CD_SCH_DIST,
		:New.CD_ELEM,
		:New.CD_MIDDLE,
		:New.CD_HIGH,
		:New.DT_FOST_MANUAL,
		:New.DT_FOST_BILL,
		:New.IND_SPECIFIC_CHILD,
		:New.DT_LIC_BEGIN,
		:New.DT_LIC_END,
		:New.TXT_CLOSURE_COMM);

   END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_CONTRACT
BEFORE UPDATE
ON CAPS.CONTRACT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	insert into contract_audit (
		ID_AUD_CONTRACT,
		ID_CNTRCT_AUD_WKR,
		ID_CNTRCT_AUD_MANAGER,
		ID_AUD_RESOURCE,
		ID_RSRC_AUD_ADDRESS,
		CD_CNTRCT_AUD_FUNC_TYPE,
		CD_CNTRCT_AUD_PROGRAM_TYPE,
		CD_CNTRCT_AUD_PROCURE_TYPE,
		CD_CNTRCT_AUD_REGION,
		IND_CNTRCT_AUD_BUDG_LIMIT,
		IND_CNTRCTD_RSRC
	) values (
		:new.ID_CONTRACT,
		:new.ID_CNTRCT_WKR,
		:new.ID_CNTRCT_MANAGER,
		:new.ID_RESOURCE,
		:new.ID_RSRC_ADDRESS,
		:new.CD_CNTRCT_FUNC_TYPE,
		:new.CD_CNTRCT_PROGRAM_TYPE,
		:new.CD_CNTRCT_PROCURE_TYPE,
		:new.CD_CNTRCT_REGION,
		:new.IND_CNTRCT_BUDG_LIMIT,
		:new.IND_CNTRCTD_RSRC
	);
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_CONTRACT
BEFORE INSERT
ON CAPS.CONTRACT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_CONTRACT = 0) THEN
		SELECT	SEQ_CONTRACT.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_CONTRACT := dummy;
	END IF;
	insert into contract_audit (
		ID_AUD_CONTRACT,
		ID_CNTRCT_AUD_WKR,
		ID_CNTRCT_AUD_MANAGER,
		ID_AUD_RESOURCE,
		ID_RSRC_AUD_ADDRESS,
		CD_CNTRCT_AUD_FUNC_TYPE,
		CD_CNTRCT_AUD_PROGRAM_TYPE,
		CD_CNTRCT_AUD_PROCURE_TYPE,
		CD_CNTRCT_AUD_REGION,
		IND_CNTRCT_AUD_BUDG_LIMIT,
		IND_CNTRCTD_RSRC
	) values (
		:new.ID_CONTRACT,
		:new.ID_CNTRCT_WKR,
		:new.ID_CNTRCT_MANAGER,
		:new.ID_RESOURCE,
		:new.ID_RSRC_ADDRESS,
		:new.CD_CNTRCT_FUNC_TYPE,
		:new.CD_CNTRCT_PROGRAM_TYPE,
		:new.CD_CNTRCT_PROCURE_TYPE,
		:new.CD_CNTRCT_REGION,
		:new.IND_CNTRCT_BUDG_LIMIT,
		:new.IND_CNTRCTD_RSRC
	);
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_CONTRACT_PERIOD
BEFORE UPDATE
ON CAPS.CONTRACT_PERIOD
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	INSERT INTO CONTRACT_PERIOD_AUDIT (
		ID_AUD_CONTRACT,
		ID_AUD_CNTRCT_WKR,
		NBR_CNPER_AUD_PERIOD,
		CD_CNPER_AUD_STATUS,
		DT_CNPER_AUD_START,
		DT_CNPER_AUD_TERM,
		DT_CNPER_AUD_CLOSURE,
		IND_CNPER_AUD_RENEWAL,
		IND_CNPER_AUD_SIGNED,
		TXT_TERM_COMM
	) VALUES (
		:new.ID_CONTRACT,
		:new.ID_CNTRCT_WKR,
		:new.NBR_CNPER_PERIOD,
		:new.CD_CNPER_STATUS,
		:new.DT_CNPER_START,
		:new.DT_CNPER_TERM,
		:new.DT_CNPER_CLOSURE,
		:new.IND_CNPER_RENEWAL,
		:new.IND_CNPER_SIGNED,
		:new.TXT_TERM_COMM
	);
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_CONTRACT_PERIOD
BEFORE INSERT
ON CAPS.CONTRACT_PERIOD
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	INSERT INTO CONTRACT_PERIOD_AUDIT (
		ID_AUD_CONTRACT,
		ID_AUD_CNTRCT_WKR,
		NBR_CNPER_AUD_PERIOD,
		CD_CNPER_AUD_STATUS,
		DT_CNPER_AUD_START,
		DT_CNPER_AUD_TERM,
		DT_CNPER_AUD_CLOSURE,
		IND_CNPER_AUD_RENEWAL,
		IND_CNPER_AUD_SIGNED,
		TXT_TERM_COMM
	) VALUES (
		:new.ID_CONTRACT,
		:new.ID_CNTRCT_WKR,
		:new.NBR_CNPER_PERIOD,
		:new.CD_CNPER_STATUS,
		:new.DT_CNPER_START,
		:new.DT_CNPER_TERM,
		:new.DT_CNPER_CLOSURE,
		:new.IND_CNPER_RENEWAL,
		:new.IND_CNPER_SIGNED,
		:new.TXT_TERM_COMM
	);
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TDBR_EVENT_PERSON_LINK
BEFORE DELETE
ON CAPS.EVENT_PERSON_LINK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
DECLARE
    xID_WKLD_PERSON     NUMBER;
    xID_WKLD_CASE       NUMBER;
BEGIN

    IF :OLD.ID_CASE IS NOT NULL THEN
        BEGIN
        SELECT ID_WKLD_PERSON, ID_WKLD_CASE
        INTO xID_WKLD_PERSON, xID_WKLD_CASE
        FROM WORKLOAD
        WHERE ID_WKLD_CASE = :OLD.ID_CASE
        AND CD_WKLD_STAGE IN ('INV','SVC')
        AND CD_WKLD_STAGE_PERS_ROLE = 'PR'
        AND CD_WKLD_STAGE_PROGRAM = 'APS';

        EXCEPTION
        WHEN OTHERS  THEN
                NULL;
        END;

        --
        -- Only INSERT if program is APS, PR role and CD_WKLD_STAGE IN ('INV','SVC')
        --
        IF (xID_WKLD_PERSON IS NOT NULL AND xID_WKLD_CASE IS NOT NULL) THEN
                INSERT INTO DELETE_EPL_HIST
                (
                ID_EVENT_PERS_LINK,
                DT_LAST_UPDATE,
                ID_PERSON,
                ID_EVENT,
                ID_CASE,
                CD_FAM_PLAN_PERM_GOAL,
                DT_FAM_PLAN_PERM_GOAL_TARGET,
                IND_CAREGIVER
                )
                VALUES
                (
                :OLD.ID_EVENT_PERS_LINK,
                :OLD.DT_LAST_UPDATE,
                :OLD.ID_PERSON,
                :OLD.ID_EVENT,
                :OLD.ID_CASE,
                :OLD.CD_FAM_PLAN_PERM_GOAL,
                :OLD.DT_FAM_PLAN_PERM_GOAL_TARGET,
                :OLD.IND_CAREGIVER
                );
        END IF;
    END IF;
END;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_RESOURCE_HISTORY
BEFORE UPDATE
ON CAPS.RESOURCE_HISTORY
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:NEW.DT_LAST_UPDATE := SYSDATE;

	IF :NEW.DT_RSHS_END IS NULL THEN
		:NEW.DT_RSHS_END := TO_DATE('12/31/4712','MM/DD/YYYY');
	END IF;

	INSERT INTO RESOURCE_HISTORY_AUDIT (
		ID_RESOURCE_HISTORY_AUD,
		ID_AUD_RESOURCE,
		DT_RSHS_AUD_EFFECTIVE,
		DT_RSHS_AUD_CLOSE,
		DT_LAST_UPDATE,
		ID_CASE,
		DT_RSHS_AUD_CERT,
		DT_RSHS_AUD_MARRIAGE,
		DT_RSHS_AUD_END,
		ADDR_RSHS_AUD_ST_LN_1,
		ADDR_RSHS_AUD_ST_LN_2,
		ADDR_RSHS_AUD_CITY,
		CD_RSHS_AUD_STATE,
		ADDR_RSHS_AUD_ZIP,
		ADDR_RSHS_AUD_ATTN,
		CD_RSHS_AUD_CNTY,
		CD_RSHS_AUD_INVOL_CLOSURE,
		CD_RSHS_AUD_CLOSURE_RSN,
		CD_RSHS_AUD_TYPE,
		CD_RSHS_AUD_HUB,
		CD_RSHS_AUD_CAMPUS_TYPE,
		CD_RSHS_AUD_SOURCE_INQUIRY,
		CD_RSHS_AUD_MAINTAINER,
		CD_RSHS_AUD_SCH_DIST,
		CD_RSHS_AUD_OWNERSHIP,
		CD_RSHS_AUD_STATUS,
		CD_RSHS_AUD_FACIL_TYPE,
		CD_RSHS_AUD_CERT_BY,
		CD_RSHS_AUD_OPER_BY,
		CD_RSHS_AUD_SETTING,
		CD_RSHS_AUD_PAYMENT,
		CD_RSHS_AUD_CATEGORY,
		CD_RSHS_AUD_ETHNICITY,
		CD_RSHS_AUD_LANGUAGE,
		CD_RSHS_AUD_MARITAL_STATUS,
		CD_RSHS_AUD_RECMND_REOPEN,
		CD_RSHS_AUD_REGION,
		CD_RSHS_AUD_RELIGION,
		CD_RSHS_AUD_RESPITE,
		CD_RSHS_AUD_FA_HOME_STATUS,
		CD_RSHS_AUD_FA_HOME_TYPE1,
		CD_RSHS_AUD_FA_HOME_TYPE2,
		CD_RSHS_AUD_FA_HOME_TYPE3,
		CD_RSHS_AUD_FA_HOME_TYPE4,
		CD_RSHS_AUD_FA_HOME_TYPE5,
		CD_RSHS_AUD_FA_HOME_TYPE6,
		CD_RSHS_AUD_FA_HOME_TYPE7,
                CD_RSHS_AUD_MHMR_COMP_CODE,
		ID_RSHS_AUD_FA_HOME_STAGE,
		ID_RSHS_AUD_FA_HOME_EVENT,
		IND_RSHS_AUD_CARE_PROV,
		IND_RSHS_AUD_INACTIVE,
		IND_RSHS_AUD_TRANSPORT,
		IND_RSHS_AUD_INDIV_STUDY,
		IND_RSHS_AUD_NONPRS,
		IND_RSHS_AUD_EMERG_PLACE,
		NM_RSHS_AUD_RESOURCE,
		NM_RSHS_AUD_CONTACT,
		NM_RSHS_AUD_LAST_UPDATE,
		NBR_RSHS_AUD_VID,
		NBR_RSHS_AUD_PHN,
		NBR_RSHS_AUD_FACIL_CAPACITY,
		NBR_RSHS_AUD_FACIL_ACCLAIM,
		NBR_RSHS_AUD_PHONE_EXT,
		NBR_RSHS_AUD_CAMPUS_NBR,
		NBR_RSHS_AUD_ANNUAL_INCOME,
		NBR_RSHS_AUD_FM_AGE_MAX,
		NBR_RSHS_AUD_FM_AGE_MIN,
		NBR_RSHS_AUD_MA_AGE_MAX,
		NBR_RSHS_AUD_MA_AGE_MIN,
		NBR_RSHS_AUD_INT_CHILDREN,
		NBR_RSHS_AUD_INT_FE_AGE_MAX ,
		NBR_RSHS_AUD_INT_FE_AGE_MIN,
		NBR_RSHS_AUD_INT_MA_AGE_MAX,
		NBR_RSHS_AUD_INT_MA_AGE_MIN,
		NBR_RSHS_AUD_OPEN_SLOTS,
		TXT_RSHS_AUD_ADDR_CMNTS,
		TXT_RSHS_AUD_COMMENTS,
		IND_RSHS_AUD_WRITE_AUDIT,
		DT_CCL_UPDATE,
		CD_RSRC_MHMR_SITE,
		IND_RSRC_CONTRACTED,
		NM_LEGAL,
		CD_CERTIFY_ENTITY,
		NM_RSRC_CONTACT_TITLE,
		NBR_RSRC_NTNL_PROVIDER,
		ADDR_RSRC_EMAIL,
		ADDR_RSRC_WEBSITE,
		CD_SCHOOL_TYPE,
		CD_PAYMENT_DELIVERY,
		TXT_SPEC_CERT,
		CD_EXCHANGE_STAT,
		IND_WAIVER,
		CD_SCH_DIST,
		CD_ELEM,
		CD_MIDDLE,
		CD_HIGH,
		DT_FOST_MANUAL,
		DT_FOST_BILL,
		IND_SPECIFIC_CHILD,
		DT_LIC_BEGIN,
		DT_LIC_END,
		TXT_CLOSURE_COMM
	) VALUES (
		:NEW.ID_RESOURCE_HISTORY,
		:NEW.ID_RESOURCE,
		:NEW.DT_RSHS_EFFECTIVE,
		:NEW.DT_RSHS_CLOSE,
		:NEW.DT_LAST_UPDATE,
		:NEW.ID_CASE,
		:NEW.DT_RSHS_CERT,
		:NEW.DT_RSHS_MARRIAGE,
		:NEW.DT_RSHS_END,
		:NEW.ADDR_RSHS_ST_LN_1,
		:NEW.ADDR_RSHS_ST_LN_2,
		:NEW.ADDR_RSHS_CITY,
		:NEW.CD_RSHS_STATE,
		:NEW.ADDR_RSHS_ZIP,
		:NEW.ADDR_RSHS_ATTN,
		:NEW.CD_RSHS_CNTY,
		:NEW.CD_RSHS_INVOL_CLOSURE,
		:NEW.CD_RSHS_CLOSURE_RSN,
		:NEW.CD_RSHS_TYPE,
		:NEW.CD_RSHS_HUB,
		:NEW.CD_RSHS_CAMPUS_TYPE,
		:NEW.CD_RSHS_SOURCE_INQUIRY,
		:NEW.CD_RSHS_MAINTAINER,
		:NEW.CD_RSHS_SCH_DIST,
		:NEW.CD_RSHS_OWNERSHIP,
		:NEW.CD_RSHS_STATUS,
		:NEW.CD_RSHS_FACIL_TYPE,
		:NEW.CD_RSHS_CERT_BY,
		:NEW.CD_RSHS_OPER_BY,
		:NEW.CD_RSHS_SETTING,
		:NEW.CD_RSHS_PAYMENT,
		:NEW.CD_RSHS_CATEGORY,
		:NEW.CD_RSHS_ETHNICITY,
		:NEW.CD_RSHS_LANGUAGE,
		:NEW.CD_RSHS_MARITAL_STATUS,
		:NEW.CD_RSHS_RECMND_REOPEN,
		:NEW.CD_RSHS_REGION,
		:NEW.CD_RSHS_RELIGION,
		:NEW.CD_RSHS_RESPITE,
		:NEW.CD_RSHS_FA_HOME_STATUS,
		:NEW.CD_RSHS_FA_HOME_TYPE1,
		:NEW.CD_RSHS_FA_HOME_TYPE2,
		:NEW.CD_RSHS_FA_HOME_TYPE3,
		:NEW.CD_RSHS_FA_HOME_TYPE4,
		:NEW.CD_RSHS_FA_HOME_TYPE5,
		:NEW.CD_RSHS_FA_HOME_TYPE6,
		:NEW.CD_RSHS_FA_HOME_TYPE7,
                :NEW.CD_RSHS_MHMR_COMP_CODE,
		:NEW.ID_RSHS_FA_HOME_STAGE,
		:NEW.ID_RSHS_FA_HOME_EVENT,
		:NEW.IND_RSHS_CARE_PROV,
		:NEW.IND_RSHS_INACTIVE,
		:NEW.IND_RSHS_TRANSPORT,
		:NEW.IND_RSHS_INDIV_STUDY,
		:NEW.IND_RSHS_NONPRS,
		:NEW.IND_RSHS_EMERG_PLACE,
		:NEW.NM_RSHS_RESOURCE,
		:NEW.NM_RSHS_CONTACT,
		:NEW.NM_RSHS_LAST_UPDATE,
		:NEW.NBR_RSHS_VID,
		:NEW.NBR_RSHS_PHN,
		:NEW.NBR_RSHS_FACIL_CAPACITY,
		:NEW.NBR_RSHS_FACIL_ACCLAIM,
		:NEW.NBR_RSHS_PHONE_EXT,
		:NEW.NBR_RSHS_CAMPUS_NBR,
		:NEW.NBR_RSHS_ANNUAL_INCOME,
		:NEW.NBR_RSHS_FM_AGE_MAX,
		:NEW.NBR_RSHS_FM_AGE_MIN,
		:NEW.NBR_RSHS_MA_AGE_MAX,
		:NEW.NBR_RSHS_MA_AGE_MIN,
		:NEW.NBR_RSHS_INT_CHILDREN,
		:NEW.NBR_RSHS_INT_FE_AGE_MAX,
		:NEW.NBR_RSHS_INT_FE_AGE_MIN,
		:NEW.NBR_RSHS_INT_MA_AGE_MAX,
		:NEW.NBR_RSHS_INT_MA_AGE_MIN,
		:NEW.NBR_RSHS_OPEN_SLOTS,
		:NEW.TXT_RSHS_ADDR_CMNTS,
		:NEW.TXT_RSHS_COMMENTS,
		:NEW.IND_RSHS_WRITE_AUDIT,
		:NEW.DT_CCL_UPDATE,
		:NEW.CD_RSRC_MHMR_SITE,
		:NEW.IND_RSRC_CONTRACTED,
		:NEW.NM_LEGAL,
		:NEW.CD_CERTIFY_ENTITY,
		:NEW.NM_RSRC_CONTACT_TITLE,
		:NEW.NBR_RSRC_NTNL_PROVIDER,
		:NEW.ADDR_RSRC_EMAIL,
		:NEW.ADDR_RSRC_WEBSITE,
		:NEW.CD_SCHOOL_TYPE,
		:NEW.CD_PAYMENT_DELIVERY,
		:NEW.TXT_SPEC_CERT,
		:NEW.CD_EXCHANGE_STAT,
		:NEW.IND_WAIVER,
		:NEW.CD_SCH_DIST,
		:NEW.CD_ELEM,
		:NEW.CD_MIDDLE,
		:NEW.CD_HIGH,
		:NEW.DT_FOST_MANUAL,
		:NEW.DT_FOST_BILL,
		:NEW.IND_SPECIFIC_CHILD,
		:NEW.DT_LIC_BEGIN,
		:NEW.DT_LIC_END,
		:NEW.TXT_CLOSURE_COMM
	);
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_RESOURCE_HISTORY
BEFORE INSERT
ON CAPS.RESOURCE_HISTORY
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
	dummy2		NUMBER;
	dummy_date	DATE;

BEGIN

-- 05/26/2001 MITSCHCG Added column DT_CCL_UPDATE for CLASS project SIR #15684

	:NEW.DT_LAST_UPDATE := SYSDATE;

	IF (:NEW.ID_RESOURCE_HISTORY = 0) OR
	     (:NEW.ID_RESOURCE_HISTORY IS NULL) THEN
		SELECT	SEQ_RESOURCE_HISTORY.NEXTVAL
		INTO		dummy
		FROM		DUAL;
		:NEW.ID_RESOURCE_HISTORY := dummy;
	END IF;

	IF :NEW.DT_RSHS_END IS NULL THEN
		:NEW.DT_RSHS_END := TO_DATE('12/31/4712','MM/DD/YYYY');
	END IF;

	IF :NEW.ID_CASE  IS NULL THEN
		BEGIN
			SELECT	ID_CASE
			INTO		:NEW.ID_CASE
			FROM		STAGE
			WHERE		ID_STAGE = :NEW.ID_RSHS_FA_HOME_STAGE;
		EXCEPTION
			WHEN OTHERS THEN
				IF SQL%NOTFOUND THEN
					:NEW.ID_CASE := NULL;
				END IF;
		END;
	END IF;

	INSERT INTO RESOURCE_HISTORY_AUDIT (
		ID_RESOURCE_HISTORY_AUD,
		ID_AUD_RESOURCE,
		DT_RSHS_AUD_EFFECTIVE,
		DT_RSHS_AUD_CLOSE,
		DT_LAST_UPDATE,
		ID_CASE,
		DT_RSHS_AUD_CERT ,
		DT_RSHS_AUD_MARRIAGE,
		DT_RSHS_AUD_END,
		ADDR_RSHS_AUD_ST_LN_1,
		ADDR_RSHS_AUD_ST_LN_2,
		ADDR_RSHS_AUD_CITY,
		CD_RSHS_AUD_STATE,
		ADDR_RSHS_AUD_ZIP,
		ADDR_RSHS_AUD_ATTN,
		CD_RSHS_AUD_CNTY,
		CD_RSHS_AUD_INVOL_CLOSURE,
		CD_RSHS_AUD_CLOSURE_RSN,
		CD_RSHS_AUD_TYPE,
		CD_RSHS_AUD_HUB,
		CD_RSHS_AUD_CAMPUS_TYPE,
		CD_RSHS_AUD_SOURCE_INQUIRY,
		CD_RSHS_AUD_MAINTAINER,
		CD_RSHS_AUD_SCH_DIST,
		CD_RSHS_AUD_OWNERSHIP,
		CD_RSHS_AUD_STATUS,
		CD_RSHS_AUD_FACIL_TYPE,
		CD_RSHS_AUD_CERT_BY,
		CD_RSHS_AUD_OPER_BY,
		CD_RSHS_AUD_SETTING,
		CD_RSHS_AUD_PAYMENT,
		CD_RSHS_AUD_CATEGORY,
		CD_RSHS_AUD_ETHNICITY,
		CD_RSHS_AUD_LANGUAGE,
		CD_RSHS_AUD_MARITAL_STATUS,
		CD_RSHS_AUD_RECMND_REOPEN,
		CD_RSHS_AUD_REGION,
		CD_RSHS_AUD_RELIGION,
		CD_RSHS_AUD_RESPITE,
		CD_RSHS_AUD_FA_HOME_STATUS,
		CD_RSHS_AUD_FA_HOME_TYPE1   ,
		CD_RSHS_AUD_FA_HOME_TYPE2,
		CD_RSHS_AUD_FA_HOME_TYPE3,
		CD_RSHS_AUD_FA_HOME_TYPE4   ,
		CD_RSHS_AUD_FA_HOME_TYPE5,
		CD_RSHS_AUD_FA_HOME_TYPE6,
		CD_RSHS_AUD_FA_HOME_TYPE7,
                CD_RSHS_AUD_MHMR_COMP_CODE,
		ID_RSHS_AUD_FA_HOME_STAGE,
		ID_RSHS_AUD_FA_HOME_EVENT,
		IND_RSHS_AUD_CARE_PROV,
		IND_RSHS_AUD_INACTIVE,
		IND_RSHS_AUD_TRANSPORT,
		IND_RSHS_AUD_INDIV_STUDY,
		IND_RSHS_AUD_NONPRS,
		IND_RSHS_AUD_EMERG_PLACE,
		NM_RSHS_AUD_RESOURCE,
		NM_RSHS_AUD_CONTACT,
		NM_RSHS_AUD_LAST_UPDATE,
		NBR_RSHS_AUD_VID,
		NBR_RSHS_AUD_PHN,
		NBR_RSHS_AUD_FACIL_CAPACITY,
		NBR_RSHS_AUD_FACIL_ACCLAIM,
		NBR_RSHS_AUD_PHONE_EXT,
		NBR_RSHS_AUD_CAMPUS_NBR,
		NBR_RSHS_AUD_ANNUAL_INCOME,
		NBR_RSHS_AUD_FM_AGE_MAX,
		NBR_RSHS_AUD_FM_AGE_MIN,
		NBR_RSHS_AUD_MA_AGE_MAX,
		NBR_RSHS_AUD_MA_AGE_MIN,
		NBR_RSHS_AUD_INT_CHILDREN,
		NBR_RSHS_AUD_INT_FE_AGE_MAX ,
		NBR_RSHS_AUD_INT_FE_AGE_MIN,
		NBR_RSHS_AUD_INT_MA_AGE_MAX,
		NBR_RSHS_AUD_INT_MA_AGE_MIN,
		NBR_RSHS_AUD_OPEN_SLOTS,
		TXT_RSHS_AUD_ADDR_CMNTS,
		TXT_RSHS_AUD_COMMENTS,
		IND_RSHS_AUD_WRITE_AUDIT,
		DT_CCL_UPDATE,
		CD_RSRC_MHMR_SITE,
		IND_RSRC_CONTRACTED,
		NM_LEGAL,
		CD_CERTIFY_ENTITY,
		NM_RSRC_CONTACT_TITLE,
		NBR_RSRC_NTNL_PROVIDER,
		ADDR_RSRC_EMAIL,
		ADDR_RSRC_WEBSITE,
		CD_SCHOOL_TYPE,
		CD_PAYMENT_DELIVERY,
		TXT_SPEC_CERT,
		CD_EXCHANGE_STAT,
		IND_WAIVER,
		CD_SCH_DIST,
		CD_ELEM,
		CD_MIDDLE,
		CD_HIGH,
		DT_FOST_MANUAL,
		DT_FOST_BILL,
		IND_SPECIFIC_CHILD,
		DT_LIC_BEGIN,
		DT_LIC_END,
		TXT_CLOSURE_COMM
	) VALUES (
		:NEW.ID_RESOURCE_HISTORY,
		:NEW.ID_RESOURCE,
		:NEW.DT_RSHS_EFFECTIVE,
		:NEW.DT_RSHS_CLOSE,
		:NEW.DT_LAST_UPDATE,
		:NEW.ID_CASE,
		:NEW.DT_RSHS_CERT,
		:NEW.DT_RSHS_MARRIAGE,
		:NEW.DT_RSHS_END,
		:NEW.ADDR_RSHS_ST_LN_1,
		:NEW.ADDR_RSHS_ST_LN_2,
		:NEW.ADDR_RSHS_CITY,
		:NEW.CD_RSHS_STATE,
		:NEW.ADDR_RSHS_ZIP,
		:NEW.ADDR_RSHS_ATTN,
		:NEW.CD_RSHS_CNTY,
		:NEW.CD_RSHS_INVOL_CLOSURE,
		:NEW.CD_RSHS_CLOSURE_RSN,
		:NEW.CD_RSHS_TYPE,
		:NEW.CD_RSHS_HUB,
		:NEW.CD_RSHS_CAMPUS_TYPE,
		:NEW.CD_RSHS_SOURCE_INQUIRY,
		:NEW.CD_RSHS_MAINTAINER,
		:NEW.CD_RSHS_SCH_DIST,
		:NEW.CD_RSHS_OWNERSHIP,
		:NEW.CD_RSHS_STATUS,
		:NEW.CD_RSHS_FACIL_TYPE,
		:NEW.CD_RSHS_CERT_BY,
		:NEW.CD_RSHS_OPER_BY,
		:NEW.CD_RSHS_SETTING,
		:NEW.CD_RSHS_PAYMENT,
		:NEW.CD_RSHS_CATEGORY,
		:NEW.CD_RSHS_ETHNICITY,
		:NEW.CD_RSHS_LANGUAGE,
		:NEW.CD_RSHS_MARITAL_STATUS,
		:NEW.CD_RSHS_RECMND_REOPEN,
		:NEW.CD_RSHS_REGION,
		:NEW.CD_RSHS_RELIGION,
		:NEW.CD_RSHS_RESPITE,
		:NEW.CD_RSHS_FA_HOME_STATUS,
		:NEW.CD_RSHS_FA_HOME_TYPE1,
		:NEW.CD_RSHS_FA_HOME_TYPE2,
		:NEW.CD_RSHS_FA_HOME_TYPE3,
		:NEW.CD_RSHS_FA_HOME_TYPE4,
		:NEW.CD_RSHS_FA_HOME_TYPE5,
		:NEW.CD_RSHS_FA_HOME_TYPE6,
		:NEW.CD_RSHS_FA_HOME_TYPE7,
                :NEW.CD_RSHS_MHMR_COMP_CODE,
		:NEW.ID_RSHS_FA_HOME_STAGE,
		:NEW.ID_RSHS_FA_HOME_EVENT,
		:NEW.IND_RSHS_CARE_PROV,
		:NEW.IND_RSHS_INACTIVE,
		:NEW.IND_RSHS_TRANSPORT,
		:NEW.IND_RSHS_INDIV_STUDY,
		:NEW.IND_RSHS_NONPRS,
		:NEW.IND_RSHS_EMERG_PLACE,
		:NEW.NM_RSHS_RESOURCE,
		:NEW.NM_RSHS_CONTACT,
		:NEW.NM_RSHS_LAST_UPDATE,
		:NEW.NBR_RSHS_VID,
		:NEW.NBR_RSHS_PHN,
		:NEW.NBR_RSHS_FACIL_CAPACITY,
		:NEW.NBR_RSHS_FACIL_ACCLAIM,
		:NEW.NBR_RSHS_PHONE_EXT,
		:NEW.NBR_RSHS_CAMPUS_NBR,
		:NEW.NBR_RSHS_ANNUAL_INCOME,
		:NEW.NBR_RSHS_FM_AGE_MAX,
		:NEW.NBR_RSHS_FM_AGE_MIN,
		:NEW.NBR_RSHS_MA_AGE_MAX,
		:NEW.NBR_RSHS_MA_AGE_MIN,
		:NEW.NBR_RSHS_INT_CHILDREN,
		:NEW.NBR_RSHS_INT_FE_AGE_MAX,
		:NEW.NBR_RSHS_INT_FE_AGE_MIN,
		:NEW.NBR_RSHS_INT_MA_AGE_MAX,
		:NEW.NBR_RSHS_INT_MA_AGE_MIN,
		:NEW.NBR_RSHS_OPEN_SLOTS,
		:NEW.TXT_RSHS_ADDR_CMNTS,
		:NEW.TXT_RSHS_COMMENTS,
		:NEW.IND_RSHS_WRITE_AUDIT ,
		:NEW.DT_CCL_UPDATE,
		:NEW.CD_RSRC_MHMR_SITE,
		:NEW.IND_RSRC_CONTRACTED,
		:NEW.NM_LEGAL,
		:NEW.CD_CERTIFY_ENTITY,
		:NEW.NM_RSRC_CONTACT_TITLE,
		:NEW.NBR_RSRC_NTNL_PROVIDER,
		:NEW.ADDR_RSRC_EMAIL,
		:NEW.ADDR_RSRC_WEBSITE,
		:NEW.CD_SCHOOL_TYPE,
		:NEW.CD_PAYMENT_DELIVERY,
		:NEW.TXT_SPEC_CERT,
		:NEW.CD_EXCHANGE_STAT,
		:NEW.IND_WAIVER,
		:NEW.CD_SCH_DIST,
		:NEW.CD_ELEM,
		:NEW.CD_MIDDLE,
		:NEW.CD_HIGH,
		:NEW.DT_FOST_MANUAL,
		:NEW.DT_FOST_BILL,
		:NEW.IND_SPECIFIC_CHILD,
		:NEW.DT_LIC_BEGIN,
		:NEW.DT_LIC_END,
		:NEW.TXT_CLOSURE_COMM
	);
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_ADO_INFO
BEFORE UPDATE
ON CAPS.ADO_INFO
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_ADO_INFO
BEFORE INSERT
ON CAPS.ADO_INFO
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_ADO_INFO_CBX
BEFORE UPDATE
ON CAPS.ADO_INFO_CBX
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_ADO_INFO_CBX
BEFORE INSERT
ON CAPS.ADO_INFO_CBX
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_INFO_CHAR = 0) THEN
		SELECT	SEQ_ADO_INFO_CBX.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_INFO_CHAR := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_ADO_INFO_FAMILY
BEFORE UPDATE
ON CAPS.ADO_INFO_FAMILY
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_ADO_INFO_FAMILY
BEFORE INSERT
ON CAPS.ADO_INFO_FAMILY
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_INFO_FAMILY = 0) THEN
		SELECT	SEQ_ADO_INFO_FAMILY.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_INFO_FAMILY := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_CASE_BUDGET_LIMIT
BEFORE UPDATE
ON CAPS.CASE_BUDGET_LIMIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_CASE_BUDGET_LIMIT
BEFORE INSERT
ON CAPS.CASE_BUDGET_LIMIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_COLLEGE_EXAM
BEFORE UPDATE
ON CAPS.COLLEGE_EXAM
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_COLLEGE_EXAM
BEFORE INSERT
ON CAPS.COLLEGE_EXAM
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_COLLEGE_EXAM = 0) THEN
		SELECT	SEQ_COLLEGE_EXAM.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_COLLEGE_EXAM := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_COUNTY_BUDGET_LIMIT
BEFORE UPDATE
ON CAPS.COUNTY_BUDGET_LIMIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_COUNTY_BUDGET_LIMIT
BEFORE INSERT
ON CAPS.COUNTY_BUDGET_LIMIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_COUNTY_BUDGET_LIMIT = 0) THEN
		SELECT	SEQ_COUNTY_BUDGET_LIMIT.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_COUNTY_BUDGET_LIMIT := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_DILIGENT_SEARCH
BEFORE UPDATE
ON CAPS.DILIGENT_SEARCH
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_DILIGENT_SEARCH
BEFORE INSERT
ON CAPS.DILIGENT_SEARCH
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_DILIGENT_SEARCH = 0) THEN
		SELECT	SEQ_DILIGENT_SEARCH.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_DILIGENT_SEARCH := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_FACILITY_LICENSE_TYPE
BEFORE UPDATE
ON CAPS.FACILITY_LICENSE_TYPE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_FACILITY_LICENSE_TYPE
BEFORE INSERT
ON CAPS.FACILITY_LICENSE_TYPE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_FAC_LIC = 0) THEN
		SELECT	SEQ_FAC_LIC.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_FAC_LIC := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_FAMILY_SERVICE_REFERRAL
BEFORE UPDATE
ON CAPS.FAMILY_SERVICE_REFERRAL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_FAMILY_SERVICE_REFERRAL
BEFORE INSERT
ON CAPS.FAMILY_SERVICE_REFERRAL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_FCCP_CHILD
BEFORE UPDATE
ON CAPS.FCCP_CHILD
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_FCCP_CHILD
BEFORE INSERT
ON CAPS.FCCP_CHILD
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_FCCP_CHILD_CBX
BEFORE UPDATE
ON CAPS.FCCP_CHILD_CBX
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_FCCP_CHILD_CBX
BEFORE INSERT
ON CAPS.FCCP_CHILD_CBX
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_FCCP_CHILD_CBX = 0) THEN
		SELECT	SEQ_FCCP_CHILD_CBX.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_FCCP_CHILD_CBX := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_FCE_EXPENDITURES
BEFORE UPDATE
ON CAPS.FCE_EXPENDITURES
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_FCE_EXPENDITURES
BEFORE INSERT
ON CAPS.FCE_EXPENDITURES
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_FCE_EXPENDITURES = 0) THEN
		SELECT	SEQ_FCE_EXPENDITURES.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_FCE_EXPENDITURES := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_FCE_THIRD_PARTY_INSURANCE
BEFORE UPDATE
ON CAPS.FCE_THIRD_PARTY_INSURANCE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_FCE_THIRD_PARTY_INSURANCE
BEFORE INSERT
ON CAPS.FCE_THIRD_PARTY_INSURANCE
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_HOME_APPLICANT_CBX
BEFORE UPDATE
ON CAPS.HOME_APPLICANT_CBX
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_HOME_APPLICANT_CBX
BEFORE INSERT
ON CAPS.HOME_APPLICANT_CBX
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_HOME_APPLICANT_CBX = 0) THEN
		SELECT	SEQ_HOME_APPLICANT_CBX.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_HOME_APPLICANT_CBX := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_HOME_APPLICANT_INFO
BEFORE UPDATE
ON CAPS.HOME_APPLICANT_INFO
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_HOME_APPLICANT_INFO
BEFORE INSERT
ON CAPS.HOME_APPLICANT_INFO
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_HOME_APPLICANT = 0) THEN
		SELECT	SEQ_HOME_APPLICANT.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_HOME_APPLICANT := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_NEEDS_OUTCOMES
BEFORE UPDATE
ON CAPS.NEEDS_OUTCOMES
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_NEEDS_OUTCOMES
BEFORE INSERT
ON CAPS.NEEDS_OUTCOMES
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_NEEDS_OUTCOMES_DETAIL
BEFORE UPDATE
ON CAPS.NEEDS_OUTCOMES_DETAIL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_NEEDS_OUTCOMES_DETAIL
BEFORE INSERT
ON CAPS.NEEDS_OUTCOMES_DETAIL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_NEEDS_OUTCOMES_DETAIL = 0) THEN
		SELECT	SEQ_NEEDS_OUTCOMES_DETAIL.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_NEEDS_OUTCOMES_DETAIL := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_OUTPUT_LAUNCH_EVENT_LINK
BEFORE UPDATE
ON CAPS.OUTPUT_LAUNCH_EVENT_LINK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_OUTPUT_LAUNCH_EVENT_LINK
BEFORE INSERT
ON CAPS.OUTPUT_LAUNCH_EVENT_LINK
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_PLACEMENT_REFERRAL
BEFORE UPDATE
ON CAPS.PLACEMENT_REFERRAL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_PLACEMENT_REFERRAL
BEFORE INSERT
ON CAPS.PLACEMENT_REFERRAL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_PLACEMENT_REFERRAL = 0) THEN
		SELECT	SEQ_PLACEMENT_REFERRAL.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_PLACEMENT_REFERRAL := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_PLAN_GOAL
BEFORE UPDATE
ON CAPS.PLAN_GOAL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_PLAN_GOAL
BEFORE INSERT
ON CAPS.PLAN_GOAL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_PLAN_GOAL = 0) THEN
		SELECT	SEQ_PLAN_GOAL.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_PLAN_GOAL := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_PLAN_PARTICIPANT
BEFORE UPDATE
ON CAPS.PLAN_PARTICIPANT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_PLAN_PARTICIPANT
BEFORE INSERT
ON CAPS.PLAN_PARTICIPANT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_PLAN_PARTICIPANT = 0) THEN
		SELECT	SEQ_PLAN_PARTICIPANT.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_PLAN_PARTICIPANT := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_PLAN_SEC_GOAL
BEFORE UPDATE
ON CAPS.PLAN_SEC_GOAL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_PLAN_SEC_GOAL
BEFORE INSERT
ON CAPS.PLAN_SEC_GOAL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_PLAN_SEC_GOAL = 0) THEN
		SELECT	SEQ_PLAN_SEC_GOAL.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_PLAN_SEC_GOAL := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_PLAN_STEP
BEFORE UPDATE
ON CAPS.PLAN_STEP
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_PLAN_STEP
BEFORE INSERT
ON CAPS.PLAN_STEP
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_PLAN_STEP = 0) THEN
		SELECT	SEQ_PLAN_STEP.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_PLAN_STEP := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_RESTRICTED_FUNDS
BEFORE UPDATE
ON CAPS.RESTRICTED_FUNDS
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_RESTRICTED_FUNDS
BEFORE INSERT
ON CAPS.RESTRICTED_FUNDS
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_RESTRICTED_FUNDS = 0) THEN
		SELECT	SEQ_RESTRICTED_FUNDS.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_RESTRICTED_FUNDS := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_TCM_CLAIM
BEFORE UPDATE
ON CAPS.TCM_CLAIM
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_TCM_CLAIM
BEFORE INSERT
ON CAPS.TCM_CLAIM
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:new.ID_TCM_CLAIM = 0) THEN
		SELECT	SEQ_TCM_CLAIM.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_TCM_CLAIM := dummy;
	END IF;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_WTLP_DETAIL
BEFORE UPDATE
ON CAPS.WTLP_DETAIL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_WTLP_DETAIL
BEFORE INSERT
ON CAPS.WTLP_DETAIL
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TUBR_WTLP_PLAN
BEFORE UPDATE
ON CAPS.WTLP_PLAN
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/
/
CREATE OR REPLACE TRIGGER CAPS.TIBR_WTLP_PLAN
BEFORE INSERT
ON CAPS.WTLP_PLAN
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END;
/

-- Synonym Alter SQL

{ call dbms_utility.compile_schema('CAPS') };
{ call dbms_utility.compile_schema('CAPSBAT') };
{ call dbms_utility.compile_schema('CAPSON') };
{ call dbms_utility.compile_schema('OPERATOR') };

insert into caps.schema_version (id_schema_version, application_version, comments)
                         values (101, 'SacwisRev2', 'Upgrade Rel 1 Database to Rel 2');

commit;

