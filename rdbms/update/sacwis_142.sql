-- Project :      ShinesInterfaces.DM1
-- Author :       John Ramspott
--
-- Date Created : Tuesday, March 27, 2007 14:04:44
-- Target DBMS : Oracle 10g
--

-- 
-- ROLE: INTERFACE 
--

CREATE ROLE INTERFACE
;

-- 
-- USER: SACWISIFC 
--

CREATE USER SACWISIFC IDENTIFIED BY impact
    DEFAULT TABLESPACE DATA01;


alter user sacwisifc quota unlimited on DATA01;
alter user sacwisifc quota unlimited on INDEX01;

grant connect, resource to sacwisifc;

GRANT INTERFACE TO SACWISIFC
;

-- 
-- SEQUENCE: SACWISIFC.SEQ_CLIENT_OUTBOUND 
--

CREATE SEQUENCE SACWISIFC.SEQ_CLIENT_OUTBOUND
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: SACWISIFC.SEQ_CRS_AUDIT 
--

CREATE SEQUENCE SACWISIFC.SEQ_CRS_AUDIT
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: SACWISIFC.SEQ_INCOME_RESOURCE_OUTBOUND 
--

CREATE SEQUENCE SACWISIFC.SEQ_INCOME_RESOURCE_OUTBOUND
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: SACWISIFC.SEQ_INVOICE_OUTBOUND 
--

CREATE SEQUENCE SACWISIFC.SEQ_INVOICE_OUTBOUND
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: SACWISIFC.SEQ_MEDICAID_COAREQ_OUTBOUND 
--

CREATE SEQUENCE SACWISIFC.SEQ_MEDICAID_COAREQ_OUTBOUND
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: SACWISIFC.SEQ_TCM_CLAIM_OUTBOUND 
--

CREATE SEQUENCE SACWISIFC.SEQ_TCM_CLAIM_OUTBOUND
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- SEQUENCE: SACWISIFC.SEQ_VENDOR_OUTBOUND 
--

CREATE SEQUENCE SACWISIFC.SEQ_VENDOR_OUTBOUND
    START WITH 1
    INCREMENT BY 1
    NOMINVALUE
    NOMAXVALUE
    CACHE 20
    NOORDER
;

-- 
-- TABLE: SACWISIFC.CLIENT_OUTBOUND 
--

CREATE TABLE SACWISIFC.CLIENT_OUTBOUND(
    ID_CLIENT_OUTBOUND      NUMBER(16, 0)    NOT NULL,
    DT_LAST_UPDATE          DATE             NOT NULL,
    INTERFACE_STATUS        VARCHAR2(3)      NOT NULL,
    DT_PROCESS              DATE,
    CD_ERROR                VARCHAR2(10),
    CD_TARGET_SYSTEM        VARCHAR2(4),
    ID_INITIATOR            NUMBER(16, 0)    NOT NULL,
    DT_CLIENT_UPDATED       DATE,
    ID_CLIENT               NUMBER(16, 0)    NOT NULL,
    NBR_CRS_ID              NUMBER(9, 0),
    IND_NEW_CLIENT          VARCHAR2(1)      NOT NULL,
    NBR_PERSON_ID_NUMBER    VARCHAR2(15),
    TXT_MEDICAID_NUMBER     VARCHAR2(12),
    NM_PERSON_LAST          VARCHAR2(22),
    NM_PERSON_FIRST         VARCHAR2(12),
    NM_PERSON_MIDDLE        VARCHAR2(12),
    CD_PERSON_SUFFIX        VARCHAR2(2),
    CD_PERSON_SEX           VARCHAR2(1)      NOT NULL,
    DT_PERSON_BIRTH         DATE,
    CD_PER_COUNTY           VARCHAR2(3),
    CONSTRAINT PK_CLIENT_OUTBOUND PRIMARY KEY (ID_CLIENT_OUTBOUND)
)
;

COMMENT ON TABLE SACWISIFC.CLIENT_OUTBOUND IS 'The CLIENT_OUTBOUND table is a mechanism for sending information about new or updated clients to external systems, such as SMILE.'
;
GRANT DELETE ON SACWISIFC.CLIENT_OUTBOUND TO SACWISIFC
;
GRANT INSERT ON SACWISIFC.CLIENT_OUTBOUND TO SACWISIFC
;
GRANT SELECT ON SACWISIFC.CLIENT_OUTBOUND TO SACWISIFC
;
GRANT UPDATE ON SACWISIFC.CLIENT_OUTBOUND TO SACWISIFC
;
GRANT DELETE ON SACWISIFC.CLIENT_OUTBOUND TO CAPSON
;
GRANT INSERT ON SACWISIFC.CLIENT_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.CLIENT_OUTBOUND TO CAPSON
;
GRANT UPDATE ON SACWISIFC.CLIENT_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.CLIENT_OUTBOUND TO OPERATOR
;
GRANT DELETE ON SACWISIFC.CLIENT_OUTBOUND TO CAPS
;
GRANT INSERT ON SACWISIFC.CLIENT_OUTBOUND TO CAPS
;
GRANT SELECT ON SACWISIFC.CLIENT_OUTBOUND TO CAPS
;
GRANT UPDATE ON SACWISIFC.CLIENT_OUTBOUND TO CAPS
;
GRANT DELETE ON SACWISIFC.CLIENT_OUTBOUND TO CAPSBAT
;
GRANT INSERT ON SACWISIFC.CLIENT_OUTBOUND TO CAPSBAT
;
GRANT SELECT ON SACWISIFC.CLIENT_OUTBOUND TO CAPSBAT
;
GRANT UPDATE ON SACWISIFC.CLIENT_OUTBOUND TO CAPSBAT
;


-- 
-- TABLE: SACWISIFC.CRS_AUDIT 
--

CREATE TABLE SACWISIFC.CRS_AUDIT(
    ID_CRS_AUDIT            NUMBER(16, 0)    NOT NULL,
    DT_LAST_UPDATE          DATE             NOT NULL,
    INTERFACE_STATUS        VARCHAR2(3)      NOT NULL,
    DT_PROCESS              DATE,
    CD_ERROR                VARCHAR2(10),
    ID_INITIATOR            NUMBER(16, 0)    NOT NULL,
    SHINES_LOGON_SHORT      VARCHAR2(8),
    DT_CRS_REQUESTED        DATE,
    CD_CRS_REQUEST          VARCHAR2(3),
    ID_PERSON               NUMBER(16, 0)    NOT NULL,
    NBR_CRS_ID              NUMBER(9, 0)     NOT NULL,
    NBR_PERSON_ID_NUMBER    VARCHAR2(15),
    NM_PERSON_LAST          VARCHAR2(22),
    NM_PERSON_FIRST         VARCHAR2(12),
    CD_PERSON_SEX           VARCHAR2(1)      NOT NULL,
    CONSTRAINT PK_CRS_AUDIT PRIMARY KEY (ID_CRS_AUDIT)
)
;

COMMENT ON TABLE SACWISIFC.CRS_AUDIT IS 'This table primarily contains an audit trail of SHINES transactions with CRS. The interface is a real-time, web-service-based interface, but SHINES needs to maintain a log of transactions for security purposes.
'
;
GRANT DELETE ON SACWISIFC.CRS_AUDIT TO SACWISIFC
;
GRANT INSERT ON SACWISIFC.CRS_AUDIT TO SACWISIFC
;
GRANT SELECT ON SACWISIFC.CRS_AUDIT TO SACWISIFC
;
GRANT UPDATE ON SACWISIFC.CRS_AUDIT TO SACWISIFC
;
GRANT DELETE ON SACWISIFC.CRS_AUDIT TO CAPSON
;
GRANT INSERT ON SACWISIFC.CRS_AUDIT TO CAPSON
;
GRANT SELECT ON SACWISIFC.CRS_AUDIT TO CAPSON
;
GRANT UPDATE ON SACWISIFC.CRS_AUDIT TO CAPSON
;
GRANT SELECT ON SACWISIFC.CRS_AUDIT TO OPERATOR
;
GRANT DELETE ON SACWISIFC.CRS_AUDIT TO CAPS
;
GRANT INSERT ON SACWISIFC.CRS_AUDIT TO CAPS
;
GRANT SELECT ON SACWISIFC.CRS_AUDIT TO CAPS
;
GRANT UPDATE ON SACWISIFC.CRS_AUDIT TO CAPS
;
GRANT DELETE ON SACWISIFC.CRS_AUDIT TO CAPSBAT
;
GRANT INSERT ON SACWISIFC.CRS_AUDIT TO CAPSBAT
;
GRANT SELECT ON SACWISIFC.CRS_AUDIT TO CAPSBAT
;
GRANT UPDATE ON SACWISIFC.CRS_AUDIT TO CAPSBAT
;

-- 
-- TABLE: SACWISIFC.INCOME_RESOURCE_OUTBOUND 
--

CREATE TABLE SACWISIFC.INCOME_RESOURCE_OUTBOUND(
    ID_INCOME_RESOURCE_OUTBOUND    NUMBER(16, 0)    NOT NULL,
    DT_LAST_UPDATE                 DATE             NOT NULL,
    INTERFACE_STATUS               VARCHAR2(3)      NOT NULL,
    DT_PROCESS                     DATE,
    CD_ERROR                       VARCHAR2(10),
    ID_INITIATOR                   NUMBER(16, 0)    NOT NULL,
    DT_INC_REQUESTED               DATE,
    CD_TARGET_SYSTEM               VARCHAR2(4),
    ID_PERSON                      NUMBER(16, 0)    NOT NULL,
    NBR_CRS_ID                     NUMBER(9, 0)     NOT NULL,
    CD_REQ_IDENT                   VARCHAR2(3)      NOT NULL,
    CONSTRAINT PK_INCOME_RESOURCE_OUTBOUND PRIMARY KEY (ID_INCOME_RESOURCE_OUTBOUND)
)
;

COMMENT ON TABLE SACWISIFC.INCOME_RESOURCE_OUTBOUND IS 'This table is used to store requests for Income and Resource data. These requests are currently being sent to the SUCCESS application.'
;
GRANT DELETE ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO SACWISIFC
;
GRANT INSERT ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO SACWISIFC
;
GRANT SELECT ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO SACWISIFC
;
GRANT UPDATE ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO SACWISIFC
;
GRANT DELETE ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPSON
;
GRANT INSERT ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPSON
;
GRANT UPDATE ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO OPERATOR
;
GRANT DELETE ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPS
;
GRANT INSERT ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPS
;
GRANT SELECT ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPS
;
GRANT UPDATE ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPS
;
GRANT DELETE ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPSBAT
;
GRANT INSERT ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPSBAT
;
GRANT SELECT ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPSBAT
;
GRANT UPDATE ON SACWISIFC.INCOME_RESOURCE_OUTBOUND TO CAPSBAT
;

-- 
-- TABLE: SACWISIFC.INVOICE_OUTBOUND 
--

CREATE TABLE SACWISIFC.INVOICE_OUTBOUND(
    ID_INVOICE_OUTBOUND       NUMBER(16, 0)    NOT NULL,
    DT_LAST_UPDATE            DATE             NOT NULL,
    INTERFACE_STATUS          VARCHAR2(3)      NOT NULL,
    DT_PROCESS                DATE,
    CD_ERROR                  VARCHAR2(10),
    CD_TARGET_SYSTEM          VARCHAR2(4),
    ID_INITIATOR              NUMBER(16, 0),
    DT_INVOICE_TRANSACTION    DATE,
    ID_INVOICE                NUMBER(16, 0)    NOT NULL,
    CD_SVC_DTL_SERVICE        VARCHAR2(6),
    MO_INVO_MONTH             NUMBER(2, 0),
    YR_INVO_YEAR              NUMBER(4, 0),
    ID_CLIENT                 NUMBER(16, 0)    NOT NULL,
    NM_PERSON_LAST            VARCHAR2(22),
    NM_PERSON_FIRST           VARCHAR2(12),
    NM_PERSON_MIDDLE          VARCHAR2(12),
    CD_PERSON_SUFFIX          VARCHAR2(2),
    ID_RESOURCE               NUMBER(16, 0)    NOT NULL,
    NM_RESOURCE               VARCHAR2(30),
    ADDR_RSRC_ST_LN_1         VARCHAR2(30),
    ADDR_RSRC_ST_LN_2         VARCHAR2(30),
    ADDR_RSRC_CITY            VARCHAR2(20),
    CD_RSRC_STATE             VARCHAR2(2),
    ADDR_RSRC_ZIP             VARCHAR2(10),
    CD_INVO_COUNTY            VARCHAR2(3),
    CD_INVO_REGION            VARCHAR2(2),
    AMT_LI_VALID_AMOUNT       NUMBER(13, 2),
    IND_ADJ                   VARCHAR2(1),
    NBR_COUNT                 NUMBER(2, 0),
    NBR_PER_DIEM              NUMBER(6, 2),
    NBR_PER_MONTH             NUMBER(6, 2),
    MO_SVC_DTL_SVC_MONTH      NUMBER(2, 0),
    YR_SVC_DTL_SVC_YEAR       NUMBER(4, 0),
    AMT_SVC_DTL_UNIT_RATE     NUMBER(6, 2),
    NBR_SVC_DTL_UNIT_QTY      NUMBER(7, 2),
    NBR_SVC_DTL_FROM_DAY      NUMBER(3, 0),
    NBR_SVC_DTL_TO_DAY        NUMBER(3, 0),
    CONSTRAINT PK_INVOICE_OUTBOUND PRIMARY KEY (ID_INVOICE_OUTBOUND)
)
;

COMMENT ON TABLE SACWISIFC.INVOICE_OUTBOUND IS 'The INVOICE_OUTBOUND table contains approved invoices and invoice adjustments that are to be sent to the state''s accounting system, which for Georgia is currently SMILE.'
;
GRANT DELETE ON SACWISIFC.INVOICE_OUTBOUND TO SACWISIFC
;
GRANT INSERT ON SACWISIFC.INVOICE_OUTBOUND TO SACWISIFC
;
GRANT SELECT ON SACWISIFC.INVOICE_OUTBOUND TO SACWISIFC
;
GRANT UPDATE ON SACWISIFC.INVOICE_OUTBOUND TO SACWISIFC
;
GRANT DELETE ON SACWISIFC.INVOICE_OUTBOUND TO CAPSON
;
GRANT INSERT ON SACWISIFC.INVOICE_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.INVOICE_OUTBOUND TO CAPSON
;
GRANT UPDATE ON SACWISIFC.INVOICE_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.INVOICE_OUTBOUND TO OPERATOR
;
GRANT DELETE ON SACWISIFC.INVOICE_OUTBOUND TO CAPS
;
GRANT INSERT ON SACWISIFC.INVOICE_OUTBOUND TO CAPS
;
GRANT SELECT ON SACWISIFC.INVOICE_OUTBOUND TO CAPS
;
GRANT UPDATE ON SACWISIFC.INVOICE_OUTBOUND TO CAPS
;
GRANT DELETE ON SACWISIFC.INVOICE_OUTBOUND TO CAPSBAT
;
GRANT INSERT ON SACWISIFC.INVOICE_OUTBOUND TO CAPSBAT
;
GRANT SELECT ON SACWISIFC.INVOICE_OUTBOUND TO CAPSBAT
;
GRANT UPDATE ON SACWISIFC.INVOICE_OUTBOUND TO CAPSBAT
;

-- 
-- TABLE: SACWISIFC.MEDICAID_COAREQ_OUTBOUND 
--

CREATE TABLE SACWISIFC.MEDICAID_COAREQ_OUTBOUND(
    ID_MEDICAID_COAREQ_OUTBOUND    NUMBER(16, 0)    NOT NULL,
    DT_LAST_UPDATE                 DATE             NOT NULL,
    INTERFACE_STATUS               VARCHAR2(3)      NOT NULL,
    DT_PROCESS                     DATE,
    CD_ERROR                       VARCHAR2(10),
    ID_INITIATOR                   NUMBER(16, 0)    NOT NULL,
    DT_MED_REQUESTED               DATE,
    CD_TARGET_SYSTEM               VARCHAR2(4),
    ID_PERSON                      NUMBER(16, 0)    NOT NULL,
    NBR_CRS_ID                     NUMBER(9, 0)     NOT NULL,
    CD_REQ_IDENT                   VARCHAR2(3)      NOT NULL,
    TXT_PERSON_EMAIL               VARCHAR2(70),
    CONSTRAINT PK_MEDICAID_COAREQ_OUTBOUND PRIMARY KEY (ID_MEDICAID_COAREQ_OUTBOUND)
)
;

COMMENT ON TABLE SACWISIFC.MEDICAID_COAREQ_OUTBOUND IS 'This table is used to house requests for Medicaid Class of Assistance and other related fields from the State IV-E system, which in Georgia is SUCCESS.'
;
GRANT DELETE ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO SACWISIFC
;
GRANT INSERT ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO SACWISIFC
;
GRANT SELECT ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO SACWISIFC
;
GRANT UPDATE ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO SACWISIFC
;
GRANT DELETE ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPSON
;
GRANT INSERT ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPSON
;
GRANT UPDATE ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO OPERATOR
;
GRANT DELETE ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPS
;
GRANT INSERT ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPS
;
GRANT SELECT ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPS
;
GRANT UPDATE ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPS
;
GRANT DELETE ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPSBAT
;
GRANT INSERT ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPSBAT
;
GRANT SELECT ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPSBAT
;
GRANT UPDATE ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND TO CAPSBAT
;

-- 
-- TABLE: SACWISIFC.TCM_CLAIM_OUTBOUND 
--

CREATE TABLE SACWISIFC.TCM_CLAIM_OUTBOUND(
    ID_TCM_CLAIM_OUTBOUND    NUMBER(16, 0)    NOT NULL,
    DT_LAST_UPDATE           DATE             NOT NULL,
    INTERFACE_STATUS         VARCHAR2(3)      NOT NULL,
    DT_PROCESS               DATE,
    CD_ERROR                 VARCHAR2(10),
    DT_TCM_REQUESTED         DATE,
    ID_TCM_CLAIM             NUMBER(16, 0)    NOT NULL,
    NM_PERSON_LAST           VARCHAR2(22),
    NM_PERSON_FIRST          VARCHAR2(12),
    NM_PERSON_MIDDLE         VARCHAR2(12),
    CD_PERSON_SUFFIX         VARCHAR2(2),
    CD_PERSON_SEX            VARCHAR2(1)      NOT NULL,
    DT_PERSON_BIRTH          DATE,
    NBR_MEDICAID             VARCHAR2(15),
    AMT_BILLING_CHARGE       NUMBER(6, 2),
    TXT_PROVIDER_ID          VARCHAR2(15),
    UNITS_OF_SERVICE         NUMBER(2, 0),
    PROCEDURE_CODE           VARCHAR2(8),
    NBR_TCN                  VARCHAR2(17),
    CONSTRAINT PK_TCM_CLAIM_OUTBOUND PRIMARY KEY (ID_TCM_CLAIM_OUTBOUND)
)
;

COMMENT ON TABLE SACWISIFC.TCM_CLAIM_OUTBOUND IS 'This table is the interface table used to send TCM Claims to SMI for processing with Medicaid.'
;
GRANT DELETE ON SACWISIFC.TCM_CLAIM_OUTBOUND TO SACWISIFC
;
GRANT INSERT ON SACWISIFC.TCM_CLAIM_OUTBOUND TO SACWISIFC
;
GRANT SELECT ON SACWISIFC.TCM_CLAIM_OUTBOUND TO SACWISIFC
;
GRANT UPDATE ON SACWISIFC.TCM_CLAIM_OUTBOUND TO SACWISIFC
;
GRANT DELETE ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPSON
;
GRANT INSERT ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPSON
;
GRANT UPDATE ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.TCM_CLAIM_OUTBOUND TO OPERATOR
;
GRANT DELETE ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPS
;
GRANT INSERT ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPS
;
GRANT SELECT ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPS
;
GRANT UPDATE ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPS
;
GRANT DELETE ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPSBAT
;
GRANT INSERT ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPSBAT
;
GRANT SELECT ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPSBAT
;
GRANT UPDATE ON SACWISIFC.TCM_CLAIM_OUTBOUND TO CAPSBAT
;

-- 
-- TABLE: SACWISIFC.VENDOR_OUTBOUND 
--

CREATE TABLE SACWISIFC.VENDOR_OUTBOUND(
    ID_VENDOR_OUTBOUND     NUMBER(16, 0)    NOT NULL,
    DT_LAST_UPDATE         DATE             NOT NULL,
    INTERFACE_STATUS       VARCHAR2(3)      NOT NULL,
    DT_PROCESS             DATE,
    CD_ERROR               VARCHAR2(10),
    CD_TARGET_SYSTEM       VARCHAR2(4),
    ID_INITIATOR           NUMBER(16, 0)    NOT NULL,
    DT_RSRC_UPDATED        DATE,
    ID_RESOURCE            NUMBER(16, 0)    NOT NULL,
    IND_NEW_RESOURCE       VARCHAR2(1),
    NM_RESOURCE            VARCHAR2(30),
    ID_RESOURCE_ADDRESS    NUMBER(16, 0)    NOT NULL,
    ADDR_RSRC_ST_LN_1      VARCHAR2(30),
    ADDR_RSRC_ST_LN_2      VARCHAR2(30),
    ADDR_RSRC_CITY         VARCHAR2(20),
    CD_RSRC_STATE          VARCHAR2(2),
    ADDR_RSRC_ZIP          VARCHAR2(10),
    NM_RSRC_CONTACT        VARCHAR2(25),
    NBR_RSRC_PHN           VARCHAR2(10),
    NBR_RSRC_PHONE_EXT     VARCHAR2(8),
    NBR_RSRC_FAX           VARCHAR2(10),
    NBR_RSRC_FAX_EXT       VARCHAR2(8),
    CONSTRAINT PK_VENDOR_OUTBOUND PRIMARY KEY (ID_VENDOR_OUTBOUND)
)
;

COMMENT ON TABLE SACWISIFC.VENDOR_OUTBOUND IS 'The VENDOR_OUTBOUND table is used to update external systems, such as SMILE, when a new contracted resource is added or updated.'
;
GRANT DELETE ON SACWISIFC.VENDOR_OUTBOUND TO SACWISIFC
;
GRANT INSERT ON SACWISIFC.VENDOR_OUTBOUND TO SACWISIFC
;
GRANT SELECT ON SACWISIFC.VENDOR_OUTBOUND TO SACWISIFC
;
GRANT UPDATE ON SACWISIFC.VENDOR_OUTBOUND TO SACWISIFC
;
GRANT DELETE ON SACWISIFC.VENDOR_OUTBOUND TO CAPSON
;
GRANT INSERT ON SACWISIFC.VENDOR_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.VENDOR_OUTBOUND TO CAPSON
;
GRANT UPDATE ON SACWISIFC.VENDOR_OUTBOUND TO CAPSON
;
GRANT SELECT ON SACWISIFC.VENDOR_OUTBOUND TO OPERATOR
;
GRANT DELETE ON SACWISIFC.VENDOR_OUTBOUND TO CAPS
;
GRANT INSERT ON SACWISIFC.VENDOR_OUTBOUND TO CAPS
;
GRANT SELECT ON SACWISIFC.VENDOR_OUTBOUND TO CAPS
;
GRANT UPDATE ON SACWISIFC.VENDOR_OUTBOUND TO CAPS
;
GRANT DELETE ON SACWISIFC.VENDOR_OUTBOUND TO CAPSBAT
;
GRANT INSERT ON SACWISIFC.VENDOR_OUTBOUND TO CAPSBAT
;
GRANT SELECT ON SACWISIFC.VENDOR_OUTBOUND TO CAPSBAT
;
GRANT UPDATE ON SACWISIFC.VENDOR_OUTBOUND TO CAPSBAT
;

-- 
-- TRIGGER: TIBR_CLIENT_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TIBR_CLIENT_OUTBOUND
BEFORE INSERT
ON SACWISIFC.CLIENT_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:NEW.ID_CLIENT_OUTBOUND IS NULL OR :new.ID_CLIENT_OUTBOUND = 0) THEN
		SELECT	SEQ_CLIENT_OUTBOUND.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_CLIENT_OUTBOUND := dummy;
	END IF;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TUBR_CLIENT_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TUBR_CLIENT_OUTBOUND
BEFORE UPDATE
ON SACWISIFC.CLIENT_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TIBR_CRS_AUDIT 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TIBR_CRS_AUDIT
BEFORE INSERT
ON SACWISIFC.CRS_AUDIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:NEW.ID_CRS_AUDIT IS NULL OR :new.ID_CRS_AUDIT = 0) THEN
		SELECT	SEQ_CRS_AUDIT.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_CRS_AUDIT := dummy;
	END IF;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TUBR_CRS_AUDIT 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TUBR_CRS_AUDIT
BEFORE UPDATE
ON SACWISIFC.CRS_AUDIT
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TIBR_INCOME_RESOURCE_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TIBR_INCOME_RESOURCE_OUTBOUND
BEFORE INSERT
ON SACWISIFC.INCOME_RESOURCE_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:NEW.ID_INCOME_RESOURCE_OUTBOUND IS NULL OR :new.ID_INCOME_RESOURCE_OUTBOUND = 0) THEN
		SELECT	SEQ_INCOME_RESOURCE_OUTBOUND.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_INCOME_RESOURCE_OUTBOUND := dummy;
	END IF;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TUBR_INCOME_RESOURCE_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TUBR_INCOME_RESOURCE_OUTBOUND
BEFORE UPDATE
ON SACWISIFC.INCOME_RESOURCE_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TIBR_INVOICE_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TIBR_INVOICE_OUTBOUND
BEFORE INSERT
ON SACWISIFC.INVOICE_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:NEW.ID_INVOICE_OUTBOUND IS NULL OR :new.ID_INVOICE_OUTBOUND = 0) THEN
		SELECT	SEQ_INVOICE_OUTBOUND.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_INVOICE_OUTBOUND := dummy;
	END IF;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TUBR_INVOICE_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TUBR_INVOICE_OUTBOUND
BEFORE UPDATE
ON SACWISIFC.INVOICE_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TIBR_MEDICAID_COAREQ_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TIBR_MEDICAID_COAREQ_OUTBOUND
BEFORE INSERT
ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:NEW.ID_MEDICAID_COAREQ_OUTBOUND IS NULL OR :new.ID_MEDICAID_COAREQ_OUTBOUND = 0) THEN
		SELECT	SEQ_MEDICAID_COAREQ_OUTBOUND.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_MEDICAID_COAREQ_OUTBOUND := dummy;
	END IF;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TUBR_MEDICAID_COAREQ_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TUBR_MEDICAID_COAREQ_OUTBOUND
BEFORE UPDATE
ON SACWISIFC.MEDICAID_COAREQ_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TIBR_TCM_CLAIM_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TIBR_TCM_CLAIM_OUTBOUND
BEFORE INSERT
ON SACWISIFC.TCM_CLAIM_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:NEW.ID_TCM_CLAIM_OUTBOUND IS NULL OR :new.ID_TCM_CLAIM_OUTBOUND = 0) THEN
		SELECT	SEQ_TCM_CLAIM_OUTBOUND.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_TCM_CLAIM_OUTBOUND := dummy;
	END IF;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TUBR_TCM_CLAIM_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TUBR_TCM_CLAIM_OUTBOUND
BEFORE UPDATE
ON SACWISIFC.TCM_CLAIM_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TIBR_VENDOR_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TIBR_VENDOR_OUTBOUND
BEFORE INSERT
ON SACWISIFC.VENDOR_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
	dummy		NUMBER;
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
	IF (:NEW.ID_VENDOR_OUTBOUND IS NULL OR :new.ID_VENDOR_OUTBOUND = 0) THEN
		SELECT	SEQ_VENDOR_OUTBOUND.NEXTVAL
		INTO	dummy
		FROM	DUAL;
		:new.ID_VENDOR_OUTBOUND := dummy;
	END IF;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 

-- 
-- TRIGGER: TUBR_VENDOR_OUTBOUND 
--
/
-- BEGIN PL/SQL BLOCK (do not remove this line) -------------------------------- 
CREATE OR REPLACE TRIGGER SACWISIFC.TUBR_VENDOR_OUTBOUND
BEFORE UPDATE
ON SACWISIFC.VENDOR_OUTBOUND
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	:new.DT_LAST_UPDATE := SYSDATE;
END; 
-- END PL/SQL BLOCK (do not remove this line) ---------------------------------- 
/ 


-- Create Synonyms
create synonym CAPS.CLIENT_OUTBOUND for SACWISIFC.CLIENT_OUTBOUND;
create synonym CAPS.CRS_AUDIT for SACWISIFC.CRS_AUDIT;
create synonym CAPS.INCOME_RESOURCE_OUTBOUND for SACWISIFC.INCOME_RESOURCE_OUTBOUND;
create synonym CAPS.INVOICE_OUTBOUND for SACWISIFC.INVOICE_OUTBOUND;
create synonym CAPS.MEDICAID_COAREQ_OUTBOUND for SACWISIFC.MEDICAID_COAREQ_OUTBOUND;
create synonym CAPS.TCM_CLAIM_OUTBOUND for SACWISIFC.TCM_CLAIM_OUTBOUND;
create synonym CAPS.VENDOR_OUTBOUND for SACWISIFC.VENDOR_OUTBOUND;

create synonym CAPSON.CLIENT_OUTBOUND for SACWISIFC.CLIENT_OUTBOUND;
create synonym CAPSON.CRS_AUDIT for SACWISIFC.CRS_AUDIT;
create synonym CAPSON.INCOME_RESOURCE_OUTBOUND for SACWISIFC.INCOME_RESOURCE_OUTBOUND;
create synonym CAPSON.INVOICE_OUTBOUND for SACWISIFC.INVOICE_OUTBOUND;
create synonym CAPSON.MEDICAID_COAREQ_OUTBOUND for SACWISIFC.MEDICAID_COAREQ_OUTBOUND;
create synonym CAPSON.TCM_CLAIM_OUTBOUND for SACWISIFC.TCM_CLAIM_OUTBOUND;
create synonym CAPSON.VENDOR_OUTBOUND for SACWISIFC.VENDOR_OUTBOUND;

create synonym CAPSBAT.CLIENT_OUTBOUND for SACWISIFC.CLIENT_OUTBOUND;
create synonym CAPSBAT.CRS_AUDIT for SACWISIFC.CRS_AUDIT;
create synonym CAPSBAT.INCOME_RESOURCE_OUTBOUND for SACWISIFC.INCOME_RESOURCE_OUTBOUND;
create synonym CAPSBAT.INVOICE_OUTBOUND for SACWISIFC.INVOICE_OUTBOUND;
create synonym CAPSBAT.MEDICAID_COAREQ_OUTBOUND for SACWISIFC.MEDICAID_COAREQ_OUTBOUND;
create synonym CAPSBAT.TCM_CLAIM_OUTBOUND for SACWISIFC.TCM_CLAIM_OUTBOUND;
create synonym CAPSBAT.VENDOR_OUTBOUND for SACWISIFC.VENDOR_OUTBOUND;

{ call dbms_utility.compile_schema('CAPS') };
{ call dbms_utility.compile_schema('CAPSBAT') };
{ call dbms_utility.compile_schema('CAPSON') };
{ call dbms_utility.compile_schema('OPERATOR') };

insert into caps.schema_version (id_schema_version, application_version, comments)
                         values (143, 'SacwisRev2', 'Add Interface Schema and first set of tables');                      
commit;                         
