!*****************************************************************************
!  PLACEMENT HISTORY                                                         *
!*****************************************************************************  

!*****************************************************************************
!                                                                            *
! PROGRAM NAME:         csc38o00.sqr                                         *
!                                                                            *
! PROGRAM LOCATION:     /caps/users/heardtd/work/sqr                         *
!                                                                            *
!                                                                            *
! DATE:                 12/14/95 revised                                     *
!                                                                            *
! PROGRAMMER NAME:      Tony Heard                                           *
!                                                                            *
! PROGRAM DESCRIPTION:  List a child's placement information.                *
!                                                                            *
!*****************************************************************************
!*****************************************************************************
!                                                                            *
! PROGRAM MODIFICATION SECTION                                               *
! ----------------------------                                               *
!                                                                            *
!   DATE     PROGRAMMER                       MODIFICATION                   *
! --------   ----------   -------------------------------------------------  *
! 10/23/95   T. Heard     Initial Programming                                *
! 03/04/96   B. McCleary  SIR 3603 - Added procedure to separately select the*
!                         adult name in case the child has no placement adult*
! 03/14/96   B. McCleary  SIR 3820 - When the removal window is not entered, *
!                         the report does not print the indicator.           *
! 03/20/96   B. McCleary  SIR 4053 - Added an if statement to clear the value*
!                         of the placement adult name when the id plcmt adult*
!                         does not exist; makes Other Placement Info print   *
!                         together in a column beginning on the line after   *
!                         the heading.                                       *
!                                                                            *
! 12/15/96   D. Ly        ENH - Change occurences of Name to Name person     *
!                               full format.                                 *
! 07/29/04   ECD          SIR 22971 - Updated the SQR to only print the      *
!                         Person Placed with field when the Placement Type   *
!                         is equal to Non-Certified Person                   *
!*****************************************************************************

!*****************************************************************************
!                                                                            *
! REPORT PROCESSING SECTION                                                  *
!                                                                            *
!       This procedure defines the beginning and end of the report proc-     *
!       essing. Housekeeping initializes all report values, Processing       *
!       processes the body of the report, and Wrap-Up prints the end of re-  *
!       port message and other wrap up functions.                            *
!                                                                            *
!*****************************************************************************

BEGIN-REPORT

        do HOUSEKEEPING

        do PROCESS-REPORT        

        do WRAP-UP

END-REPORT

!*****************************************************************************
!  SETUP-SECTION                                                             *
!                                                                            *
!       This section sets up common parameters including page size and       *
!       printer as well as input parameters                                  *
!                                                                            *
!*****************************************************************************
BEGIN-SETUP

        #ifdef ORACLE                           !compiler directive
                ask dbname 'Database Name'
                use {dbname}
        #endif

        #INCLUDE 'setup02b.sqc'            ! control codes for landscape   
                                           ! on demand reports             

        ask INPUT_ID_STAGE
        ask INPUT_ID_PLCMT_CHILD                    

END-SETUP

!*****************************************************************************
!                                                                            *
! HEADER                                                                     *
!                                                                            *
!       These commands will be processed every time SQR writes a page. They  *
!       include the report title, date, time, page number, report id, and    *
!       column headers. Five lines are reserved to print the heading at the  *
!       top of each page. This includes blank lines. A common setup header   *
!       has been created called XXXXXXXXXXXXXXXXXXX for landscape or portrait*
!       reports.                                                             *
!                                                                            *
!*****************************************************************************

BEGIN-HEADING 6 

#INCLUDE 'header04.sqc'              !Include file with header information 
                                     !Specific to landscape on demand report
print 'Child''s Name:'         (+1,32)
if $child_suffix <> '' !***ENH***
   let $child_name_suff = ', ' || $child_suffix
end-if
if $child_middle = ''
   let $child_name = $child_first || ' ' || $child_last || $child_name_suff
else
   let $child_name = $child_first || ' ' || $child_middle || ' ' || $child_last || $child_name_suff
end-if
print $child_name              (+0,45) wrap 34 2
move '' to $child_name_suff    !***ENH***

print 'DOB:'                   (+1,41)
print $DOB                     (+0,45)
print 'PLACEMENT HISTORY'      (+2,32) 

END-HEADING

!*****************************************************************************
!                                                                            *
! FOOTER                                                                     *
!                                                                            *
!       These commands will be processed every time SQR writes a page. They  *
!       include a footer that must be in place in all pages of some reports  *
!                                                                            *
!*****************************************************************************

BEGIN-FOOTING 2

#INCLUDE 'footer04.sqc'               !include file with footer information
                                      !specific to on demand landscape

END-FOOTING
!****************************************************************************
!                                                                           *
!   HOUSEKEEPING                                                            *
!                                                                           *
!       Set environment variables, initialize report id, initialize title   *
!       id, initialize date and time, initialize variables, and define      *
!       constants                                                           *
!                                                                           *
!       CALLED BY: BEGIN-REPORT                                             *
!                                                                           * 
!****************************************************************************

BEGIN-PROCEDURE HOUSEKEEPING

   #INCLUDE 'setenv.sqc'       !Set printer environment



  !************************************************
  ! Variables and Constants                       *
  !************************************************
   move '{INPUT_ID_STAGE}'         to #input_id_stage
   move '{INPUT_ID_PLCMT_CHILD}'   to #input_id_plcmt_child
      
   move 'PC'                       to $PC

   if #input_id_plcmt_child = 0
       do GET-PLCMT-CHILD
   end-if

END-PROCEDURE HOUSEKEEPING

!****************************************************************************
!                                                                           *
!   GET-PLCMT-CHILD                                                         *
!                                                                           *
!       Selects all gets header information.                                *
!                                                                           *
!                                                                           * 
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-PLCMT-CHILD
  
BEGIN-SELECT ON-ERROR=SqlErrorHandle
                 
P.ID_PLCMT_CHILD &input_id_plcmt_child
    move  &input_id_plcmt_child                 to #input_id_plcmt_child

FROM    PLACEMENT            P,
        STAGE_PERSON_LINK    SPL,
        STAGE                S
     
WHERE   S.ID_STAGE                = #input_id_stage  
AND     SPL.ID_STAGE              = S.ID_STAGE
AND     SPL.CD_STAGE_PERS_ROLE    = $PC
AND     SPL.ID_PERSON             = P.ID_PLCMT_CHILD

END-SELECT

END-PROCEDURE GET-PLCMT-CHILD

!****************************************************************************
!                                                                           *
!   PROCESS-REPORT                                                          *
!                                                                           *
!      This procedure includes the main processing logic of the report.     *
!                                                                           *
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : GET-HEAD-INFO                                          *
!       CALLS      : GET-PLACEMENT                                          *  
!       CALLS      : GET-LEVEL-CARE                                            *
!****************************************************************************

BEGIN-PROCEDURE PROCESS-REPORT 

        do GET-HEAD-INFO
        do GET-PLACEMENT
        do GET-LEVEL-CARE
        
END-PROCEDURE PROCESS-REPORT                   

!****************************************************************************
!                                                                           *
!   GET-HEAD-INFO                                                           *
!                                                                           *
!       Selects all gets header information.                                *
!                                                                           *
!                                                                           * 
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-HEAD-INFO 
  
BEGIN-SELECT ON-ERROR=SqlErrorHandle
 
P.ID_PERSON
    move &P.ID_PERSON                           to #id_person

to_char(P.DT_PERSON_BIRTH, 'MM/DD/YYYY') &date
    move &date                                  to $DOB
    
P.NM_PERSON_FIRST   !***ENH***
    move &P.NM_PERSON_FIRST                     to $child_first
    
P.NM_PERSON_MIDDLE
    move &P.NM_PERSON_MIDDLE                    to $child_middle     
    
P.NM_PERSON_LAST
    move &P.NM_PERSON_LAST                      to $child_last

CSUFFIX2A.decode
    move &CSUFFIX2A.decode                      to $child_suffix

CC.ID_CASE
    move &CC.ID_CASE                            to #Case_Number

CC.NM_CASE
    move &CC.NM_CASE                            to $Case_Name

FROM    PERSON               P,
        CSUFFIX2           CSUFFIX2A,    !***ENH***
        CAPS_CASE           CC,
        STAGE_PERSON_LINK  SPL,
        STAGE                S
     
WHERE   S.ID_STAGE                = #input_id_stage  
AND     CC.ID_CASE                = S.ID_CASE 
AND     SPL.ID_STAGE              = S.ID_STAGE
AND     SPL.CD_STAGE_PERS_ROLE    = $PC
AND     SPL.ID_PERSON             = P.ID_PERSON
AND     P.CD_PERSON_SUFFIX        = CSUFFIX2A.CODE(+)  !***ENH***

END-SELECT

END-PROCEDURE GET-HEAD-INFO 

!****************************************************************************
!                                                                           *
!   GET-PLACEMENT                                                           *
!                                                                           *
!       Selects all placements for a child.                                  *
!                                                                           * 
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : GET-ADULT-NAME, PRINT-GET-PLACEMENT                    *
!****************************************************************************

BEGIN-PROCEDURE GET-PLACEMENT 

BEGIN-SELECT ON-ERROR=SqlErrorHandle

to_char(PL.DT_PLCMT_START, 'MM/DD/YYYY') &date1
   move &date1                          to $plcmt_start

PL.IND_PLCMT_EMERG
   move  &PL.IND_PLCMT_EMERG            to $plcmt_emerg

to_char(PL.DT_PLCMT_PARENTS_NOTIF, 'MM/DD/YYYY') &date2
   move &date2                          to $parents_notified

to_char(PL.DT_PLCMT_PREPLACE_VISIT, 'MM/DD/YYYY') &date3
   move &date3                          to $replace_visit   

CPLMNTYP.DECODE
   move &CPLMNTYP.DECODE                to $plcmt_type_decode 

CFACTYP2.DECODE
   move &CFACTYP2.DECODE                to $facil_type_decode

PL.NM_PLCMT_AGENCY
   move &PL.NM_PLCMT_AGENCY             to $plcmt_agency

CPLLAFRM.DECODE
   move &CPLLAFRM.DECODE                to $plcmt_liv_arr_decode

PL.NM_PLCMT_FACIL
   move &PL.NM_PLCMT_FACIL              to $plcmt_facil

PL.ID_PLCMT_ADULT
   move  &PL.ID_PLCMT_ADULT                     to #id_adult  

PL.ID_RSRC_FACIL
   move  &PL.ID_RSRC_FACIL                      to #rsrc_facil

PL.NM_PLCMT_CONTACT
   move &PL.NM_PLCMT_CONTACT                    to $contact_name

PL.ADDR_PLCMT_LN1
   move &PL.ADDR_PLCMT_LN1                      to $address_plcmt_ln1

PL.ADDR_PLCMT_LN2
   move &PL.ADDR_PLCMT_LN2                      to $address_plcmt_ln2

PL.NBR_PLCMT_TELEPHONE
   move &PL.NBR_PLCMT_TELEPHONE                 to $telephone_number

PL.ADDR_PLCMT_CITY
   move &PL.ADDR_PLCMT_CITY                      to $plcmt_city

PL.NBR_PLCMT_PHONE_EXT
   move &PL.NBR_PLCMT_PHONE_EXT                  to $phone_ext

CCOUNT.DECODE
   move &CCOUNT.DECODE                           to $plcmt_cnty

CPLREMRO.DECODE
   move &CPLREMRO.DECODE                         to $plcmt_removal_rsn

PL.TXT_PLCMT_ADDR_COMMENT
   move &PL.TXT_PLCMT_ADDR_COMMENT               to $addr_comment

PL.ADDR_PLCMT_ZIP
   move &PL.ADDR_PLCMT_ZIP                       to $plcmt_zip

CF1.DECODE
    move &CF1.DECODE                             to $cd_plcmt_info_1

CF2.DECODE
    move &CF2.DECODE                             to $cd_plcmt_info_2

CF3.DECODE
    move &CF3.DECODE                             to $cd_plcmt_info_3 

CF4.DECODE
    move &CF4.DECODE                             to $cd_plcmt_info_4        

CF5.DECODE
    move &CF5.DECODE                             to $cd_plcmt_info_5    

CF6.DECODE
    move &CF6.DECODE                             to $cd_plcmt_info_6

CF7.DECODE
    move &CF7.DECODE                             to $cd_plcmt_info_7

to_char(PL.DT_PLCMT_END, 'MM/DD/YYYY') &date4
    move &date4                                   to $plcmt_end    

PL.CD_PLCMT_REMOVAL_RSN
    move &PL.CD_PLCMT_REMOVAL_RSN                 to $removal_decode

PL.TXT_PLCMT_REMOVAL_RSN
    move &PL.TXT_PLCMT_REMOVAL_RSN                to $plcmt_removal

PL.IND_PLCMT_CONT_CNTCT
    move &PL.IND_PLCMT_CONT_CNTCT                 to $cont_ind

CSTATE.DECODE    
    move &CSTATE.DECODE                           to $state_dec

       do GET-ADULT-NAME      !SIR 3603 - New procedure to select adult name
       do PRINT-GET-PLACEMENT

FROM    PLACEMENT     PL,
        CAPS_RESOURCE CR,
        CPLMNTYP      CPLMNTYP,
        CFACTYP2      CFACTYP2,
        CPLLAFRM      CPLLAFRM,
        CCOUNT        CCOUNT,
        CSTATE        CSTATE,
        CPLCMTIN      CF1,
        CPLCMTIN      CF2,
        CPLCMTIN      CF3,
        CPLCMTIN      CF4,
        CPLCMTIN      CF5,
        CPLCMTIN      CF6,
        CPLCMTIN      CF7,
        CPLREMRO      CPLREMRO 

WHERE PL.ID_PLCMT_CHILD       = #input_id_plcmt_child
AND   PL.ID_RSRC_FACIL        = CR.ID_RESOURCE(+) !SIR 3603 - Not necessarily a
AND   PL.CD_PLCMT_ACT_PLANNED = 'A'               !facility for each child
AND   CPLMNTYP.CODE(+)  = PL.CD_PLCMT_TYPE
AND   CFACTYP2.CODE(+)  = CR.CD_RSRC_FACIL_TYPE
AND   CPLLAFRM.CODE(+)  = PL.CD_PLCMT_LIV_ARR
AND   CCOUNT.CODE(+)    = PL.ADDR_PLCMT_CNTY
AND   CSTATE.CODE(+)    = PL.ADDR_PLCMT_ST
AND   CF1.CODE(+)       = PL.CD_PLCMT_INFO_1  
AND   CF2.CODE(+)       = PL.CD_PLCMT_INFO_2
AND   CF3.CODE(+)       = PL.CD_PLCMT_INFO_3
AND   CF4.CODE(+)       = PL.CD_PLCMT_INFO_4
AND   CF5.CODE(+)       = PL.CD_PLCMT_INFO_5
AND   CF6.CODE(+)       = PL.CD_PLCMT_INFO_6
AND   CF7.CODE(+)       = PL.CD_PLCMT_INFO_7 
AND   CPLREMRO.CODE(+)  = PL.CD_PLCMT_REMOVAL_RSN

END-SELECT

END-PROCEDURE GET-PLACEMENT 

!****************************************************************************
!                                                                           *
!   GET-ADULT-NAME                                                          *
!                                                                           *
!       Selects the placement adult's name.                                 *
!                                                                           * 
!       CALLED BY  : GET-PLACEMENT                                          *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-ADULT-NAME 

!SIR 4053 - This clears the host variable when the id_plcmt_adult does not exist

if #id_adult = 0
    move '' to $adult_name
end-if

BEGIN-SELECT ON-ERROR=SqlErrorHandle

N.NM_NAME_FIRST  !***ENH***
    move &N.NM_NAME_FIRST                       to $adult_first
    
N.NM_NAME_MIDDLE
    move &N.NM_NAME_MIDDLE                      to $adult_middle     
    
N.NM_NAME_LAST
    move &N.NM_NAME_LAST                        to $adult_last

CSUFFIX2B.decode
    move &CSUFFIX2B.decode                      to $adult_suffix

FROM    NAME            N,
	      CSUFFIX2        CSUFFIX2B
	      
WHERE   N.ID_PERSON            = #id_adult
AND     N.DT_NAME_END_DATE     = TO_DATE('12/31/4712', 'MM/DD/YYYY')
AND     N.IND_NAME_PRIMARY     = 'Y'
AND     N.IND_NAME_INVALID     = 'N'
AND     N.CD_NAME_SUFFIX       = CSUFFIX2B.CODE(+) !***ENH***

END-SELECT

END-PROCEDURE GET-ADULT-NAME 

!****************************************************************************
!                                                                           *
!   GET-LEVEL-CARE                                                          *
!                                                                           *
!       Selects all placements for a child.                                 *
!                                                                           *
!                                                                           * 
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-LEVEL-CARE
   move 0                        to #count2                             
BEGIN-SELECT ON-ERROR=SqlErrorHandle

PL.CD_PLOC_TYPE
  move &PL.CD_PLOC_TYPE                 to $type

CPLOCELG.DECODE 
  move &CPLOCELG.DECODE                 to $ploc_type

PL.CD_PLOC_CHILD
   move &PL.CD_PLOC_CHILD               to $child

to_char(PL.DT_PLOC_START, 'MM/DD/YYYY') &date6
   move &date6                          to $start_date

to_char(PL.DT_PLOC_END, 'MM/DD/YYYY') &date7
   move &date7                          to $end_date         

   let #count2 = #count2 + 1
     if #count2 = 1
        do GET-DECODE
        do PRINT-GET-CARE
        do PRINT-GET-LEVEL-CARE 
     else
        do Get-DECODE
        do PRINT-GET-LEVEL-CARE
     end-if

FROM PERSON_LOC PL,
     CPLOCELG   CPLOCELG

WHERE PL.ID_PERSON = #input_id_plcmt_child
AND CPLOCELG.CODE(+) = PL.CD_PLOC_TYPE

END-SELECT

END-PROCEDURE GET-LEVEL_CARE 

!****************************************************************************
!                                                                           *
!   GET-DECODE                                                              *
!                                                                           *
!       Selects all type decodes.                                           *
!                                                                           *
!                                                                           * 
!       CALLED BY  : GET-PLACEMENT                                          *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-DECODE    
  
   evaluate $type
   when = 'ALOC'
      move 'CATHPLOC'           to $code_table
      move 'Y' to $get_decode_flag
      break
   when = 'BLOC'
      move 'CBILPLOC'           to $code_table
      move 'Y' to $get_decode_flag
      beak
   when = 'RLOC'
      move 'CREQPLOC'           to $code_table
      move 'Y' to $get_decode_flag
      break
   when-other
      move 'N' to $get_decode_flag
      break
   end-evaluate

   if $get_decode_flag = 'Y'
     do GET-SELECT-DECODE
   end-if

END-PROCEDURE GET-DECODE     

!****************************************************************************
!                                                                           *
!   GET-SELECT-DECODE                                                       *
!                                                                           *
!       Selects all type decodes.                                           *
!                                                                           *
!                                                                           * 
!       CALLED BY  : GET-DECODE                                             *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-SELECT-DECODE

BEGIN-SELECT ON-ERROR=SqlErrorHandle

DECODE
   move &DECODE                 to $child_decode
FROM [$code_table]

WHERE CODE(+) = $child 

END-SELECT

END-PROCEDURE GET-SELECT-DECODE

!****************************************************************************
!                                                                           *
!   PRINT-GET-PLACEMENT                                                     *
!                                                                           *
!       This procedure prints the body of the report                        *
!                                                                           * 
!       CALLED BY  : GET-PLACEMENT             
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE PRINT-GET-PLACEMENT

print 'PLACEMENT'               (+1,1)
print '---------'               (+1,1)
print ' '                       (+1,1)
print 'DATE PLACED:'            (+1,11)
print $plcmt_start              (+0,26)
print 'EMERGENCY PLACEMENT:'    (+0,47)
print $plcmt_emerg              (+0,68)
print 'DATE PARENTS NOTIFIED:'  (+1,1)
print $parents_notified         (+0,26) 
print 'DATE PREPLACEMENT VISIT:' (+0,43)
print $replace_visit            (+0,68)
print 'PLACEMENT TYPE:'         (+2,5) 
print $plcmt_type_decode        (+0,22) 
print 'LIVING ARRANGEMENT:'     (+1,1) 
print $plcmt_liv_arr_decode     (+0,22)  
print 'FACILITY TYPE:'          (+1,6)
print $facil_type_decode        (+0,22)
print 'FACILITY NAME:'          (+1,6)
print $plcmt_facil              (+0,22)
print 'FACILITY NBR:'           (+1,7)

if #rsrc_facil <> 0
  print #rsrc_facil             (+0,22)  edit 8888888888888888
end-if


print 'PERSON PLACED WITH:'     (+1,1)

!22971
if $plcmt_type_decode = 'Non-Certified Person'
if $adult_suffix <> '' !***ENH***
   let $adult_name_suff = ', ' || $adult_suffix
end-if
if $adult_middle = ''   !***ENH***
   let $adult_name = $adult_first || ' ' || $adult_last || $adult_name_suff
else
   let $adult_name = $adult_first || ' ' || $adult_middle || ' ' || $adult_last || $adult_name_suff
end-if
print $adult_name               (+0,22)
end-if

move '' to $adult_name_suff     !***ENH***

print 'CONTACT PERSON:'         (+1,5)
print $contact_name             (+0,22)
print 'RESIDENCE ADDRESS:'      (+2,2)
print $address_plcmt_ln1        (+0,22)
print $address_plcmt_ln2        (+1,22)
let $city_state_zip = $plcmt_city || ', ' || $state_dec || ' ' || $plcmt_zip 
print $city_state_zip           (+1,22) !***ENH***
!print $plcmt_city               (+1,22) Code removed to allow
!print $state_dec                (+0,30) for more uniform way to 
!print $plcmt_zip                (+0,44) print this info.
print $plcmt_cnty               (+1,22)
print 'TELEPHONE:'              (+1,10)

if substr($telephone_number,8,1) = ''
 let $phone_print = substr($telephone_number,1,3)||'-'||substr($telephone_number,4,4)
else
 let $phone_print = '('||substr($telephone_number,1,3)||') '||substr($telephone_number,4,3)||'-'|| substr($telephone_number,7,4) 
end-if

print $phone_print              (+0,22)  
print ''                        ()
print 'EXT:'                    (+1,16)
print $phone_ext                (+0,22)
print 'ADDRESS NOTES:'          (+1,6)
print $addr_comment             (+0,22) wrap 56 2
print 'OTHER PLACEMENT INFO:'   (+2,1) 

if $cd_plcmt_info_1 <> '' 
  print $cd_plcmt_info_1          (+1,24)
end-if
if $cd_plcmt_info_2 <> '' 
  print $cd_plcmt_info_2          (+1,24)
end-if
if $cd_plcmt_info_3 <> '' 
  print $cd_plcmt_info_3          (+1,24)
end-if
if $cd_plcmt_info_4 <> '' 
  print $cd_plcmt_info_4          (+1,24)
end-if
if $cd_plcmt_info_5 <> '' 
  print $cd_plcmt_info_5          (+1,24)
end-if
if $cd_plcmt_info_6 <> '' 
  print $cd_plcmt_info_6          (+1,24)
end-if
if $cd_plcmt_info_7 <> '' 
  print $cd_plcmt_info_7          (+1,24)
end-if

print 'DT REMOVED FROM THIS PLCMT: '  (+2,3)

if $plcmt_end <> '12/31/4712'
  print $plcmt_end                    (+0,31)
end-if

print 'REMOVAL REASON:'               (+1,15)
print $plcmt_removal_rsn              (+0,31) wrap 44 2
print 'CONTINUED CONTACT RECOMMEDED:' (+1,1)

if $plcmt_removal_rsn <> ''                   !SIR 3820 - Don't print the
  print $cont_ind                     (+0,31) !indicator when the removal
end-if                                        !window is not entered

print 'REMOVAL COMMENTS:'             (+1,13)
print $plcmt_removal                  (+0,31) wrap 44 2  
print ' '                             (+1,1)
print ' '                             (+1,1)

END-PROCEDURE PRINT-GET-PLACEMENT 

!****************************************************************************
!                                                                           *
!   PRINT-GET-CARE                                                          *
!                                                                           *
!       This procedure prints the body of the report                        *
!                                                                           * 
!       CALLED BY  : GET-PLACEMENT             
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE PRINT-GET-CARE

print 'SERVICE LEVEL HISTORY'         (+2,1)
print '---------------------'         (+1,1)

END-PROCEDURE PRINT-GET-CARE 
!****************************************************************************
!                                                                           *
!   PRINT-GET-LEVEL-CARE                                                    *
!                                                                           *
!       This procedure prints the body of the report                        *
!                                                                           * 
!       CALLED BY  : GET-PLACEMENT             
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE PRINT-GET-LEVEL-CARE
!print 'SERVICE LEVEL HISTORY'         (+2,1)
!print '---------------------'         (+1,1)
print 'SERVICE LEVEL TYPE:'              (+2,1)
print $ploc_type                         (+0,22)
print 'Level:'                           (+0,48)
print $child_decode                      (+0,57)
print 'START DATE:'                      (+1,09)
print $plcmt_start                       (+0,22)
print 'END DATE:'                        (+0,45)
if $end_date <> '12/31/4712'
  print $end_date                        (+0,57)
end-if

END-PROCEDURE PRINT-GET-LEVEL-CARE 
!****************************************************************************
!                                                                           *
!   WRAP-UP                                                                 *
!                                                                           *
!       This procedure prints the messages for the end of the report as well*
!       as over all totals.                                                 *
!                                                                           * 
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE WRAP-UP

   NEW-PAGE

END-PROCEDURE WRAP-UP


!***********************************************************************
!                                                                      *
! SqlErrorHandle                                                       *
!                                                                      *
!      This section handles formatting of messages for SQL errors.     *
!      When an SQL error is encounterd, the program will write to      *                                                                      
!      the log file, program processing does not stop for SQL errors.  *
!                                                                      *
!  CALLS:  None                                                        *
!                                                                      *
!***********************************************************************

BEGIN-PROCEDURE SqlErrorHandle 


  print 'SQL error - Processing Terminated'               (+1,2)
  print $error                                            (+1,2)
  print 'ERROR: SQL error halted loader processing'       (+0)
  print $error                                            (+1,2)
  print 'SQL Error: '                                     (+0)
  print $sql-error                                        (+0)
  print $error                                            (+1,2)
  print 'SQL Status: '                                    (+0)
  print #sql-status                                       (+0)

  STOP

END-PROCEDURE SqlErrorHandle


!****************************************************************************
!                                                                           *
!                                INCLUDE SECTION                            *
!                                                                           *
!       Include all files that contain common modules or procedures that    *
!       will be used in the report                                          *
!****************************************************************************
#INCLUDE 'cfpstamp.sqc'
