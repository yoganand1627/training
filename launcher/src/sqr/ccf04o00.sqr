!*****************************************************************************
!  EDUCATIONAL LOG REPORT                                                    *
!*****************************************************************************  

!*****************************************************************************
!                                                                            *
! PROGRAM NAME:         ccf04o00.sqr                                         *
!                                                                            *
! PROGRAM LOCATION:     /caps/users/jonesvj/work/sqr                         *
!                                                                            *
!                                                                            *
! DATE:                 11/15/95                                             *
!                                                                            *
! PROGRAMMER NAME:      Vince Jones                                          * 
!                                                                            *
! PROGRAM DESCRIPTION:  This report lists all the schools attended by a      *
!           child, including the school's address, phone number,             *
!           enrollment dates as well as types of programs the                *
!           child participated in at each school.                            *
!                                                                            *
!*****************************************************************************
!*****************************************************************************
!                                                                            *
! PROGRAM MODIFICATION SECTION                                               *
! ----------------------------                                               *
!                                                                            *
!   DATE     PROGRAMMER                       MODIFICATION                   *
! --------   ----------   -------------------------------------------------  *
! 10/15/95   V.Jones      Initial Programming                                *
! 03/08/96   B. McCleary  SIR 3714 - Added code to print all needs together. *
! 03/22/96   B. McCleary  SIR 4040 - Added an SQL to get the school address  *
!                         from resource_history and phone from resource      *
!                         phone when in-state                            * 
! 03/26/96   B. McCleary  SIR 4259 - Added to where clause to get the primary*
!                         resource address.                                  *
!*****************************************************************************

!*****************************************************************************
!                                                                            *
! REPORT PROCESSING SECTION                                                  *
!                                                                            *
!       This procedure defines the beginning and end of the report proc-     *
!       essing. Housekeeping initializes all report values, Processing       *
!       processes the body of the report, and Wrap-Up prints the end of re-  *
!       port message and other wrap up functions.                            *
!                                                                            *
!*****************************************************************************

BEGIN-REPORT

    do HOUSEKEEPING

    do PROCESS-REPORT        

    do WRAP-UP

END-REPORT

!*****************************************************************************
!  SETUP-SECTION                                                             *
!                                                                            *
!       This section sets up common parameters including page size and       *
!       printer as well as input parameters                                  *
!                                                                            *
!*****************************************************************************
BEGIN-SETUP

    #ifdef ORACLE                           !compiler directive
        ask dbname 'Database Name'
        use {dbname}
    #endif

    #INCLUDE 'setup02b.sqc'                 ! control codes for Portrait 

    ask ID_CASE                             ! input parameter 
    ask ID_PERSON                           ! input parameter 
    
END-SETUP

!*****************************************************************************
!                                                                            *
! HEADER                                                                     *
!                                                                            *
!       These commands will be processed every time SQR writes a page. They  *
!       include the report title, date, time, page number, report id, and    *
!       column headers. XXX lines are reserved to print the heading at the   *
!       top of each page. This includes blank lines. A common setup header   *
!       has been created called XXXXXXXXXXXXXXXXXXX for landscape or portrait*
!       reports.                                                             *
!                                                                            *
!*****************************************************************************

BEGIN-HEADING 7
  
  if #input_id_case <> 0
    
    print 'Case Name: '                 (+0,43)
    print $case_name                    (+0,54)
    print 'Case ID: '                   (+1,43)
    print #input_id_case                (+0,54) edit 8888888888888888 
    print 'EDUCATION LOG'               (+2) center
    print 'PERSON NAME:'                (+2,1)
    if $person_suffix <> ''  !***ENH***
    let $person_name_suff = ', ' || $person_suffix
    end-if
    if $person_middle = ''
     let $person_name = $person_first || ' ' || $person_last || $person_name_suff
    else
     let $person_name = $person_first || ' ' || $person_middle || ' ' || $person_last || $person_name_suff
    end-if   
    
    print $person_name                  (+0,14)
    move '' to $person_name_suff        !***ENH***
    print 'PERSON ID:'                  (+1,1)  
    print #input_id_person              (+0,14) edit 8888888888888888
 
  else
    
    print 'EDUCATION LOG'               (+3) center
    print 'PERSON NAME:'                (+2,1)
    if $person_suffix <> ''  !***ENH***
    let $person_name_suff = ', ' || $person_suffix
    end-if
    if $person_middle = ''
     let $person_name = $person_first || ' ' || $person_last || $person_name_suff
    else
     let $person_name = $person_first || ' ' || $person_middle || ' ' || $person_last || $person_name_suff
    end-if       
    print $person_name                  (+0,14)
    move '' to $person_name_suff        !***ENH***

    print 'PERSON ID:'                  (+1,1)  
    print #input_id_person              (+0,14) edit 8888888888888888
 
  end-if
                             
END-HEADING

!*****************************************************************************
!                                                                            *
! FOOTER                                                                     *
!                                                                            *
!       These commands will be processed every time SQR writes a page. They  *
!       include a footer that must be in place in all pages of some reports  *
!                                                                            *
!*****************************************************************************

BEGIN-FOOTING 2

  #INCLUDE 'footer04.sqc'       ! Include file with footer information

END-FOOTING

!****************************************************************************
!                                                                           *
!   HOUSEKEEPING                                                            *
!                                                                           *
!       Set environment variables, initialize report id, initialize title   *
!       id, initialize date and time, initialize variables, and define      *
!       constants                                                           *
!                                                                           *
!       CALLED BY: BEGIN-REPORT                                             *
!                                                                           * 
!****************************************************************************

BEGIN-PROCEDURE HOUSEKEEPING

   #INCLUDE 'setenv.sqc'                            !Set printer environment
    
    move {ID_CASE}              to #input_id_case
    move {ID_PERSON}            to #input_id_person
    
    if #input_id_case = 0 
      do GET-PRIMARY 
      do GET-SYSDATE
    else  
      do GET-CASE  
    end-if


END-PROCEDURE HOUSEKEEPING

!****************************************************************************
!                                                                           *
!   PROCESS-REPORT                                                          *
!                                                                           *
!      This procedure includes the main processing logic of the report.     *
!                                                                           *
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : GET-PERSON, GET-PRINCIPAL                              *
!****************************************************************************

BEGIN-PROCEDURE PROCESS-REPORT 
                 
    do GET-LOG

END-PROCEDURE PROCESS-REPORT                   

!****************************************************************************
!                                                                           *
!   GET-CASE                                                                *
!                                                                           *
!       This procedure will select DT CASE CLOSE and NM CASE from CAPS CASE *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-CASE

BEGIN-SELECT ON-ERROR=SqlErrorHandle
                 
NM_CASE 
    move &NM_CASE      to $case_name

DT_CASE_CLOSED
    move &DT_CASE_CLOSED            to $close_date
        
    if rtrim($close_date, '') = ''
       
       do GET-PRIMARY
      
       do GET-SYSDATE
       
        else

       do GET-NAME

        end-if
    
FROM    CAPS_CASE     

WHERE   ID_CASE = #input_id_case

END-SELECT

END-PROCEDURE GET-CASE
       
!****************************************************************************
!                                                                           *
!   GET-SYSDATE                                                             *
!                                                                           *
!       This procedure will select the system date in order to replace the  * 
!       closed date when it is equal to NULL                                *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-SYSDATE
           

BEGIN-SELECT ON-ERROR=SqlErrorHandle
    
SYSDATE
     move &SYSDATE          to $close_date
        
FROM DUAL
     
END-SELECT              
     
END-PROCEDURE GET-SYSDATE
           
!****************************************************************************
!                                                                           *
!   GET-NAME                                                                *
!                                                                           *
!       This procedure will select the Name and Person ID  information      *
!   using effective dating logic.                                           *
!                                                                           *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : PRINT-NAME                                             *
!****************************************************************************

BEGIN-PROCEDURE GET-NAME

BEGIN-SELECT ON-ERROR=SqlErrorHandle
                 
N.NM_NAME_FIRST                             !***ENH***
    move &N.NM_NAME_FIRST                   to $person_first
    
N.NM_NAME_MIDDLE
    move &N.NM_NAME_MIDDLE                  to $person_middle
    
N.NM_NAME_LAST
    move &N.NM_NAME_LAST                    to $person_last
    
CSUFFIX2A.decode
    move &CSUFFIX2A.decode                  to $person_suffix      
       
FROM    CSUFFIX2 CSUFFIX2A,
        NAME     N

WHERE   ID_PERSON = #input_id_person
AND IND_NAME_PRIMARY = 'Y'
AND DT_NAME_END_DATE > to_date($close_date, 'MM/DD/YYYY')
AND DT_NAME_START_DATE <= to_date($close_date, 'MM/DD/YYYY')
AND CSUFFIX2A.CODE(+) = N.CD_NAME_SUFFIX
    
END-SELECT
        
END-PROCEDURE GET-NAME

!****************************************************************************
!                                                                           *
!   GET-PRIMARY                                                             *
!                                                                           *
!       This procedure will select the Name and Person ID information.      *
!                                                                           *
!                                                                           *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : PRINT-NAME                                             *
!****************************************************************************

BEGIN-PROCEDURE GET-PRIMARY
    
BEGIN-SELECT ON-ERROR=SqlErrorHandle
                 
N1.NM_NAME_FIRST                             !***ENH***
    move &N1.NM_NAME_FIRST                  to $person_first
    
N1.NM_NAME_MIDDLE
    move &N1.NM_NAME_MIDDLE                 to $person_middle
    
N1.NM_NAME_LAST
    move &N1.NM_NAME_LAST                   to $person_last
    
CSUFFIX2B.decode
    move &CSUFFIX2B.decode                  to $person_suffix      
    
FROM    CSUFFIX2 CSUFFIX2B,
        NAME     N1 

WHERE   N1.ID_PERSON = #input_id_person
AND     N1.IND_NAME_PRIMARY = 'Y'
AND     N1.DT_NAME_END_DATE = to_date('12/31/4712','MM/DD/YYYY')
AND     CSUFFIX2B.CODE(+) = N1.CD_NAME_SUFFIX

END-SELECT

END-PROCEDURE GET-PRIMARY

!****************************************************************************
!                                                                           *
!   GET-LOG                                                                 *
!                                                                           *
!       This procedure will select the Education History information based  *
!   on Id Case and Id Person from input.                                    *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : PRINT-LOG                                              *
!****************************************************************************

BEGIN-PROCEDURE GET-LOG

BEGIN-SELECT ON-ERROR=SqlErrorHandle
                 
A.ADDR_EDHIST_CITY
    move &A.ADDR_EDHIST_CITY                        to $city

CCOUNT.decode
    move &CCOUNT.decode                             to $county

A.ADDR_EDHIST_STATE
    move &A.ADDR_EDHIST_STATE                       to $state

A.ADDR_EDHIST_STREET_LN_1
    move &A.ADDR_EDHIST_STREET_LN_1                 to $street1

A.ADDR_EDHIST_STREET_LN_2
    move &A.ADDR_EDHIST_STREET_LN_2                 to $street2

A.ADDR_EDHIST_ZIP
    move &A.ADDR_EDHIST_ZIP                         to $zip

CSCHGRAD1.decode
    move &CSCHGRAD1.decode                          to $egrade

CEDUCNED1.decode
    move &CEDUCNED1.decode                          to $need1

CEDUCNED2.decode
    move &CEDUCNED2.decode                          to $need2
    
CEDUCNED3.decode
    move &CEDUCNED3.decode                          to $need3
    
CEDUCNED4.decode
    move &CEDUCNED4.decode                          to $need4
    
CEDUCNED5.decode
    move &CEDUCNED5.decode                          to $need5
    
CEDUCNED6.decode
    move &CEDUCNED6.decode                          to $need6
    
CEDUCNED7.decode
    move &CEDUCNED7.decode                          to $need7
    
CEDUCNED8.decode
    move &CEDUCNED8.decode                          to $need8

CSCHGRAD2.decode
    move &CSCHGRAD2.decode                          to $wgrade

to_char(A.DT_EDHIST_ENROLL_DATE, 'MM/DD/YYYY') &date2    
    move &date2                                         to $dtenrol

to_char(A.DT_EDHIST_WITHDRAWN_DATE, 'MM/DD/YYYY') &date3    
    move &date3                                         to $dtwd

A.IND_EDHIST_TEA_SCHOOL
    move &A.IND_EDHIST_TEA_SCHOOL                   to $tea

A.NBR_EDHIST_PHONE
    move &A.NBR_EDHIST_PHONE                        to $phone

A.NBR_EDHIST_PHONE_EXT
    move &A.NBR_EDHIST_PHONE_EXT                    to $ext
    
A.NM_EDHIST_SCH_DIST
    move &A.NM_EDHIST_SCH_DIST                      to $dist
    
A.NM_EDHIST_SCHOOL
    move &A.NM_EDHIST_SCHOOL                        to $school 

A.ID_RESOURCE
    move &A.ID_RESOURCE                             to #id_resource

!**********************************************************************
!SIR 4040 - Added resource in order to get the addresses for in-state
!**********************************************************************

    if $tea = 'I'
    do GET-IN-STATE-ADDR
    else
        do PRINT-LOG
    end-if
    
FROM    EDUCATIONAL_HISTORY A,
        CCOUNT          CCOUNT,
        CSCHGRAD        CSCHGRAD1,
        CSCHGRAD        CSCHGRAD2,
        CEDUCNED        CEDUCNED1,
        CEDUCNED        CEDUCNED2,
        CEDUCNED        CEDUCNED3,
        CEDUCNED        CEDUCNED4,
        CEDUCNED        CEDUCNED5,
        CEDUCNED        CEDUCNED6,
        CEDUCNED        CEDUCNED7,
        CEDUCNED        CEDUCNED8
      
WHERE       A.ID_PERSON          =  #input_id_person
AND     CCOUNT.CODE(+)           =  A.ADDR_EDHIST_CNTY
AND     CSCHGRAD1.CODE(+)        =  A.CD_EDHIST_ENROLL_GRADE
AND     CSCHGRAD2.CODE(+)        =  A.CD_EDHIST_WITHDRAWN_GRADE
AND     CEDUCNED1.CODE(+)        =  A.CD_EDHIST_NEEDS_1
AND     CEDUCNED2.CODE(+)        =  A.CD_EDHIST_NEEDS_2
AND     CEDUCNED3.CODE(+)        =  A.CD_EDHIST_NEEDS_3
AND     CEDUCNED4.CODE(+)        =  A.CD_EDHIST_NEEDS_4
AND     CEDUCNED5.CODE(+)        =  A.CD_EDHIST_NEEDS_5
AND     CEDUCNED6.CODE(+)        =  A.CD_EDHIST_NEEDS_6
AND     CEDUCNED7.CODE(+)        =  A.CD_EDHIST_NEEDS_7
AND     CEDUCNED8.CODE(+)        =  A.CD_EDHIST_NEEDS_8

ORDER BY A.DT_EDHIST_ENROLL_DATE desc

END-SELECT

END-PROCEDURE GET-LOG

!****************************************************************************
!                                                                           *
!   GET-IN-STATE-ADDR                                                       *
!                                                                           *
!       This procedure will select the Education History information based  *
!   Id Case and Id Person from input.                           *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : PRINT-LOG                                  *
!****************************************************************************

BEGIN-PROCEDURE GET-IN-STATE-ADDR

BEGIN-SELECT ON-ERROR=SqlErrorHandle
                 
A.ADDR_RSRC_ADDR_CITY
    move &A.ADDR_RSRC_ADDR_CITY         to $city

CCOUNT.decode &county
    move &county                        to $county

A.CD_RSRC_ADDR_STATE
    move &A.CD_RSRC_ADDR_STATE          to $state

A.ADDR_RSRC_ADDR_ST_LN_1
    move &A.ADDR_RSRC_ADDR_ST_LN_1              to $street1

A.ADDR_RSRC_ADDR_ST_LN_2
    move &A.ADDR_RSRC_ADDR_ST_LN_2              to $street2

A.ADDR_RSRC_ADDR_ZIP
    move &A.ADDR_RSRC_ADDR_ZIP          to $zip

P.NBR_RSRC_PHONE
    move &P.NBR_RSRC_PHONE              to $phone

P.NBR_RSRC_PHONE_EXT
    move &P.NBR_RSRC_PHONE_EXT          to $ext

    do PRINT-LOG
   
FROM            RESOURCE_ADDRESS        A,
        RESOURCE_PHONE      P,
        CCOUNT              CCOUNT
      
WHERE           A.ID_RESOURCE       =  #id_resource    
AND             A.ID_RESOURCE       =  P.ID_RESOURCE   
AND             P.CD_RSRC_PHONE_TYPE    = '01'       !***SIR 4259***
AND             A.CD_RSRC_ADDR_TYPE     = '01'       !***SIR 4259***
AND     CCOUNT.CODE(+)      =  A.CD_RSRC_ADDR_COUNTY

END-SELECT

END-PROCEDURE GET-IN-STATE-ADDR

!****************************************************************************
!                                                                           *
!   PRINT-LOG                                                           *
!                                                                           *
!       This procedure prints the principals and makes sure they are not    *
!       split between pages.                                                *
!                                                                           *
!       CALLED BY  : GET-LOG                                                *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE PRINT-LOG

print 'SCHOOL NAME:'                        (+2,1)  
print $school                       (+0,20)
print 'IN-STATE AND TEA'                    (+1,1)
print 'CERTIFIED:'                                  (+1,1)

if $tea = 'I'
  move 'Y'                         to $tea_print
else
if $tea = 'O'
  move 'N'                         to $tea_print
end-if
end-if

if $tea <> ''
  print $tea_print                          (+0,20)
end-if

print 'SCHOOL DISTRICT:'                            (+1,1) 
print $dist                                         (+0,20)
print 'SCHOOL ADDRESS:'                             (+1,1)
if $street1 <> ''
  print $street1                                (+0,20)
end-if
if $street2 <> ''
  print $street2                                    (+1,20)
end-if
print 'CITY:'                               (+1,8)
print $city                                 (+0,20) 
print 'COUNTY:'                     (+0,43)
print $county                       (+0,51)
print 'STATE:'                      (+1,8)
print $state                        (+0,20)
print 'ZIP:'                        (+0,43)
print $zip                      (+0,48)
print 'PHONE:'                      (+1,8)
     
    if substr($phone,8,1) = ''   
        let $rsrc_phone_print = substr($phone,1,3)||'-'||substr($phone,4,4)
    else
        let $rsrc_phone_print = '('||substr($phone,1,3)||') '||substr($phone,4,3)||'-'||substr($phone,7,4)
    end-if

if $phone <> ''
  print $rsrc_phone_print               (+0,20)
end-if

print 'EXT:'                        (+0,43)
print $ext                      (+0,48)
print 'DATE ENROLLED:'                      (+1,1)
print $dtenrol                      (+0,20)
print 'GRADE ENROLLED:'                     (+0,43)
print $egrade                       (+0,59)
print 'DATE WITHDRAWN:'                     (+1,1)
print $dtwd                     (+0,20)
print 'GRADE WITHDRAWN:'                    (+0,43)
print $wgrade                       (+0,60)
print 'EDUCATIONAL NEEDS:'                  (+1,1)

!SIR 3714 - Prints all needs together beginning on the next line

if $need1 <> ''
print $need1                        (+1,20)
end-if
if $need2 <> ''
print $need2                        (+1,20)
end-if
if $need3 <> ''
print $need3                        (+1,20)
end-if
if $need4 <> ''
print $need4                        (+1,20)
end-if
if $need5 <> ''
print $need5                        (+1,20)
end-if
if $need6 <> ''
print $need6                        (+1,20)
end-if
if $need7 <> ''
print $need7                        (+1,20)
end-if
if $need8 <> ''
print $need8                        (+1,20)
end-if



END-PROCEDURE PRINT-PRINCIPAL


!****************************************************************************
!                                                                           *
!   WRAP-UP                                                                 *
!                                                                           *
!       This procedure prints the messages for the end of the report as well*
!       as over all totals.                                                 *
!                                                                           * 
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE WRAP-UP

   NEW-PAGE

END-PROCEDURE WRAP-UP


!***********************************************************************
!                                                                      *
! SqlErrorHandle                                                       *
!                                                                      *
!      This section handles formatting of messages for SQL errors.     *
!      When an SQL error is encounterd, the program will write to      * 
!      the log file, program processing does not stop for SQL errors.  *
!                                                                      *
!  CALLS:  None                                                        *
!                                                                      *
!***********************************************************************

BEGIN-PROCEDURE SqlErrorHandle 


  print 'SQL error - Processing Terminated'               (+1,2)
  print $error                                            (+1,2)
  print 'ERROR: SQL error halted loader processing'       (+0)
  print $error                                            (+1,2)
  print 'SQL Error: '                                     (+0)
  print $sql-error                                        (+0)
  print $error                                            (+1,2)
  print 'SQL Status: '                                    (+0)
  print #sql-status                                       (+0)
  STOP

END-PROCEDURE SqlErrorHandle


!****************************************************************************
!                                                                           *
!                                INCLUDE SECTION                            *
!                                                                           *
!   Include all files that contain common modules or procedures that        *
!   will be used in the report                                              *
!****************************************************************************


#INCLUDE 'cfpstamp.sqc'
