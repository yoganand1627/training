!*****************************************************************************
!  ASSIGNED WORKLOAD REPORT                                                  *
!*****************************************************************************

!*****************************************************************************
!                                                                            *
! PROGRAM NAME:         ccm05o00.sqr                                         *
!                                                                            *
! PROGRAM LOCATION:     /sys/prod/sqr/ccm05o00.sqr                           *
!                                                                            *
!                                                                            *
! DATE:                 02/04/04                                             *
!                                                                            *
! PROGRAMMER NAME:      Anna Corley                                          *
!                                                                            *
! PROGRAM DESCRIPTION:  The Assigned Workload Report will display the        *
!                       entire workload for a user in the report.            *
!                       it is launched from the workload page.               *
!                                                                            *
!*****************************************************************************
! PROGRAM MODIFICATION SECTION                                               *
! ----------------------------                                               *
!                                                                            *
!   DATE     PROGRAMMER                       MODIFICATION                   *
! --------   ----------   -------------------------------------------------  *
! 05/20/04   CORLEYAN     SIR 22876 - Modify report so that it can get the   *
!                         Sort order from the page, the sort order will be   *
!                         same as the sort order currently displayed on the  *
!                         page.                                              *
! 12/07/05   FRASERKR     SIR 24104 - Add the date stage opened which is     *
!                           STAGE.DT_STAGE_START                             *
!                         Also, added 'Rcvm' column for APS to match the     *
!                           layout of the workload page seen by all workers. *
!                         Adjusted all columns accordingly to include the    *
!                           two columns.                                     *
! 04/25/06   fraserkr     SIR 24313 - Employee Name missing from report.     *
!                         Disappeared after SIR 24104 rolled out. UGH        *
!*****************************************************************************

!*****************************************************************************
!                                                                            *
! REPORT PROCESSING SECTION                                                  *
!                                                                            *
!       This procedure defines the beginning and end of the report proc-     *
!       essing. Housekeeping initializes all report values, Processing       *
!       processes the body of the report, and Wrap-Up prints the end of re-  *
!       port message and other wrap up functions.                            *
!                                                                            *
!*****************************************************************************

BEGIN-REPORT

    do HOUSEKEEPING

    do PROCESS-REPORT

    do WRAP-UP

END-REPORT

!*****************************************************************************
!  SETUP-SECTION                                                             *
!                                                                            *
!       This section sets up common parameters including page size and       *
!       printer as well as input parameters                                  *
!                                                                            *
!*****************************************************************************
BEGIN-SETUP

    #ifdef ORACLE                           !compiler directive
        ask dbname 'Database Name'
        use {dbname}
    #endif

    #INCLUDE 'setup03a.sqc'            ! control codes for Landscape

    ask ID_PERSON                      ! input parameter

    ask SORT_ORDER                      ! input parameter

END-SETUP

!*****************************************************************************
!                                                                            *
! HEADER                                                                     *
!                                                                            *
!       These commands will be processed every time SQR writes a page. They  *
!       include the report title, date, time, page number, report id, and    *
!       column headers. XXX lines are reserved to print the heading at the   *
!       top of each page. This includes blank lines. A common setup header   *
!       has been created called XXXXXXXXXXXXXXXXXXX for landscape or portrait*
!       reports.                                                             *
!                                                                            *
!*****************************************************************************

BEGIN-HEADING 4

print 'Department of Family and Protective Services' (0) center
print 'Workload Report'                              (+1) center

do PRINT-TITLE



END-HEADING

!*****************************************************************************
!                                                                            *
! FOOTER                                                                     *
!                                                                            *
!       These commands will be processed every time SQR writes a page. They  *
!       include a footer that must be in place in all pages of some reports  *
!                                                                            *
!*****************************************************************************

BEGIN-FOOTING 2

  #INCLUDE 'footer03.sqc'       ! Include file with footer information

END-FOOTING

!****************************************************************************
!                                                                           *
!   HOUSEKEEPING                                                            *
!                                                                           *
!       Set environment variables, initialize report id, initialize title   *
!       id, initialize date and time, initialize variables, and define      *
!       constants                                                           *
!                                                                           *
!       CALLED BY: BEGIN-REPORT                                             *
!                                                                           *
!****************************************************************************

BEGIN-PROCEDURE HOUSEKEEPING

   #INCLUDE 'setenv.sqc'                    !Set printer environment

    move {ID_PERSON}                        to #input_id_person


END-PROCEDURE HOUSEKEEPING

!****************************************************************************
!                                                                           *
!   PROCESS-REPORT                                                          *
!                                                                           *
!      This procedure includes the main processing logic of the report.     *
!                                                                           *
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : GET-CURRENT-INFO, PRINT-TITLE, GET-WORKLOAD-INFO       *
!****************************************************************************

BEGIN-PROCEDURE PROCESS-REPORT

move 0      to #count
    do GET-CURRENT-INFO
    do GET-TEMP-INFO
    do GET-WORKLOAD-INFO


END-PROCEDURE PROCESS-REPORT

!****************************************************************************
!                                                                           *
!   GET-CURRENT-INFO                                                        *
!                                                                           *
!       This procedure will retrieve the most current primary name and      *
!       information for the input person.                                   *
!                                                                           *
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      :                                                        *
!****************************************************************************

BEGIN-PROCEDURE GET-CURRENT-INFO

BEGIN-SELECT ON-ERROR=SqlErrorHandle

A.NM_NAME_FIRST
    move &A.NM_NAME_FIRST                   to $person_first

A.NM_NAME_MIDDLE
    move &A.NM_NAME_MIDDLE                  to $person_middle

A.NM_NAME_LAST
    move &A.NM_NAME_LAST                    to $person_last

CSUFFIX2A.decode
    move &CSUFFIX2A.decode                  to $person_suffix

FROM    NAME        A,
        PERSON      B,
        CSUFFIX2    CSUFFIX2A

WHERE   A.ID_PERSON = #input_id_person
AND     B.ID_PERSON = A.ID_PERSON
AND     A.IND_NAME_PRIMARY = 'Y'
AND     A.DT_NAME_END_DATE= '12/31/4712'
AND     CSUFFIX2A.CODE(+) = A.CD_NAME_SUFFIX

END-SELECT

END-PROCEDURE GET-CURRENT-INFO




!****************************************************************************
!                                                                           *
!   GET-WORKLOAD-INFO                                                       *
!                                                                           *
!       This procedure will retrieve all the investigation stages that the  *
!       person is or was involved in as a principal.                        *
!                                                                           *
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      :  PRINT-STAGE                                           *
!                                                                           *
!****************************************************************************

BEGIN-PROCEDURE GET-WORKLOAD-INFO

BEGIN-SELECT ON-ERROR=SqlErrorHandle

A.ID_WKLD_STAGE
    move &A.ID_WKLD_STAGE                   to #id_stage

A.NM_WKLD_STAGE
    move &A.NM_WKLD_STAGE                   to $stage_name

CCOUNT.DECODE
    move &CCOUNT.DECODE                     to $stage_county

A.CD_WKLD_STAGE
    move &A.CD_WKLD_STAGE                   to $stage_code

A.CD_WKLD_STAGE_TYPE
    move &A.CD_WKLD_STAGE_TYPE              to $stage_type

A.CD_WKLD_STAGE_PROGRAM
    move &A.CD_WKLD_STAGE_PROGRAM           to $stage_program

A.CD_WKLD_STAGE_REGION
    move &A.CD_WKLD_STAGE_REGION            to $stage_region

A.CD_WKLD_STAGE_PERS_ROLE
    move &A.CD_WKLD_STAGE_PERS_ROLE         to $stage_role

to_char(A.DT_WKLD_STAGE_PERS_LINK, 'MM/DD/YY') &date1
    move &date1                             to $dt_stage_link   ! date assigned

A.ID_WKLD_CASE
    move &A.ID_WKLD_CASE                    to #id_case

A.IND_WKLD_CASE_SENSITIVE
    move &A.IND_WKLD_CASE_SENSITIVE         to $stage_sens

A.NBR_WKLD_UNIT
    move &A.NBR_WKLD_UNIT                   to $unit_number

A.IND_WKLD_SUPERINT_NOTIF
    move &A.IND_WKLD_SUPERINT_NOTIF         to $sup_notif

A.IND_WKLD_STAGE_PERS_NEW
    move &A.IND_WKLD_STAGE_PERS_NEW         to $stage_new

A.CD_RECIDIVISM
    move &A.CD_RECIDIVISM                   to $cd_recidivism  !SIR 24104

to_char(S.DT_STAGE_START, 'MM/DD/YY') &date2
    move &date2                             to $stage_opened   !SIR 24104

  do PRINT-STAGE
  let #count = #count + 1
  if #count = 28
     NEW-PAGE
     move 0      to #count
  end-if



FROM    WORKLOAD            A,
        STAGE               S,
        CCOUNT            CCOUNT

WHERE   A.ID_WKLD_PERSON = #input_id_person
AND     S.ID_STAGE       = A.ID_WKLD_STAGE
AND     CCOUNT.CODE(+) = A.CD_WKLD_STAGE_CNTY
    #if {SORT_ORDER} = '2'
        ORDER BY A.IND_WKLD_STAGE_PERS_NEW desc, NVL(A.NM_WKLD_STAGE,' ')
    #else
    #if {SORT_ORDER} = '3'
        ORDER BY NVL(A.NM_WKLD_STAGE,' '), A.CD_WKLD_STAGE
    #else
    #if {SORT_ORDER} = '4'
        ORDER BY NVL(A.CD_WKLD_STAGE_CNTY,' '), NVL(A.NM_WKLD_STAGE,' ')
    #else
    #if {SORT_ORDER} = '5'
        ORDER BY A.CD_WKLD_STAGE, NVL(A.NM_WKLD_STAGE,' ')
    #else
    #if {SORT_ORDER} = '6'
        ORDER BY A.IND_WKLD_STAGE_PERS_NEW desc,
                 A.IND_WKLD_SUPERINT_NOTIF asc,
                 NVL(A.NM_WKLD_STAGE,' '), A.CD_WKLD_STAGE
    #else
    #if {SORT_ORDER} = '7'
        ORDER BY NVL(A.ID_WKLD_CASE,1),
                 NVL(A.NM_WKLD_STAGE,' '),
         A.CD_WKLD_STAGE
    #else
    #if {SORT_ORDER} = '8'
        ORDER BY A.CD_WKLD_STAGE_PERS_ROLE,
                 NVL(A.NM_WKLD_STAGE,' '),
         A.CD_WKLD_STAGE
    #else
    #if {SORT_ORDER} = '9'
        ORDER BY A.DT_WKLD_STAGE_PERS_LINK
    #end-if
    #end-if
    #end-if
    #end-if
    #end-if
    #end-if
    #end-if
    #end-if


END-SELECT


END-PROCEDURE GET-WORKLOAD-INFO


!****************************************************************************
!                                                                           *
!   GET-TEMP-INFO                                                           *
!                                                                           *
!       This procedure will retrieve all the investigation stages that the  *
!       person is or was involved in as a principal.                        *
!                                                                           *
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      :  PRINT-STAGE                                           *
!                                                                           *
!****************************************************************************

BEGIN-PROCEDURE GET-TEMP-INFO



BEGIN-SELECT ON-ERROR=SqlErrorHandle



B.ID_TEMP_STAGE
    move &B.ID_TEMP_STAGE                   to #id_stage

B.CD_TEMP_STAGE
    move &B.CD_TEMP_STAGE                   to $stage_code

B.CD_TEMP_STAGE_PERS_ROLE
    move &B.CD_TEMP_STAGE_PERS_ROLE         to $stage_role


    move ''                                 to $stage_name
    move ''                                 to $stage_county
    move ''                                 to $stage_type
    move ''                                 to $stage_opened       !SIR 24104
    move ''                                 to $cd_recidivism      !SIR 24104
    move ''                                 to $rcvm
    move ''                                 to $stage_program
    move ''                                 to $stage_region
    move ''                                 to $dt_stage_link
    move 0                                  to #id_case
    move ''                                 to $stage_sens
    move ''                                 to $unit_number
    move ''                                 to $sup_notif
    move ''                                 to $stage_new


  do PRINT-STAGE
  let #count = #count + 1
  if #count = 28
     NEW-PAGE
     move 0      to #count
  end-if


FROM    TEMP_STAGE_PERS_LINK B


WHERE   B.ID_TEMP_STAGE_PERSON = #input_id_person


END-SELECT


END-PROCEDURE GET-TEMP-INFO





!****************************************************************************
!                                                                           *
!   PRINT-STAGE                                                             *
!                                                                           *
!       This procedure prints the stage summary information.                *
!                                                                           *
!       CALLED BY  : GET-WORKLOAD-INFO                                      *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE PRINT-STAGE

if #count = 0 and $stage_sens = 'Y'
    print 'Y'                                    (+3,1)
end-if

if #count = 0 and $stage_sens <> 'Y'
    print ''                                     (+3,1)
end-if

if #count > 0 and $stage_sens = 'Y'
    print 'Y'                                    (+1,1)
end-if

if #count > 0 and $stage_sens <> 'Y'
    print ''                                     (+1,1)
end-if


if $stage_role = 'PR'
   print 'P'                                    (+0,6)
else
   print 'S'                                    (+0,6)
end-if

if $stage_new = '1'
print '#'                                       (+0,10)
print $stage_name                               (+0,11)
else
print $stage_name                               (+0,10)
end-if

print $stage_county                             (+0,36)
print $stage_code                               (+0,52)
print $stage_type                               (+0,56)
evaluate $cd_recidivism
  when = '1'
     move 'M' to $rcvm
  break
  when = '2'
     move 'O' to $rcvm
  break
  when = '3'
     move 'O/M' to $rcvm
  break
  when-other
     move '' to $rcvm
  break
end-evaluate
print $rcvm                                     (+0,63) !SIR 24104
print $stage_opened                             (+0,67) !SIR 24104
print $dt_stage_link                            (+0,76) ! date assigned

if $sup_notif = 'Y'
   print $sup_notif                             (+0,85)
else
   print ''                                     (+0,85)
end-if

print $stage_region                             (+0,88)
print $unit_number                              (+0,92)
print #id_stage                                 (+0,97) edit 8888888888888888
print #id_case                                  (+0,106) edit 8888888888888888
print $stage_program                            (+0,116)

END-PROCEDURE PRINT-STAGE

!****************************************************************************
!   PRINT-TITLE                                                             *
!                                                                           *
!       This procedure prints the title on the report.                      *
!                                                                           *
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : NONE                                                   *
!****************************************************************************
BEGIN-PROCEDURE PRINT-TITLE

print 'Employee Name: '                              (+1,1)
if $person_suffix <> ''
   let $person_name_suff = ', ' || $person_suffix
end-if
if $person_middle = ''
   let $person_name = $person_first || ' ' || $person_last || $person_name_suff
else
   let $person_name = $person_first || ' ' || $person_middle || ' ' || $person_last || $person_name_suff
end-if
print $person_name                              ()
move '' to $person_name_suff

print 'Employee ID: '                           (+1,1)
print #input_id_person                          () edit 8888888888888888
!   print '1234567890'                              (+1,1,120) fill !for testing
!   print '         |'                              (+1,1,120) fill !for testing

print 'Sens'                                    (+2,1)
print 'P/S'                                     (+0,6)
print 'Stage Name'                              (+0,10)
print 'County'                                  (+0,36)
print 'STG'                                     (+0,52)
print 'TYP'                                     (+0,56)
print 'Rcvm'                                    (+0,62)   !SIR 24104
print 'Opened'                                  (+0,68)   !SIR 24104
print 'Assigned'                                (+0,76)
print 'SU'                                      (+0,85)
print 'REG'                                     (+0,88)
print 'Unit'                                    (+0,92)
print 'Stage ID'                                (+0,97)
print 'Case ID'                                 (+0,106)
print 'PGM'                                     (+0,116)
print '-'                                       (+1,1,120) fill

END-PROCEDURE PRINT-TITLE

!****************************************************************************
!                                                                           *
!   WRAP-UP                                                                 *
!                                                                           *
!       This procedure prints the messages for the end of the report as well*
!       as over all totals.                                                 *
!                                                                           *
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE WRAP-UP

   NEW-PAGE

END-PROCEDURE WRAP-UP


!***********************************************************************
!                                                                      *
! SqlErrorHandle                                                       *
!                                                                      *
!      This section handles formatting of messages for SQL errors.     *
!      When an SQL error is encounterd, the program will write to      *
!      the log file, program processing does not stop for SQL errors.  *
!                                                                      *
!  CALLS:  None                                                        *
!                                                                      *
!***********************************************************************

BEGIN-PROCEDURE SqlErrorHandle


  print 'SQL error - Processing Terminated'               (+1,2)
  print $error                                            (+1,2)
  print 'ERROR: SQL error halted loader processing'       (+0)
  print $error                                            (+1,2)
  print 'SQL Error: '                                     (+0)
  print $sql-error                                        (+0)
  print $error                                            (+1,2)
  print 'SQL Status: '                                    (+0)
  print #sql-status                                       (+0)
  STOP

END-PROCEDURE SqlErrorHandle


!****************************************************************************
!                                                                           *
!                                INCLUDE SECTION                            *
!                                                                           *
!   Include all files that contain common modules or procedures that        *
!   will be used in the report                                              *
!****************************************************************************
#INCLUDE 'cfpstamp.sqc'
