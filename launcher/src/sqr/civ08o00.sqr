!*****************************************************************************
!  Medical/Mental Log                                                        *
!*****************************************************************************  
!
!*****************************************************************************
!                                                                            *
! PROGRAM NAME:         civ08o00.sqr                                         *
!                                                                            *
! PROGRAM LOCATION:     /caps/users/mccleabg/work/sqr                        *
!                                                                            *
!                                                                            *
! DATE:                 10/13/95                                             *
!                                                                            *
! PROGRAMMER NAME:      Brad McCleary                                        *
!                                                                            *
! PROGRAM DESCRIPTION:  The Medical/Mental Assessment Log report will allow  *
!                       the worker to produce a hardcopy of the information  *
!                       captured on the Medical/Mental Assessment Log window.*
!                                                                            *
!*****************************************************************************
!*****************************************************************************
!                                                                            *
! PROGRAM MODIFICATION SECTION                                               *
! ----------------------------                                               *
!                                                                            *
!   DATE     PROGRAMMER                       MODIFICATION                   *
! --------   ----------   -------------------------------------------------  *
! 10/13/95   B. McCleary  Initial Programming                                *
! 02/15/96   B.McCleary   SIR 3145 - Added link for person address and a     *
!                         condition to retrieve only primary name.           *
! 12/15/96   K. Cys       ENH - Added Name Person Full Suffix to Names.      *
! 04/21/04   ERIC DICKMAN Added more logic to the where clause ofthe         *
!                         GET-APPT-INFO SQL. The sql will return             *
!                         Medical/Mental Assessment Log for the current      *
!                         person ID, not all the person IDs in the Medical   *
!                         /Mental Assessment List                            *
! 05/21/04   E. Dickman   SIR 15184-The rpt will sort by APPT DATE in        *
!                         descending order.                                  *
!*****************************************************************************

!*****************************************************************************
!                                                                            *
! REPORT PROCESSING SECTION                                                  *
!                                                                            *
!       This procedure defines the beginning and end of the report proc-     *
!       essing. Housekeeping initializes all report values, Processing       *
!       processes the body of the report, and Wrap-Up prints the end of re-  *
!       port message and other wrap up functions.                            *
!                                                                            *
!*****************************************************************************

BEGIN-REPORT

    do HOUSEKEEPING

    do PROCESS-REPORT        

    do WRAP-UP

END-REPORT

!*****************************************************************************
!  SETUP-SECTION                                                             *
!                                                                            *
!       This section sets up common parameters including page size and       *
!       printer as well as input parameters                                  *
!                                                                            *
!*****************************************************************************
BEGIN-SETUP

    #ifdef ORACLE                           !compiler directive
        ask dbname 'Database Name'
        use {dbname}
    #endif

    #INCLUDE 'setup02b.sqc'                 ! control codes for Portrait 

    ask ID_EVENT                            !input parameter         
    ask ID_PERSON                           !input parameter         
    
END-SETUP

!*****************************************************************************
!                                                                            *
! HEADER                                                                     *
!                                                                            *
!       These commands will be processed every time SQR writes a page. They  *
!       include the report title, date, time, page number, report id, and    *
!       column headers. XXX lines are reserved to print the heading at the   *
!       top of each page. This includes blank lines. A common setup header   *
!       has been created called XXXXXXXXXXXXXXXXXXX for landscape or portrait*
!       reports.                                                             *
!                                                                            *
!*****************************************************************************

BEGIN-HEADING 4

  #INCLUDE 'header04.sqc'               !Include file with Header Information
                    !Specific to portrait on demand reports

  print 'MEDICAL/MENTAL ASSESSMENT LOG'               (+2) center 
                              
END-HEADING

!*****************************************************************************
!                                                                            *
! FOOTER                                                                     *
!                                                                            *
!       These commands will be processed every time SQR writes a page. They  *
!       include a footer that must be in place in all pages of some reports  *
!                                                                            *
!*****************************************************************************

BEGIN-FOOTING 2

  #INCLUDE 'footer04.sqc'       ! Include file with footer information
                                ! specific to portrait on demand report

 
END-FOOTING

!****************************************************************************
!                                                                           *
!   HOUSEKEEPING                                                            *
!                                                                           *
!       Set environment variables, initialize report id, initialize title   *
!       id, initialize date and time, initialize variables, and define      *
!       constants                                                           *
!                                                                           *
!       CALLED BY: BEGIN-REPORT                                             *
!                                                                           * 
!****************************************************************************

BEGIN-PROCEDURE HOUSEKEEPING

   #INCLUDE 'setenv.sqc'       !Set printer environment

   move '{ID_EVENT}'                          to #input_id_event
   move '{ID_PERSON}'                         to #input_id_person_principal
		
		 
  !************************************************
  ! Variables and Constants                       *
  !************************************************

   !***********************************************
   ! ID-PERSON-PRINCIPAL could not be found in the
   ! window WCD. Therefore we cannot pass it as input
   ! and we need to look for it in the professional
   ! assessment table
   !***********************************************

    if #input_id_person_principal = 0
        do GET-PERSON-PRINCIPAL
    end-if

END-PROCEDURE HOUSEKEEPING

!****************************************************************************
!                                                                           *
!   GET-PERSON-PRINCIPAL                                                    *
!                                                                           *
!      This procedure gets the person principal from the prof_assmt table   *
!                                                                           *
!       CALLED BY  : HOUSEKEEPING                                           *
!****************************************************************************

BEGIN-PROCEDURE GET-PERSON-PRINCIPAL

BEGIN-SELECT ON-ERROR=SqlErrorHandle

ID_PERSON_PRINCIPAL &id_person
   move &id_person                      to #input_id_person_principal
   
FROM PROFESSIONAL_ASSMT

WHERE ID_EVENT = #input_id_event

END-SELECT


END-PROCEDURE GET-PERSON-PRINCIPAL

!****************************************************************************
!                                                                           *
!   PROCESS-REPORT                                                          *
!                                                                           *
!      This procedure includes the main processing logic of the report.     *
!                                                                           *
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : GET-STAGE, GET-CASE-NAME-NUMBER, GET-PRINCIPAL-NAME,   *
!                    GET-APPT-INFO                                          *
!****************************************************************************

BEGIN-PROCEDURE PROCESS-REPORT 

    do GET-STAGE
    do GET-CASE-NAME-NUMBER
    do GET-PRINCIPAL-NAME
    do GET-APPT-INFO

END-PROCEDURE PROCESS-REPORT                   

!****************************************************************************
!                                                                           *
!   GET-STAGE                                                               *
!                                                                           *
!       This procedure will select the stage from the event table using the *
!       event that was input.                                               *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         * 
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-STAGE                  

BEGIN-SELECT  ON-ERROR=SqlErrorHandle

ID_EVENT_STAGE
   move &ID_EVENT_STAGE                               to #id_stage

FROM EVENT

WHERE ID_EVENT = #input_id_event

END-SELECT


END-PROCEDURE GET-STAGE

!****************************************************************************
!                                                                           *
!   GET-CASE-NAME-NUMBER                                                    *
!                                                                           *
!       This procedure will select case name and number from caps_case.     *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-CASE-NAME-NUMBER

BEGIN-SELECT ON-ERROR=SqlErrorHandle

A.NM_CASE
    move &A.NM_CASE                         to $Case_Name
    
A.ID_CASE    
    move &A.ID_CASE                         to #Case_Number
    
FROM  CAPS_CASE     A,
      STAGE         B

WHERE A.ID_CASE  = B.ID_CASE
AND   B.ID_STAGE = #id_stage

END-SELECT

END-PROCEDURE GET-CASE-NAME-NUMBER

!****************************************************************************
!                                                                           *
!   GET-PRINCIPAL-NAME                                                      *
!                                                                           *
!       This procedure will select the full name of the person who is       *
!       discussed in the report.                                            *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : PRINT-PRINCIPAL-NAME                                   *
!****************************************************************************

BEGIN-PROCEDURE GET-PRINCIPAL-NAME

BEGIN-SELECT ON-ERROR=SqlErrorHandle
    
A.NM_NAME_FIRST
    move &A.NM_NAME_FIRST                           to $princ_name_first
    
A.NM_NAME_MIDDLE
    move &A.NM_NAME_MIDDLE                          to $princ_name_middle
    
A.NM_NAME_LAST
    move &A.NM_NAME_LAST                            to $princ_name_last
    
CSUFFIX2A.decode                                    !***ENH***
    move &CSUFFIX2A.decode                          to $princ_name_suffix    

    do PRINT-PRINCIPAL-NAME

FROM    CSUFFIX2             CSUFFIX2A,
        NAME                 A
        
WHERE   A.ID_PERSON = #input_id_person_principal
AND     A.IND_NAME_PRIMARY = 'Y'                !SIR 3145 - Getting more than
                                                !           one person princ.
AND     A.DT_NAME_END_DATE = '12/31/4712'  !***ENH***
AND     A.CD_NAME_SUFFIX   = CSUFFIX2A.CODE(+)
                                                
END-SELECT
    
END-PROCEDURE GET-PRINCIPAL-NAME

!****************************************************************************
!                                                                           *
!   GET-APPT-INFO                                                           *
!                                                                           *
!       This procedure will select most of the field data needed to populate*
!       the report including the reason and state decodes.                  *
!                                                                           * 
!       CALLED BY  : PROCESS-REPORT                                         *
!       CALLS      : PRINT-APPT-INFO                                        *
!****************************************************************************

BEGIN-PROCEDURE GET-APPT-INFO

BEGIN-SELECT ON-ERROR=SqlErrorHandle

to_char(A.DT_PROF_ASSMT_APPT, 'MM/DD/YYYY') &date1
    move &date1                                     to $appt_date
    
CARSAPPT.decode
    move &CARSAPPT.decode                           to $reason_decode
    
A.TXT_PROF_ASSMT_FINDINGS    
    move &A.TXT_PROF_ASSMT_FINDINGS                 to $findings
    
A.TXT_PROF_ASSMT_CMNTS
    move &A.TXT_PROF_ASSMT_CMNTS                    to $comments 
    
B.NM_NAME_FIRST
    move &B.NM_NAME_FIRST                           to $prof_name_first
    
B.NM_NAME_MIDDLE
    move &B.NM_NAME_MIDDLE                          to $prof_name_middle
    
B.NM_NAME_LAST
    move &B.NM_NAME_LAST                            to $prof_name_last
    
CSUFFIX2B.decode                                    !***ENH***
    move &CSUFFIX2B.decode                          to $prof_name_suffix    

C.ADDR_PERS_ADDR_ST_LN_1    
    move &C.ADDR_PERS_ADDR_ST_LN_1                  to $prof_address_ln1
    
C.ADDR_PERS_ADDR_ST_LN_2    
    move &C.ADDR_PERS_ADDR_ST_LN_2                  to $prof_address_ln2
  
C.ADDR_PERSON_ADDR_CITY
    move &C.ADDR_PERSON_ADDR_CITY                   to $prof_city
                               
CSTATE.decode &dec1
    move &dec1                                      to $prof_state_decode
    
C.ADDR_PERSON_ADDR_ZIP    
    move &C.ADDR_PERSON_ADDR_ZIP                    to $prof_zip
    
D.NBR_PERSON_PHONE
    move &D.NBR_PERSON_PHONE                        to $prof_phone

A.TXT_PROF_ASSMT_OTHER
    move &A.TXT_PROF_ASSMT_OTHER                    to $other

A.ADDR_PROF_ASSMT_ST_LN_1    
    move &A.ADDR_PROF_ASSMT_ST_LN_1                 to $other_address_ln1
    
A.ADDR_PROF_ASSMT_ST_LN_2    
    move &A.ADDR_PROF_ASSMT_ST_LN_2                 to $other_address_ln2
  
A.ADDR_PROF_ASSMT_CITY
    move &A.ADDR_PROF_ASSMT_CITY                    to $other_city
                               
CSTATE1.decode &dec2
    move &dec2                                      to $other_state_decode
    
A.ADDR_PROF_ASSMT_ZIP    
    move &A.ADDR_PROF_ASSMT_ZIP                     to $other_zip
    
A.NBR_PROF_ASSMT_PHONE
    move &A.NBR_PROF_ASSMT_PHONE                    to $other_phone
        
    do PRINT-APPT-INFO
    
FROM    CARSAPPT            CARSAPPT,
        CSTATE              CSTATE,
        CSTATE              CSTATE1,
        CSUFFIX2            CSUFFIX2B,
        PROFESSIONAL_ASSMT  A,
        NAME                B,
        PERSON_ADDRESS      C,
        PERSON_PHONE        D,
        ADDRESS_PERSON_LINK E, 
        EVENT               F  !***ECD-SIR-14928***
        
WHERE   A.ID_PERSON_PRINCIPAL = #input_id_person_principal
AND     B.DT_NAME_END_DATE(+) = '12/31/4712'
AND     B.IND_NAME_PRIMARY(+)    = 'N'
AND     A.ID_PERSON_PROFESSIONAL = B.ID_PERSON(+)
AND     A.ID_PERSON_PROFESSIONAL = D.ID_PERSON(+)
AND     A.ID_PERSON_PROFESSIONAL = E.ID_PERSON(+)
AND     E.ID_PERSON_ADDR = C.ID_PERSON_ADDR(+)  
AND     D.IND_PERSON_PHONE_INVALID(+) = 'N'
AND     D.CD_PERSON_PHONE_TYPE(+) = 'BS'
AND     E.IND_PERS_ADDR_LINK_INVALID(+) = 'N'
AND     CARSAPPT.CODE(+) = A.CD_PROF_ASSMT_APPT_RSN
AND     CSTATE.CODE(+) = C.CD_PERSON_ADDR_STATE  
AND     CSTATE1.CODE(+) = A.CD_PROF_ASSMT_STATE
AND     CSUFFIX2B.CODE(+) = B.CD_NAME_SUFFIX
AND     F.ID_EVENT_STAGE = #id_stage !***ECD-SIR-14928***
AND     F.ID_EVENT = A.ID_EVENT !***ECD-SIR-14928***
AND     D.IND_PERSON_PHONE_PRIMARY(+) = 'Y' !***ECD-SIR-14928***
AND     D.DT_PERSON_PHONE_END(+) = '12/31/4712'	!***ECD-SIR-14928***
AND     E.IND_PERS_ADDR_LINK_PRIMARY(+) = 'Y' !***ECD-SIR-14928***
AND     E.DT_PERS_ADDR_LINK_END(+) = '12/31/4712' !***ECD-SIR-14928***				
ORDER BY A.DT_PROF_ASSMT_APPT DESC !***ECD-15184***

END-SELECT
    
END-PROCEDURE GET-APPT-INFO

!****************************************************************************
!                                                                           *
!   PRINT-PRINCIPAL-NAME                                                    *
!                                                                           *
!       This procedure prints the name of the primary person discussed.     *
!                                                                           * 
!       CALLED BY  : GET-PRINCIPAL-NAME                                     *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE PRINT-PRINCIPAL-NAME

if $princ_name_suffix <> ''  
   let $principal_name_suff = ', ' || $princ_name_suffix
end-if
if $princ_name_middle = ''
   let $principal_name = $princ_name_first || ' ' || $princ_name_last || $principal_name_suff
else
   let $principal_name = $princ_name_first || ' ' || $princ_name_middle || ' ' || $princ_name_last || $principal_name_suff
end-if          
print 'PRINCIPAL''S NAME '                          (+2,1) 
print $principal_name                               (+0,20)

move '' to $principal_name_suff  !***ENH***

END-PROCEDURE PRINT-PRINCIPAL-NAME

!****************************************************************************
!                                                                           *
!   PRINT-APPT-INFO                                                         *
!                                                                           *
!       This procedure prints the majority of fields within the report.  It *
!       also contains if-statements to prevent commas from being printed in *
!       case there is no city entered for either the professional or the    *
!       other person.                                                       *
!                                                                           * 
!       CALLED BY  : GET-APPT-INFO                                          *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE PRINT-APPT-INFO

print 'APPT DATE '                                  (+3,1)
print $appt_date                                    (+0,20)
print 'REASON FOR APPT '                            (+2,1)
print $reason_decode                                (+0,20)
print 'FINDINGS '                                   (+2,1)
print $findings                                     (+0,20) wrap 58 2
print 'COMMENTS '                                   (+2,1)
print $comments                                     (+0,20) wrap 58 6
print 'PROFESSIONAL '                               (+2,1)
if $prof_name_suffix <> ''  !***ENH***
   let $professional_name_suff = ', ' || $prof_name_suffix
end-if
if $prof_name_middle = ''
   let $prof_name = $prof_name_first || ' ' || $prof_name_last || $professional_name_suff
else
   let $prof_name = $prof_name_first || ' ' || $prof_name_middle || ' ' || $prof_name_last || $professional_name_suff
end-if        
print $prof_name                                    (+0,20)
move '' to $professional_name_suff  !***ENH***
print 'ADDRESS/PHONE '                              (+1,1)
print $prof_address_ln1                             (+0,20)
print $prof_address_ln2                             (+1,20)
print $prof_city                                    (+1,20)
if $prof_city != ''  
  print ', '                                        ()
end-if
print $prof_state_decode                            ()
print ' '                                           ()
print $prof_zip                                     ()

if substr($prof_phone,8,1) = ''
  let $prof_print = substr($prof_phone,1,3) || '-' || substr($prof_phone,4,4)
else
  let $prof_print = '(' || substr($prof_phone,1,3) || ') ' || substr($prof_phone,4,3) || '-' || substr($prof_phone,7,4)
end-if

if $prof_phone <> ''
  print $prof_print                                   (+1,20)
end-if

print 'OTHER'                                       (+2,1)
print $other                                        (+0,20)
print 'ADDRESS/PHONE '                              (+1,1)
print $other_address_ln1                            (+0,20)
print $other_address_ln2                            (+1,20)
print $other_city                                   (+1,20)
if $other_city != ''  
  print ', '                                        ()
end-if
print $other_state_decode                           ()
print ' '                                           ()
print $other_zip                                    ()

if substr($other_phone,8,1) = ''
  let $other_print = substr($other_phone,1,3) || '-' || substr($other_phone,4,4)
else
  let $other_print = '(' || substr($other_phone,1,3) || ') ' || substr($other_phone,4,3) || '-' || substr($other_phone,7,4)
end-if

if $other_phone <> ''
  print $other_print                                  (+1,20)
end-if

print '_'                                           (+1,1,78) fill

END-PROCEDURE PRINT-APPT-INFO

!****************************************************************************
!                                                                           *
!   WRAP-UP                                                                 *
!                                                                           *
!       This procedure prints the messages for the end of the report as well*
!       as over all totals.                                                 *
!                                                                           * 
!       CALLED BY  : BEGIN-REPORT                                           *
!       CALLS      : NONE                                                   *
!****************************************************************************

BEGIN-PROCEDURE WRAP-UP

   NEW-PAGE

END-PROCEDURE WRAP-UP


!***********************************************************************
!                                                                      *
! SqlErrorHandle                                                       *
!                                                                      *
!      This section handles formatting of messages for SQL errors.     *
!      When an SQL error is encounterd, the program will write to      *                                                                      
!      the log file, program processing does not stop for SQL errors.  *
!                                                                      *
!  CALLS:  None                                                        *
!                                                                      *
!***********************************************************************

BEGIN-PROCEDURE SqlErrorHandle 


  print 'SQL error - Processing Terminated'               (+1,2)
  print $error                                            (+1,2)
  print 'ERROR: SQL error halted loader processing'       (+0)
  print $error                                            (+1,2)
  print 'SQL Error: '                                     (+0)
  print $sql-error                                        (+0)
  print $error                                            (+1,2)
  print 'SQL Status: '                                    (+0)
  print #sql-status                                       (+0)

  STOP

END-PROCEDURE SqlErrorHandle


!****************************************************************************
!                                                                           *
!                                INCLUDE SECTION                            *
!                                                                           *
!   Include all files that contain common modules or procedures that        *
!   will be used in the report                                              *
!****************************************************************************


#INCLUDE 'cfpstamp.sqc'
