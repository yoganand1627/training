// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package gov.georgia.dhr.dfcs.sacwis.ws.document;

import com.sun.xml.rpc.client.BasicService;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.*;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.rpc.*;
import javax.xml.rpc.encoding.*;
import javax.xml.namespace.QName;

public class DocumentServices_SerializerRegistry implements SerializerConstants {
    public DocumentServices_SerializerRegistry() {
    }
    
    public TypeMappingRegistry getRegistry() {
        
        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping12 = registry.getTypeMapping(SOAP12Constants.NS_SOAP_ENCODING);
        TypeMapping mapping = registry.getTypeMapping(SOAPConstants.NS_SOAP_ENCODING);
        TypeMapping mapping2 = registry.getTypeMapping("");
        {
            QName type = new QName("http://localhost/sacwis/", "reconstructDocument");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.ReconstructDocument_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.ReconstructDocument.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "getDocumentResponse");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.GetDocumentResponse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.GetDocumentResponse.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "getDocument");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.GetDocument_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.GetDocument.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "document");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.Document_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.Document.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "appendDocumentsResponse");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.AppendDocumentsResponse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.AppendDocumentsResponse.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "reconstructDocumentResponse");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.ReconstructDocumentResponse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.ReconstructDocumentResponse.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "appendDocuments");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.AppendDocuments_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.AppendDocuments.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "getBlankDocument");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.GetBlankDocument_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.GetBlankDocument.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "getBlankDocumentResponse");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.GetBlankDocumentResponse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.GetBlankDocumentResponse.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "previewDocumentResponse");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.PreviewDocumentResponse_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.PreviewDocumentResponse.class, type, serializer);
        }
        {
            QName type = new QName("http://localhost/sacwis/", "previewDocument");
            CombinedSerializer serializer = new gov.georgia.dhr.dfcs.sacwis.ws.document.PreviewDocument_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,gov.georgia.dhr.dfcs.sacwis.ws.document.PreviewDocument.class, type, serializer);
        }
        return registry;
    }
    
    private static void registerSerializer(TypeMapping mapping, java.lang.Class javaType, javax.xml.namespace.QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }
    
}
